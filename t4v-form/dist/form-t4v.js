/*! For license information please see form-t4v.js.LICENSE.txt */
var e={5250:(e,t,n)=>{const a=n(1472),o=n(6038),d=n(91),r=n(6249),i=n(2211),s=n(8079),l=n(8160);e.exports=function e(t){if(!t)return null;if("BlankNode"===t.termType)return a(t);if("DefaultGraph"===t.termType)return d();if("Literal"===t.termType)return r(t);if("NamedNode"===t.termType)return i(t);if("Quad"===t.termType||t.subject&&t.predicate&&t.object&&t.graph)return s(t,e);if("Variable"===t.termType)return l(t);if(t[Symbol.iterator])return o(t,e);throw new Error(`unknown termType ${t.termType}`)}},1472:e=>{e.exports=function(e){return"_:"+e.value}},6038:e=>{e.exports=function(e,t){return[...e].map((e=>t(e))).join("\n")+"\n"}},91:e=>{e.exports=function(){return""}},6249:(e,t,n)=>{const a=n(2211),o=/["\\\\\n\r]/,d=/["\\\\\n\r]/g,r={'"':'\\"',"\\":"\\\\","\n":"\\n","\r":"\\r"};function i(e){return r[e]}e.exports=function(e){const t=(n=e.value,o.test(n)?n.replace(d,i):n);var n;return"http://www.w3.org/2001/XMLSchema#string"===e.datatype.value?'"'+t+'"':"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"===e.datatype.value?'"'+t+'"@'+e.language:'"'+t+'"^^'+a(e.datatype)}},2211:e=>{e.exports=function(e){return"<"+e.value+">"}},8079:e=>{e.exports=function(e,t){const n=t(e.subject),a=t(e.predicate),o=t(e.object),d=t(e.graph);return`${n} ${a} ${o} ${d?d+" ":""}.`}},8160:e=>{e.exports=function(e){return"?"+e.value}},5568:e=>{const{AbortController:t,AbortSignal:n}="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0;e.exports=t,e.exports.AbortSignal=n,e.exports.default=t},7526:(e,t)=>{t.byteLength=function(e){var t=i(e),n=t[0],a=t[1];return 3*(n+a)/4-a},t.toByteArray=function(e){var t,n,d=i(e),r=d[0],s=d[1],l=new o(function(e,t,n){return 3*(t+n)/4-n}(0,r,s)),u=0,m=s>0?r-4:r;for(n=0;n<m;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],l[u++]=t>>16&255,l[u++]=t>>8&255,l[u++]=255&t;return 2===s&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,l[u++]=255&t),1===s&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,l[u++]=t>>8&255,l[u++]=255&t),l},t.fromByteArray=function(e){for(var t,a=e.length,o=a%3,d=[],r=16383,i=0,l=a-o;i<l;i+=r)d.push(s(e,i,i+r>l?l:i+r));return 1===o?(t=e[a-1],d.push(n[t>>2]+n[t<<4&63]+"==")):2===o&&(t=(e[a-2]<<8)+e[a-1],d.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),d.join("")};for(var n=[],a=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r=0;r<64;++r)n[r]=d[r],a[d.charCodeAt(r)]=r;function i(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function s(e,t,a){for(var o,d,r=[],i=t;i<a;i+=3)o=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),r.push(n[(d=o)>>18&63]+n[d>>12&63]+n[d>>6&63]+n[63&d]);return r.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},8287:(e,t,n)=>{const a=n(7526),o=n(251),d="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=s,t.SlowBuffer=function(e){return+e!=e&&(e=0),s.alloc(+e)},t.INSPECT_MAX_BYTES=50;const r=2147483647;function i(e){if(e>r)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,s.prototype),t}function s(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return m(e)}return l(e,t,n)}function l(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!s.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|f(e,t);let a=i(n);const o=a.write(e,t);return o!==n&&(a=a.slice(0,o)),a}(e,t);if(ArrayBuffer.isView(e))return function(e){if(W(e,Uint8Array)){const t=new Uint8Array(e);return p(t.buffer,t.byteOffset,t.byteLength)}return c(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(W(e,ArrayBuffer)||e&&W(e.buffer,ArrayBuffer))return p(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(W(e,SharedArrayBuffer)||e&&W(e.buffer,SharedArrayBuffer)))return p(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return s.from(a,t,n);const o=function(e){if(s.isBuffer(e)){const t=0|h(e.length),n=i(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||K(e.length)?i(0):c(e):"Buffer"===e.type&&Array.isArray(e.data)?c(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return s.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function m(e){return u(e),i(e<0?0:0|h(e))}function c(e){const t=e.length<0?0:0|h(e.length),n=i(t);for(let a=0;a<t;a+=1)n[a]=255&e[a];return n}function p(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let a;return a=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(a,s.prototype),a}function h(e){if(e>=r)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+r.toString(16)+" bytes");return 0|e}function f(e,t){if(s.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||W(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===n)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return J(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return H(e).length;default:if(o)return a?-1:J(e).length;t=(""+t).toLowerCase(),o=!0}}function N(e,t,n){let a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return R(this,t,n);case"utf8":case"utf-8":return q(this,t,n);case"ascii":return E(this,t,n);case"latin1":case"binary":return I(this,t,n);case"base64":return C(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return j(this,t,n);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function g(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function y(e,t,n,a,o){if(0===e.length)return-1;if("string"==typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),K(n=+n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=s.from(t,a)),s.isBuffer(t))return 0===t.length?-1:$(e,t,n,a,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):$(e,[t],n,a,o);throw new TypeError("val must be string, number or Buffer")}function $(e,t,n,a,o){let d,r=1,i=e.length,s=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;r=2,i/=2,s/=2,n/=2}function l(e,t){return 1===r?e[t]:e.readUInt16BE(t*r)}if(o){let a=-1;for(d=n;d<i;d++)if(l(e,d)===l(t,-1===a?0:d-a)){if(-1===a&&(a=d),d-a+1===s)return a*r}else-1!==a&&(d-=d-a),a=-1}else for(n+s>i&&(n=i-s),d=n;d>=0;d--){let n=!0;for(let a=0;a<s;a++)if(l(e,d+a)!==l(t,a)){n=!1;break}if(n)return d}return-1}function b(e,t,n,a){n=Number(n)||0;const o=e.length-n;a?(a=Number(a))>o&&(a=o):a=o;const d=t.length;let r;for(a>d/2&&(a=d/2),r=0;r<a;++r){const a=parseInt(t.substr(2*r,2),16);if(K(a))return r;e[n+r]=a}return r}function v(e,t,n,a){return z(J(t,e.length-n),e,n,a)}function w(e,t,n,a){return z(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,a)}function x(e,t,n,a){return z(H(t),e,n,a)}function _(e,t,n,a){return z(function(e,t){let n,a,o;const d=[];for(let r=0;r<e.length&&!((t-=2)<0);++r)n=e.charCodeAt(r),a=n>>8,o=n%256,d.push(o),d.push(a);return d}(t,e.length-n),e,n,a)}function C(e,t,n){return 0===t&&n===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(t,n))}function q(e,t,n){n=Math.min(e.length,n);const a=[];let o=t;for(;o<n;){const t=e[o];let d=null,r=t>239?4:t>223?3:t>191?2:1;if(o+r<=n){let n,a,i,s;switch(r){case 1:t<128&&(d=t);break;case 2:n=e[o+1],128==(192&n)&&(s=(31&t)<<6|63&n,s>127&&(d=s));break;case 3:n=e[o+1],a=e[o+2],128==(192&n)&&128==(192&a)&&(s=(15&t)<<12|(63&n)<<6|63&a,s>2047&&(s<55296||s>57343)&&(d=s));break;case 4:n=e[o+1],a=e[o+2],i=e[o+3],128==(192&n)&&128==(192&a)&&128==(192&i)&&(s=(15&t)<<18|(63&n)<<12|(63&a)<<6|63&i,s>65535&&s<1114112&&(d=s))}}null===d?(d=65533,r=1):d>65535&&(d-=65536,a.push(d>>>10&1023|55296),d=56320|1023&d),a.push(d),o+=r}return function(e){const t=e.length;if(t<=S)return String.fromCharCode.apply(String,e);let n="",a=0;for(;a<t;)n+=String.fromCharCode.apply(String,e.slice(a,a+=S));return n}(a)}t.kMaxLength=r,s.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),s.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(s.prototype,"parent",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.buffer}}),Object.defineProperty(s.prototype,"offset",{enumerable:!0,get:function(){if(s.isBuffer(this))return this.byteOffset}}),s.poolSize=8192,s.from=function(e,t,n){return l(e,t,n)},Object.setPrototypeOf(s.prototype,Uint8Array.prototype),Object.setPrototypeOf(s,Uint8Array),s.alloc=function(e,t,n){return function(e,t,n){return u(e),e<=0?i(e):void 0!==t?"string"==typeof n?i(e).fill(t,n):i(e).fill(t):i(e)}(e,t,n)},s.allocUnsafe=function(e){return m(e)},s.allocUnsafeSlow=function(e){return m(e)},s.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==s.prototype},s.compare=function(e,t){if(W(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),W(t,Uint8Array)&&(t=s.from(t,t.offset,t.byteLength)),!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,a=t.length;for(let o=0,d=Math.min(n,a);o<d;++o)if(e[o]!==t[o]){n=e[o],a=t[o];break}return n<a?-1:a<n?1:0},s.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return s.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const a=s.allocUnsafe(t);let o=0;for(n=0;n<e.length;++n){let t=e[n];if(W(t,Uint8Array))o+t.length>a.length?(s.isBuffer(t)||(t=s.from(t)),t.copy(a,o)):Uint8Array.prototype.set.call(a,t,o);else{if(!s.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(a,o)}o+=t.length}return a},s.byteLength=f,s.prototype._isBuffer=!0,s.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)g(this,t,t+1);return this},s.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},s.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},s.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?q(this,0,e):N.apply(this,arguments)},s.prototype.toLocaleString=s.prototype.toString,s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){let e="";const n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},d&&(s.prototype[d]=s.prototype.inspect),s.prototype.compare=function(e,t,n,a,o){if(W(e,Uint8Array)&&(e=s.from(e,e.offset,e.byteLength)),!s.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===a&&(a=0),void 0===o&&(o=this.length),t<0||n>e.length||a<0||o>this.length)throw new RangeError("out of range index");if(a>=o&&t>=n)return 0;if(a>=o)return-1;if(t>=n)return 1;if(this===e)return 0;let d=(o>>>=0)-(a>>>=0),r=(n>>>=0)-(t>>>=0);const i=Math.min(d,r),l=this.slice(a,o),u=e.slice(t,n);for(let e=0;e<i;++e)if(l[e]!==u[e]){d=l[e],r=u[e];break}return d<r?-1:r<d?1:0},s.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},s.prototype.indexOf=function(e,t,n){return y(this,e,t,n,!0)},s.prototype.lastIndexOf=function(e,t,n){return y(this,e,t,n,!1)},s.prototype.write=function(e,t,n,a){if(void 0===t)a="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)a=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}const o=this.length-t;if((void 0===n||n>o)&&(n=o),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let d=!1;for(;;)switch(a){case"hex":return b(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":case"latin1":case"binary":return w(this,e,t,n);case"base64":return x(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,n);default:if(d)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),d=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const S=4096;function E(e,t,n){let a="";n=Math.min(e.length,n);for(let o=t;o<n;++o)a+=String.fromCharCode(127&e[o]);return a}function I(e,t,n){let a="";n=Math.min(e.length,n);for(let o=t;o<n;++o)a+=String.fromCharCode(e[o]);return a}function R(e,t,n){const a=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>a)&&(n=a);let o="";for(let a=t;a<n;++a)o+=X[e[a]];return o}function j(e,t,n){const a=e.slice(t,n);let o="";for(let e=0;e<a.length-1;e+=2)o+=String.fromCharCode(a[e]+256*a[e+1]);return o}function L(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function T(e,t,n,a,o,d){if(!s.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<d)throw new RangeError('"value" argument is out of bounds');if(n+a>e.length)throw new RangeError("Index out of range")}function A(e,t,n,a,o){V(t,a,o,e,n,7);let d=Number(t&BigInt(4294967295));e[n++]=d,d>>=8,e[n++]=d,d>>=8,e[n++]=d,d>>=8,e[n++]=d;let r=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=r,r>>=8,e[n++]=r,r>>=8,e[n++]=r,r>>=8,e[n++]=r,n}function P(e,t,n,a,o){V(t,a,o,e,n,7);let d=Number(t&BigInt(4294967295));e[n+7]=d,d>>=8,e[n+6]=d,d>>=8,e[n+5]=d,d>>=8,e[n+4]=d;let r=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=r,r>>=8,e[n+2]=r,r>>=8,e[n+1]=r,r>>=8,e[n]=r,n+8}function O(e,t,n,a,o,d){if(n+a>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function k(e,t,n,a,d){return t=+t,n>>>=0,d||O(e,0,n,4),o.write(e,t,n,a,23,4),n+4}function D(e,t,n,a,d){return t=+t,n>>>=0,d||O(e,0,n,8),o.write(e,t,n,a,52,8),n+8}s.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const a=this.subarray(e,t);return Object.setPrototypeOf(a,s.prototype),a},s.prototype.readUintLE=s.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||L(e,t,this.length);let a=this[e],o=1,d=0;for(;++d<t&&(o*=256);)a+=this[e+d]*o;return a},s.prototype.readUintBE=s.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||L(e,t,this.length);let a=this[e+--t],o=1;for(;t>0&&(o*=256);)a+=this[e+--t]*o;return a},s.prototype.readUint8=s.prototype.readUInt8=function(e,t){return e>>>=0,t||L(e,1,this.length),this[e]},s.prototype.readUint16LE=s.prototype.readUInt16LE=function(e,t){return e>>>=0,t||L(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUint16BE=s.prototype.readUInt16BE=function(e,t){return e>>>=0,t||L(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUint32LE=s.prototype.readUInt32LE=function(e,t){return e>>>=0,t||L(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUint32BE=s.prototype.readUInt32BE=function(e,t){return e>>>=0,t||L(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readBigUInt64LE=Y((function(e){Q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||U(e,this.length-8);const a=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(a)+(BigInt(o)<<BigInt(32))})),s.prototype.readBigUInt64BE=Y((function(e){Q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||U(e,this.length-8);const a=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(a)<<BigInt(32))+BigInt(o)})),s.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||L(e,t,this.length);let a=this[e],o=1,d=0;for(;++d<t&&(o*=256);)a+=this[e+d]*o;return o*=128,a>=o&&(a-=Math.pow(2,8*t)),a},s.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||L(e,t,this.length);let a=t,o=1,d=this[e+--a];for(;a>0&&(o*=256);)d+=this[e+--a]*o;return o*=128,d>=o&&(d-=Math.pow(2,8*t)),d},s.prototype.readInt8=function(e,t){return e>>>=0,t||L(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){e>>>=0,t||L(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt16BE=function(e,t){e>>>=0,t||L(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},s.prototype.readInt32LE=function(e,t){return e>>>=0,t||L(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return e>>>=0,t||L(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readBigInt64LE=Y((function(e){Q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||U(e,this.length-8);const a=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(a)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),s.prototype.readBigInt64BE=Y((function(e){Q(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||U(e,this.length-8);const a=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(a)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),s.prototype.readFloatLE=function(e,t){return e>>>=0,t||L(e,4,this.length),o.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return e>>>=0,t||L(e,4,this.length),o.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return e>>>=0,t||L(e,8,this.length),o.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return e>>>=0,t||L(e,8,this.length),o.read(this,e,!1,52,8)},s.prototype.writeUintLE=s.prototype.writeUIntLE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||T(this,e,t,n,Math.pow(2,8*n)-1,0);let o=1,d=0;for(this[t]=255&e;++d<n&&(o*=256);)this[t+d]=e/o&255;return t+n},s.prototype.writeUintBE=s.prototype.writeUIntBE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||T(this,e,t,n,Math.pow(2,8*n)-1,0);let o=n-1,d=1;for(this[t+o]=255&e;--o>=0&&(d*=256);)this[t+o]=e/d&255;return t+n},s.prototype.writeUint8=s.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,1,255,0),this[t]=255&e,t+1},s.prototype.writeUint16LE=s.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeUint16BE=s.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeUint32LE=s.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},s.prototype.writeUint32BE=s.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeBigUInt64LE=Y((function(e,t=0){return A(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeBigUInt64BE=Y((function(e,t=0){return P(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),s.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*n-1);T(this,e,t,n,a-1,-a)}let o=0,d=1,r=0;for(this[t]=255&e;++o<n&&(d*=256);)e<0&&0===r&&0!==this[t+o-1]&&(r=1),this[t+o]=(e/d>>0)-r&255;return t+n},s.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*n-1);T(this,e,t,n,a-1,-a)}let o=n-1,d=1,r=0;for(this[t+o]=255&e;--o>=0&&(d*=256);)e<0&&0===r&&0!==this[t+o+1]&&(r=1),this[t+o]=(e/d>>0)-r&255;return t+n},s.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},s.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},s.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},s.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||T(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},s.prototype.writeBigInt64LE=Y((function(e,t=0){return A(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeBigInt64BE=Y((function(e,t=0){return P(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),s.prototype.writeFloatLE=function(e,t,n){return k(this,e,t,!0,n)},s.prototype.writeFloatBE=function(e,t,n){return k(this,e,t,!1,n)},s.prototype.writeDoubleLE=function(e,t,n){return D(this,e,t,!0,n)},s.prototype.writeDoubleBE=function(e,t,n){return D(this,e,t,!1,n)},s.prototype.copy=function(e,t,n,a){if(!s.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-n&&(a=e.length-t+n);const o=a-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,a):Uint8Array.prototype.set.call(e,this.subarray(n,a),t),o},s.prototype.fill=function(e,t,n,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,n=this.length):"string"==typeof n&&(a=n,n=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!s.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){const t=e.charCodeAt(0);("utf8"===a&&t<128||"latin1"===a)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{const d=s.isBuffer(e)?e:s.from(e,a),r=d.length;if(0===r)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<n-t;++o)this[o+t]=d[o%r]}return this};const M={};function B(e,t,n){M[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function F(e){let t="",n=e.length;const a="-"===e[0]?1:0;for(;n>=a+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function V(e,t,n,a,o,d){if(e>n||e<t){const a="bigint"==typeof t?"n":"";let o;throw o=d>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${8*(d+1)}${a}`:`>= -(2${a} ** ${8*(d+1)-1}${a}) and < 2 ** ${8*(d+1)-1}${a}`:`>= ${t}${a} and <= ${n}${a}`,new M.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,n){Q(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||U(t,e.length-(n+1))}(a,o,d)}function Q(e,t){if("number"!=typeof e)throw new M.ERR_INVALID_ARG_TYPE(t,"number",e)}function U(e,t,n){if(Math.floor(e)!==e)throw Q(e,n),new M.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new M.ERR_BUFFER_OUT_OF_BOUNDS;throw new M.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}B("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),B("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),B("ERR_OUT_OF_RANGE",(function(e,t,n){let a=`The value of "${e}" is out of range.`,o=n;return Number.isInteger(n)&&Math.abs(n)>2**32?o=F(String(n)):"bigint"==typeof n&&(o=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(o=F(o)),o+="n"),a+=` It must be ${t}. Received ${o}`,a}),RangeError);const G=/[^+/0-9A-Za-z-_]/g;function J(e,t){let n;t=t||1/0;const a=e.length;let o=null;const d=[];for(let r=0;r<a;++r){if(n=e.charCodeAt(r),n>55295&&n<57344){if(!o){if(n>56319){(t-=3)>-1&&d.push(239,191,189);continue}if(r+1===a){(t-=3)>-1&&d.push(239,191,189);continue}o=n;continue}if(n<56320){(t-=3)>-1&&d.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(t-=3)>-1&&d.push(239,191,189);if(o=null,n<128){if((t-=1)<0)break;d.push(n)}else if(n<2048){if((t-=2)<0)break;d.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;d.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;d.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return d}function H(e){return a.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(G,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function z(e,t,n,a){let o;for(o=0;o<a&&!(o+n>=t.length||o>=e.length);++o)t[o+n]=e[o];return o}function W(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function K(e){return e!=e}const X=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const a=16*n;for(let o=0;o<16;++o)t[a+o]=e[n]+e[o]}return t}();function Y(e){return"undefined"==typeof BigInt?Z:e}function Z(){throw new Error("BigInt not supported")}},2341:e=>{e.exports=function e(t){return null===t||"object"!=typeof t||null!=t.toJSON?JSON.stringify(t):Array.isArray(t)?"["+t.reduce(((t,n,a)=>t+(0===a?"":",")+e(void 0===n||"symbol"==typeof n?null:n)),"")+"]":"{"+Object.keys(t).sort().reduce(((n,a,o)=>void 0===t[a]||"symbol"==typeof t[a]?n:n+(0===n.length?"":",")+e(a)+":"+e(t[a])),"")+"}"}},7833:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,o=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(o=a))})),t.splice(o,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(736)(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},736:(e,t,n)=>{e.exports=function(e){function t(e){let n,o,d,r=null;function i(...e){if(!i.enabled)return;const a=i,o=Number(new Date),d=o-(n||o);a.diff=d,a.prev=n,a.curr=o,n=o,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,o)=>{if("%%"===n)return"%";r++;const d=t.formatters[o];if("function"==typeof d){const t=e[r];n=d.call(a,t),e.splice(r,1),r--}return n})),t.formatArgs.call(a,e),(a.log||t.log).apply(a,e)}return i.namespace=e,i.useColors=t.useColors(),i.color=t.selectColor(e),i.extend=a,i.destroy=t.destroy,Object.defineProperty(i,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(o!==t.namespaces&&(o=t.namespaces,d=t.enabled(e)),d),set:e=>{r=e}}),"function"==typeof t.init&&t.init(i),i}function a(e,n){const a=t(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(o),...t.skips.map(o).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"==typeof e?e:"").split(/[\s,]+/),o=a.length;for(n=0;n<o;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(6585),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},7007:e=>{var t,n="object"==typeof Reflect?Reflect:null,a=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var o=Number.isNaN||function(e){return e!=e};function d(){d.init.call(this)}e.exports=d,e.exports.once=function(e,t){return new Promise((function(n,a){function o(n){e.removeListener(t,d),a(n)}function d(){"function"==typeof e.removeListener&&e.removeListener("error",o),n([].slice.call(arguments))}f(e,t,d,{once:!0}),"error"!==t&&function(e,t,n){"function"==typeof e.on&&f(e,"error",t,{once:!0})}(e,o)}))},d.EventEmitter=d,d.prototype._events=void 0,d.prototype._eventsCount=0,d.prototype._maxListeners=void 0;var r=10;function i(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function s(e){return void 0===e._maxListeners?d.defaultMaxListeners:e._maxListeners}function l(e,t,n,a){var o,d,r,l;if(i(n),void 0===(d=e._events)?(d=e._events=Object.create(null),e._eventsCount=0):(void 0!==d.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),d=e._events),r=d[t]),void 0===r)r=d[t]=n,++e._eventsCount;else if("function"==typeof r?r=d[t]=a?[n,r]:[r,n]:a?r.unshift(n):r.push(n),(o=s(e))>0&&r.length>o&&!r.warned){r.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+r.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=r.length,l=u,console&&console.warn&&console.warn(l)}return e}function u(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function m(e,t,n){var a={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},o=u.bind(a);return o.listener=n,a.wrapFn=o,o}function c(e,t,n){var a=e._events;if(void 0===a)return[];var o=a[t];return void 0===o?[]:"function"==typeof o?n?[o.listener||o]:[o]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(o):h(o,o.length)}function p(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function h(e,t){for(var n=new Array(t),a=0;a<t;++a)n[a]=e[a];return n}function f(e,t,n,a){if("function"==typeof e.on)a.once?e.once(t,n):e.on(t,n);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function o(d){a.once&&e.removeEventListener(t,o),n(d)}))}}Object.defineProperty(d,"defaultMaxListeners",{enumerable:!0,get:function(){return r},set:function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");r=e}}),d.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},d.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||o(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},d.prototype.getMaxListeners=function(){return s(this)},d.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var o="error"===e,d=this._events;if(void 0!==d)o=o&&void 0===d.error;else if(!o)return!1;if(o){var r;if(t.length>0&&(r=t[0]),r instanceof Error)throw r;var i=new Error("Unhandled error."+(r?" ("+r.message+")":""));throw i.context=r,i}var s=d[e];if(void 0===s)return!1;if("function"==typeof s)a(s,this,t);else{var l=s.length,u=h(s,l);for(n=0;n<l;++n)a(u[n],this,t)}return!0},d.prototype.addListener=function(e,t){return l(this,e,t,!1)},d.prototype.on=d.prototype.addListener,d.prototype.prependListener=function(e,t){return l(this,e,t,!0)},d.prototype.once=function(e,t){return i(t),this.on(e,m(this,e,t)),this},d.prototype.prependOnceListener=function(e,t){return i(t),this.prependListener(e,m(this,e,t)),this},d.prototype.removeListener=function(e,t){var n,a,o,d,r;if(i(t),void 0===(a=this._events))return this;if(void 0===(n=a[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete a[e],a.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(o=-1,d=n.length-1;d>=0;d--)if(n[d]===t||n[d].listener===t){r=n[d].listener,o=d;break}if(o<0)return this;0===o?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,o),1===n.length&&(a[e]=n[0]),void 0!==a.removeListener&&this.emit("removeListener",e,r||t)}return this},d.prototype.off=d.prototype.removeListener,d.prototype.removeAllListeners=function(e){var t,n,a;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var o,d=Object.keys(n);for(a=0;a<d.length;++a)"removeListener"!==(o=d[a])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(a=t.length-1;a>=0;a--)this.removeListener(e,t[a]);return this},d.prototype.listeners=function(e){return c(this,e,!0)},d.prototype.rawListeners=function(e){return c(this,e,!1)},d.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},d.prototype.listenerCount=p,d.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},251:(e,t)=>{t.read=function(e,t,n,a,o){var d,r,i=8*o-a-1,s=(1<<i)-1,l=s>>1,u=-7,m=n?o-1:0,c=n?-1:1,p=e[t+m];for(m+=c,d=p&(1<<-u)-1,p>>=-u,u+=i;u>0;d=256*d+e[t+m],m+=c,u-=8);for(r=d&(1<<-u)-1,d>>=-u,u+=a;u>0;r=256*r+e[t+m],m+=c,u-=8);if(0===d)d=1-l;else{if(d===s)return r?NaN:1/0*(p?-1:1);r+=Math.pow(2,a),d-=l}return(p?-1:1)*r*Math.pow(2,d-a)},t.write=function(e,t,n,a,o,d){var r,i,s,l=8*d-o-1,u=(1<<l)-1,m=u>>1,c=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=a?0:d-1,h=a?1:-1,f=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,r=u):(r=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-r))<1&&(r--,s*=2),(t+=r+m>=1?c/s:c*Math.pow(2,1-m))*s>=2&&(r++,s/=2),r+m>=u?(i=0,r=u):r+m>=1?(i=(t*s-1)*Math.pow(2,o),r+=m):(i=t*Math.pow(2,m-1)*Math.pow(2,o),r=0));o>=8;e[n+p]=255&i,p+=h,i/=256,o-=8);for(r=r<<o|i,l+=o;l>0;e[n+p]=255&r,p+=h,r/=256,l-=8);e[n+p-h]|=128*f}},7034:(e,t,n)=>{const{isArray:a,isObject:o,isString:d}=n(7382),{asArray:r}=n(9263),{prependBase:i}=n(470),s=n(2207),l=n(7532);function u(e){throw new s("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:e})}function m({context:e,base:t}){if(!e)return;const n=e["@context"];if(d(n))e["@context"]=i(t,n);else if(a(n))for(let e=0;e<n.length;++e){const a=n[e];d(a)?n[e]=i(t,a):o(a)&&m({context:{"@context":a},base:t})}else if(o(n))for(const e in n)m({context:n[e],base:t})}e.exports=class{constructor({sharedCache:e}){this.perOpCache=new Map,this.sharedCache=e}async resolve({activeCtx:e,context:t,documentLoader:n,base:i,cycles:s=new Set}){t&&o(t)&&t["@context"]&&(t=t["@context"]),t=r(t);const m=[];for(const r of t){if(d(r)){let t=this._get(r);t||(t=await this._resolveRemoteContext({activeCtx:e,url:r,documentLoader:n,base:i,cycles:s})),a(t)?m.push(...t):m.push(t);continue}if(null===r){m.push(new l({document:null}));continue}o(r)||u(t);const c=JSON.stringify(r);let p=this._get(c);p||(p=new l({document:r}),this._cacheResolvedContext({key:c,resolved:p,tag:"static"})),m.push(p)}return m}_get(e){let t=this.perOpCache.get(e);if(!t){const n=this.sharedCache.get(e);n&&(t=n.get("static"),t&&this.perOpCache.set(e,t))}return t}_cacheResolvedContext({key:e,resolved:t,tag:n}){if(this.perOpCache.set(e,t),void 0!==n){let a=this.sharedCache.get(e);a||(a=new Map,this.sharedCache.set(e,a)),a.set(n,t)}return t}async _resolveRemoteContext({activeCtx:e,url:t,documentLoader:n,base:a,cycles:o}){t=i(a,t);const{context:d,remoteDoc:r}=await this._fetchContext({activeCtx:e,url:t,documentLoader:n,cycles:o});m({context:d,base:a=r.documentUrl||t});const s=await this.resolve({activeCtx:e,context:d,documentLoader:n,base:a,cycles:o});return this._cacheResolvedContext({key:t,resolved:s,tag:r.tag}),s}async _fetchContext({activeCtx:e,url:t,documentLoader:n,cycles:r}){if(r.size>10)throw new s("Maximum number of @context URLs exceeded.","jsonld.ContextUrlError",{code:"json-ld-1.0"===e.processingMode?"loading remote context failed":"context overflow",max:10});if(r.has(t))throw new s("Cyclical @context URLs detected.","jsonld.ContextUrlError",{code:"json-ld-1.0"===e.processingMode?"recursive context inclusion":"context overflow",url:t});let i,l;r.add(t);try{l=await n(t),i=l.document||null,d(i)&&(i=JSON.parse(i))}catch(e){throw new s("Dereferencing a URL did not result in a valid JSON-LD object. Possible causes are an inaccessible URL perhaps due to a same-origin policy (ensure the server uses CORS if you are using client-side JavaScript), too many redirects, a non-JSON response, or more than one HTTP Link Header was provided for a remote context.","jsonld.InvalidUrl",{code:"loading remote context failed",url:t,cause:e})}if(!o(i))throw new s("Dereferencing a URL did not result in a JSON object. The response was valid JSON, but it was not a JSON object.","jsonld.InvalidUrl",{code:"invalid remote context",url:t});return i="@context"in i?{"@context":i["@context"]}:{"@context":{}},l.contextUrl&&(a(i["@context"])||(i["@context"]=[i["@context"]]),i["@context"].push(l.contextUrl)),{context:i,remoteDoc:l}}}},2207:e=>{e.exports=class extends Error{constructor(e="An unspecified JSON-LD error occurred.",t="jsonld.Error",n={}){super(e),this.name=t,this.message=e,this.details=n}}},5445:e=>{e.exports=e=>{class t{toString(){return"[object JsonLdProcessor]"}}return Object.defineProperty(t,"prototype",{writable:!1,enumerable:!1}),Object.defineProperty(t.prototype,"constructor",{writable:!0,enumerable:!1,configurable:!0,value:t}),t.compact=function(t,n){return arguments.length<2?Promise.reject(new TypeError("Could not compact, too few arguments.")):e.compact(t,n)},t.expand=function(t){return arguments.length<1?Promise.reject(new TypeError("Could not expand, too few arguments.")):e.expand(t)},t.flatten=function(t){return arguments.length<1?Promise.reject(new TypeError("Could not flatten, too few arguments.")):e.flatten(t)},t}},8229:(e,t,n)=>{e.exports=n(989).NQuads},3743:e=>{e.exports=class{constructor(){this._requests={}}wrapLoader(e){const t=this;return t._loader=e,function(){return t.add.apply(t,arguments)}}async add(e){let t=this._requests[e];if(t)return Promise.resolve(t);t=this._requests[e]=this._loader(e);try{return await t}finally{delete this._requests[e]}}}},7532:(e,t,n)=>{const a=n(9749);e.exports=class{constructor({document:e}){this.document=e,this.cache=new a({max:10})}getProcessed(e){return this.cache.get(e)}setProcessed(e,t){this.cache.set(e,t)}}},1058:(e,t,n)=>{const a=n(2207),{isArray:o,isObject:d,isString:r,isUndefined:i}=n(7382),{isList:s,isValue:l,isGraph:u,isSimpleGraph:m,isSubjectReference:c}=n(3978),{expandIri:p,getContextValue:h,isKeyword:f,process:N,processingMode:g}=n(1972),{removeBase:y,prependBase:$}=n(470),{REGEX_KEYWORD:b,addValue:v,asArray:w,compareShortestLeast:x}=n(9263),_={};function C(e,t,n){if("@nest"!==p(e,t,{vocab:!0},n))throw new a("JSON-LD compact error; nested property must have an @nest value resolving to @nest.","jsonld.SyntaxError",{code:"invalid @nest value"})}e.exports=_,_.compact=async({activeCtx:e,activeProperty:t=null,element:n,options:p={}})=>{if(o(n)){let a=[];for(let o=0;o<n.length;++o){const d=await _.compact({activeCtx:e,activeProperty:t,element:n[o],options:p});null!==d&&a.push(d)}return p.compactArrays&&1===a.length&&0===(h(e,t,"@container")||[]).length&&(a=a[0]),a}const y=h(e,t,"@context");if(i(y)||(e=await N({activeCtx:e,localCtx:y,propagate:!0,overrideProtected:!0,options:p})),d(n)){if(p.link&&"@id"in n&&p.link.hasOwnProperty(n["@id"])){const e=p.link[n["@id"]];for(let t=0;t<e.length;++t)if(e[t].expanded===n)return e[t].compacted}if(l(n)||c(n)){const a=_.compactValue({activeCtx:e,activeProperty:t,value:n,options:p});return p.link&&c(n)&&(p.link.hasOwnProperty(n["@id"])||(p.link[n["@id"]]=[]),p.link[n["@id"]].push({expanded:n,compacted:a})),a}if(s(n)&&(h(e,t,"@container")||[]).includes("@list"))return _.compact({activeCtx:e,activeProperty:t,element:n["@list"],options:p});const y="@reverse"===t,$={},b=e;l(n)||c(n)||(e=e.revertToPreviousContext());const x=h(b,t,"@context");i(x)||(e=await N({activeCtx:e,localCtx:x,propagate:!0,overrideProtected:!0,options:p})),p.link&&"@id"in n&&(p.link.hasOwnProperty(n["@id"])||(p.link[n["@id"]]=[]),p.link[n["@id"]].push({expanded:n,compacted:$}));let q=n["@type"]||[];q.length>1&&(q=Array.from(q).sort());const S=e;for(const t of q){const n=_.compactIri({activeCtx:S,iri:t,relativeTo:{vocab:!0}}),a=h(b,n,"@context");i(a)||(e=await N({activeCtx:e,localCtx:a,options:p,propagate:!1}))}const E=Object.keys(n).sort();for(const i of E){const c=n[i];if("@id"!==i)if("@type"!==i)if("@reverse"!==i)if("@preserve"!==i)if("@index"!==i)if("@graph"!==i&&"@list"!==i&&"@included"!==i&&f(i)){const t=_.compactIri({activeCtx:e,iri:i,relativeTo:{vocab:!0}});v($,t,c)}else{if(!o(c))throw new a("JSON-LD expansion error; expanded value must be an array.","jsonld.SyntaxError");if(0===c.length){const t=_.compactIri({activeCtx:e,iri:i,value:c,relativeTo:{vocab:!0},reverse:y}),n=e.mappings.has(t)?e.mappings.get(t)["@nest"]:null;let a=$;n&&(C(e,n,p),d($[n])||($[n]={}),a=$[n]),v(a,t,c,{propertyIsArray:!0})}for(const t of c){const n=_.compactIri({activeCtx:e,iri:i,value:t,relativeTo:{vocab:!0},reverse:y}),a=e.mappings.has(n)?e.mappings.get(n)["@nest"]:null;let c=$;a&&(C(e,a,p),d($[a])||($[a]={}),c=$[a]);const f=h(e,n,"@container")||[],N=u(t),g=s(t);let b;g?b=t["@list"]:N&&(b=t["@graph"]);let x=await _.compact({activeCtx:e,activeProperty:n,element:g||N?b:t,options:p});if(g){if(o(x)||(x=[x]),f.includes("@list")){v(c,n,x,{valueIsArray:!0,allowDuplicate:!0});continue}x={[_.compactIri({activeCtx:e,iri:"@list",relativeTo:{vocab:!0}})]:x},"@index"in t&&(x[_.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=t["@index"])}if(N)if(f.includes("@graph")&&(f.includes("@id")||f.includes("@index")&&m(t))){let a;c.hasOwnProperty(n)?a=c[n]:c[n]=a={};const o=(f.includes("@id")?t["@id"]:t["@index"])||_.compactIri({activeCtx:e,iri:"@none",relativeTo:{vocab:!0}});v(a,o,x,{propertyIsArray:!p.compactArrays||f.includes("@set")})}else f.includes("@graph")&&m(t)?(o(x)&&x.length>1&&(x={"@included":x}),v(c,n,x,{propertyIsArray:!p.compactArrays||f.includes("@set")})):(o(x)&&1===x.length&&p.compactArrays&&(x=x[0]),x={[_.compactIri({activeCtx:e,iri:"@graph",relativeTo:{vocab:!0}})]:x},"@id"in t&&(x[_.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]=t["@id"]),"@index"in t&&(x[_.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=t["@index"]),v(c,n,x,{propertyIsArray:!p.compactArrays||f.includes("@set")}));else if(f.includes("@language")||f.includes("@index")||f.includes("@id")||f.includes("@type")){let a,o;if(c.hasOwnProperty(n)?a=c[n]:c[n]=a={},f.includes("@language"))l(x)&&(x=x["@value"]),o=t["@language"];else if(f.includes("@index")){const a=h(e,n,"@index")||"@index",d=_.compactIri({activeCtx:e,iri:a,relativeTo:{vocab:!0}});if("@index"===a)o=t["@index"],delete x[d];else{let e;if([o,...e]=w(x[a]||[]),r(o))switch(e.length){case 0:delete x[a];break;case 1:x[a]=e[0];break;default:x[a]=e}else o=null}}else if(f.includes("@id")){const t=_.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}});o=x[t],delete x[t]}else if(f.includes("@type")){const a=_.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}});let d;switch([o,...d]=w(x[a]||[]),d.length){case 0:delete x[a];break;case 1:x[a]=d[0];break;default:x[a]=d}1===Object.keys(x).length&&"@id"in t&&(x=await _.compact({activeCtx:e,activeProperty:n,element:{"@id":t["@id"]},options:p}))}o||(o=_.compactIri({activeCtx:e,iri:"@none",relativeTo:{vocab:!0}})),v(a,o,x,{propertyIsArray:f.includes("@set")})}else{const e=!p.compactArrays||f.includes("@set")||f.includes("@list")||o(x)&&0===x.length||"@list"===i||"@graph"===i;v(c,n,x,{propertyIsArray:e})}}}else{if((h(e,t,"@container")||[]).includes("@index"))continue;const n=_.compactIri({activeCtx:e,iri:i,relativeTo:{vocab:!0}});v($,n,c)}else{const n=await _.compact({activeCtx:e,activeProperty:t,element:c,options:p});o(n)&&0===n.length||v($,i,n)}else{const t=await _.compact({activeCtx:e,activeProperty:"@reverse",element:c,options:p});for(const n in t)if(e.mappings.has(n)&&e.mappings.get(n).reverse){const a=t[n],o=(h(e,n,"@container")||[]).includes("@set")||!p.compactArrays;v($,n,a,{propertyIsArray:o}),delete t[n]}if(Object.keys(t).length>0){const n=_.compactIri({activeCtx:e,iri:i,relativeTo:{vocab:!0}});v($,n,t)}}else{let t=w(c).map((e=>_.compactIri({activeCtx:b,iri:e,relativeTo:{vocab:!0}})));1===t.length&&(t=t[0]);const n=_.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}}),a=(h(e,n,"@container")||[]).includes("@set")&&g(e,1.1)||o(t)&&0===c.length;v($,n,t,{propertyIsArray:a})}else{let t=w(c).map((t=>_.compactIri({activeCtx:e,iri:t,relativeTo:{vocab:!1},base:p.base})));1===t.length&&(t=t[0]),$[_.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]=t}}return $}return n},_.compactIri=({activeCtx:e,iri:t,value:n=null,relativeTo:o={vocab:!1},reverse:r=!1,base:i=null})=>{if(null===t)return t;e.isPropertyTermScoped&&e.previousContext&&(e=e.previousContext);const m=e.getInverse();if(f(t)&&t in m&&"@none"in m[t]&&"@type"in m[t]["@none"]&&"@none"in m[t]["@none"]["@type"])return m[t]["@none"]["@type"]["@none"];if(o.vocab&&t in m){const a=e["@language"]||"@none",o=[];d(n)&&"@index"in n&&!("@graph"in n)&&o.push("@index","@index@set"),d(n)&&"@preserve"in n&&(n=n["@preserve"][0]),u(n)?("@index"in n&&o.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in n&&o.push("@graph@id","@graph@id@set"),o.push("@graph","@graph@set","@set"),"@index"in n||o.push("@graph@index","@graph@index@set","@index","@index@set"),"@id"in n||o.push("@graph@id","@graph@id@set")):d(n)&&!l(n)&&o.push("@id","@id@set","@type","@set@type");let i="@language",m="@null";if(r)i="@type",m="@reverse",o.push("@set");else if(s(n)){"@index"in n||o.push("@list");const e=n["@list"];if(0===e.length)i="@any",m="@none";else{let t=0===e.length?a:null,n=null;for(let a=0;a<e.length;++a){const o=e[a];let d="@none",r="@none";if(l(o)?"@direction"in o?d=`${(o["@language"]||"").toLowerCase()}_${o["@direction"]}`:"@language"in o?d=o["@language"].toLowerCase():"@type"in o?r=o["@type"]:d="@null":r="@id",null===t?t=d:d!==t&&l(o)&&(t="@none"),null===n?n=r:r!==n&&(n="@none"),"@none"===t&&"@none"===n)break}t=t||"@none",n=n||"@none","@none"!==n?(i="@type",m=n):m=t}}else{if(l(n))if("@language"in n&&!("@index"in n)){o.push("@language","@language@set"),m=n["@language"];const e=n["@direction"];e&&(m=`${m}_${e}`)}else"@direction"in n&&!("@index"in n)?m=`_${n["@direction"]}`:"@type"in n&&(i="@type",m=n["@type"]);else i="@type",m="@id";o.push("@set")}o.push("@none"),d(n)&&!("@index"in n)&&o.push("@index","@index@set"),l(n)&&1===Object.keys(n).length&&o.push("@language","@language@set");const c=function(e,t,n,a,o,r){null===r&&(r="@null");const i=[];if(("@id"===r||"@reverse"===r)&&d(n)&&"@id"in n){"@reverse"===r&&i.push("@reverse");const t=_.compactIri({activeCtx:e,iri:n["@id"],relativeTo:{vocab:!0}});e.mappings.has(t)&&e.mappings.get(t)&&e.mappings.get(t)["@id"]===n["@id"]?i.push.apply(i,["@vocab","@id"]):i.push.apply(i,["@id","@vocab"])}else{i.push(r);const e=i.find((e=>e.includes("_")));e&&i.push(e.replace(/^[^_]+_/,"_"))}i.push("@none");const s=e.inverse[t];for(const e of a){if(!(e in s))continue;const t=s[e][o];for(const e of i)if(e in t)return t[e]}return null}(e,t,n,o,i,m);if(null!==c)return c}if(o.vocab&&"@vocab"in e){const n=e["@vocab"];if(0===t.indexOf(n)&&t!==n){const a=t.substr(n.length);if(!e.mappings.has(a))return a}}let c=null;const p=[];let h=e.fastCurieMap;const N=t.length-1;for(let e=0;e<N&&t[e]in h;++e)h=h[t[e]],""in h&&p.push(h[""][0]);for(let a=p.length-1;a>=0;--a){const o=p[a],d=o.terms;for(const a of d){const d=a+":"+t.substr(o.iri.length);e.mappings.get(a)._prefix&&(!e.mappings.has(d)||null===n&&e.mappings.get(d)["@id"]===t)&&(null===c||x(d,c)<0)&&(c=d)}}if(null!==c)return c;for(const[n,o]of e.mappings)if(o&&o._prefix&&t.startsWith(n+":"))throw new a(`Absolute IRI "${t}" confused with prefix "${n}".`,"jsonld.SyntaxError",{code:"IRI confused with prefix",context:e});if(!o.vocab){if("@base"in e){if(e["@base"]){const n=y($(i,e["@base"]),t);return b.test(n)?`./${n}`:n}return t}return y(i,t)}return t},_.compactValue=({activeCtx:e,activeProperty:t,value:n,options:a})=>{if(l(n)){const a=h(e,t,"@type"),o=h(e,t,"@language"),d=h(e,t,"@direction"),i=h(e,t,"@container")||[],s="@index"in n&&!i.includes("@index");if(!s&&"@none"!==a){if(n["@type"]===a)return n["@value"];if("@language"in n&&n["@language"]===o&&"@direction"in n&&n["@direction"]===d)return n["@value"];if("@language"in n&&n["@language"]===o)return n["@value"];if("@direction"in n&&n["@direction"]===d)return n["@value"]}const l=Object.keys(n).length,u=1===l||2===l&&"@index"in n&&!s,m="@language"in e,c=r(n["@value"]),p=e.mappings.has(t)&&null===e.mappings.get(t)["@language"];if(u&&"@none"!==a&&(!m||!c||p))return n["@value"];const f={};return s&&(f[_.compactIri({activeCtx:e,iri:"@index",relativeTo:{vocab:!0}})]=n["@index"]),"@type"in n?f[_.compactIri({activeCtx:e,iri:"@type",relativeTo:{vocab:!0}})]=_.compactIri({activeCtx:e,iri:n["@type"],relativeTo:{vocab:!0}}):"@language"in n&&(f[_.compactIri({activeCtx:e,iri:"@language",relativeTo:{vocab:!0}})]=n["@language"]),"@direction"in n&&(f[_.compactIri({activeCtx:e,iri:"@direction",relativeTo:{vocab:!0}})]=n["@direction"]),f[_.compactIri({activeCtx:e,iri:"@value",relativeTo:{vocab:!0}})]=n["@value"],f}const o=p(e,t,{vocab:!0},a),d=h(e,t,"@type"),i=_.compactIri({activeCtx:e,iri:n["@id"],relativeTo:{vocab:"@vocab"===d},base:a.base});return"@id"===d||"@vocab"===d||"@graph"===o?i:{[_.compactIri({activeCtx:e,iri:"@id",relativeTo:{vocab:!0}})]:i}}},9378:e=>{const t="http://www.w3.org/1999/02/22-rdf-syntax-ns#",n="http://www.w3.org/2001/XMLSchema#";e.exports={LINK_HEADER_REL:"http://www.w3.org/ns/json-ld#context",LINK_HEADER_CONTEXT:"http://www.w3.org/ns/json-ld#context",RDF:t,RDF_LIST:t+"List",RDF_FIRST:t+"first",RDF_REST:t+"rest",RDF_NIL:t+"nil",RDF_TYPE:t+"type",RDF_PLAIN_LITERAL:t+"PlainLiteral",RDF_XML_LITERAL:t+"XMLLiteral",RDF_JSON_LITERAL:t+"JSON",RDF_OBJECT:t+"object",RDF_LANGSTRING:t+"langString",XSD:n,XSD_BOOLEAN:n+"boolean",XSD_DOUBLE:n+"double",XSD_INTEGER:n+"integer",XSD_STRING:n+"string"}},1972:(e,t,n)=>{const a=n(9263),o=n(2207),{isArray:d,isObject:r,isString:i,isUndefined:s}=n(7382),{isAbsolute:l,isRelative:u,prependBase:m}=n(470),{handleEvent:c}=n(2246),{REGEX_BCP47:p,REGEX_KEYWORD:h,asArray:f,compareShortestLeast:N}=n(9263),g=new Map,y={};function $(e,t,n,a,o,d){if(null===t||!i(t)||y.isKeyword(t))return t;if(t.match(h))return null;if(a&&a.hasOwnProperty(t)&&!0!==o.get(t)&&y.createTermDefinition({activeCtx:e,localCtx:a,term:t,defined:o,options:d}),(n=n||{}).vocab){const n=e.mappings.get(t);if(null===n)return null;if(r(n)&&"@id"in n)return n["@id"]}const s=t.indexOf(":");if(s>0){const n=t.substr(0,s),r=t.substr(s+1);if("_"===n||0===r.indexOf("//"))return t;a&&a.hasOwnProperty(n)&&y.createTermDefinition({activeCtx:e,localCtx:a,term:n,defined:o,options:d});const i=e.mappings.get(n);if(i&&i._prefix)return i["@id"]+r;if(l(t))return t}if(n.vocab&&"@vocab"in e)t=e["@vocab"]+t;else if(n.base){let n,a;"@base"in e?e["@base"]?(a=m(d.base,e["@base"]),n=m(a,t)):(a=e["@base"],n=t):(a=d.base,n=m(d.base,t)),t=n}return t}function b(e,t){if(!e||"object"!=typeof e||!t||"object"!=typeof t)return e===t;const n=Array.isArray(e);if(n!==Array.isArray(t))return!1;if(n){if(e.length!==t.length)return!1;for(let n=0;n<e.length;++n)if(!b(e[n],t[n]))return!1;return!0}const a=Object.keys(e),o=Object.keys(t);if(a.length!==o.length)return!1;for(const n in e){let a=e[n],o=t[n];if("@container"===n&&Array.isArray(a)&&Array.isArray(o)&&(a=a.slice().sort(),o=o.slice().sort()),!b(a,o))return!1}return!0}e.exports=y,y.process=async({activeCtx:e,localCtx:t,options:n,propagate:a=!0,overrideProtected:s=!1,cycles:h=new Set})=>{if(r(t)&&"@context"in t&&d(t["@context"])&&(t=t["@context"]),0===f(t).length)return e;const N=[],g=[({event:e,next:t})=>{N.push(e),t()}];n.eventHandler&&g.push(n.eventHandler);const b=n;n={...n,eventHandler:g};const v=await n.contextResolver.resolve({activeCtx:e,context:t,documentLoader:n.documentLoader,base:n.base});r(v[0].document)&&"boolean"==typeof v[0].document["@propagate"]&&(a=v[0].document["@propagate"]);let w=e;a||w.previousContext||(w=w.clone(),w.previousContext=e);for(const a of v){let{document:d}=a;if(e=w,null===d){if(!s&&0!==Object.keys(e.protected).length)throw new o("Tried to nullify a context with protected terms outside of a term definition.","jsonld.SyntaxError",{code:"invalid context nullification"});w=e=y.getInitialContext(n).clone();continue}const f=a.getProcessed(e);if(f){if(b.eventHandler)for(const e of f.events)c({event:e,options:b});w=e=f.context;continue}if(r(d)&&"@context"in d&&(d=d["@context"]),!r(d))throw new o("Invalid JSON-LD syntax; @context must be an object.","jsonld.SyntaxError",{code:"invalid local context",context:d});w=w.clone();const g=new Map;if("@version"in d){if(1.1!==d["@version"])throw new o("Unsupported JSON-LD version: "+d["@version"],"jsonld.UnsupportedVersion",{code:"invalid @version value",context:d});if(e.processingMode&&"json-ld-1.0"===e.processingMode)throw new o("@version: "+d["@version"]+" not compatible with "+e.processingMode,"jsonld.ProcessingModeConflict",{code:"processing mode conflict",context:d});w.processingMode="json-ld-1.1",w["@version"]=d["@version"],g.set("@version",!0)}if(w.processingMode=w.processingMode||e.processingMode,"@base"in d){let e=d["@base"];if(null===e||l(e));else{if(!u(e))throw new o('Invalid JSON-LD syntax; the value of "@base" in a @context must be an absolute IRI, a relative IRI, or null.',"jsonld.SyntaxError",{code:"invalid base IRI",context:d});e=m(w["@base"],e)}w["@base"]=e,g.set("@base",!0)}if("@vocab"in d){const e=d["@vocab"];if(null===e)delete w["@vocab"];else{if(!i(e))throw new o('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:d});if(!l(e)&&y.processingMode(w,1))throw new o('Invalid JSON-LD syntax; the value of "@vocab" in a @context must be an absolute IRI.',"jsonld.SyntaxError",{code:"invalid vocab mapping",context:d});{const t=$(w,e,{vocab:!0,base:!0},void 0,void 0,n);l(t)||n.eventHandler&&c({event:{type:["JsonLdEvent"],code:"relative @vocab reference",level:"warning",message:"Relative @vocab reference found.",details:{vocab:t}},options:n}),w["@vocab"]=t}}g.set("@vocab",!0)}if("@language"in d){const e=d["@language"];if(null===e)delete w["@language"];else{if(!i(e))throw new o('Invalid JSON-LD syntax; the value of "@language" in a @context must be a string or null.',"jsonld.SyntaxError",{code:"invalid default language",context:d});e.match(p)||n.eventHandler&&c({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:e}},options:n}),w["@language"]=e.toLowerCase()}g.set("@language",!0)}if("@direction"in d){const t=d["@direction"];if("json-ld-1.0"===e.processingMode)throw new o("Invalid JSON-LD syntax; @direction not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context member",context:d});if(null===t)delete w["@direction"];else{if("ltr"!==t&&"rtl"!==t)throw new o('Invalid JSON-LD syntax; the value of "@direction" in a @context must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:d});w["@direction"]=t}g.set("@direction",!0)}if("@propagate"in d){const n=d["@propagate"];if("json-ld-1.0"===e.processingMode)throw new o("Invalid JSON-LD syntax; @propagate not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:d});if("boolean"!=typeof n)throw new o("Invalid JSON-LD syntax; @propagate value must be a boolean.","jsonld.SyntaxError",{code:"invalid @propagate value",context:t});g.set("@propagate",!0)}if("@import"in d){const a=d["@import"];if("json-ld-1.0"===e.processingMode)throw new o("Invalid JSON-LD syntax; @import not compatible with "+e.processingMode,"jsonld.SyntaxError",{code:"invalid context entry",context:d});if(!i(a))throw new o("Invalid JSON-LD syntax; @import must be a string.","jsonld.SyntaxError",{code:"invalid @import value",context:t});const r=await n.contextResolver.resolve({activeCtx:e,context:a,documentLoader:n.documentLoader,base:n.base});if(1!==r.length)throw new o("Invalid JSON-LD syntax; @import must reference a single context.","jsonld.SyntaxError",{code:"invalid remote context",context:t});const s=r[0].getProcessed(e);if(s)d=s;else{const n=r[0].document;if("@import"in n)throw new o("Invalid JSON-LD syntax: imported context must not include @import.","jsonld.SyntaxError",{code:"invalid context entry",context:t});for(const e in n)d.hasOwnProperty(e)||(d[e]=n[e]);r[0].setProcessed(e,d)}g.set("@import",!0)}g.set("@protected",d["@protected"]||!1);for(const e in d)if(y.createTermDefinition({activeCtx:w,localCtx:d,term:e,defined:g,options:n,overrideProtected:s}),r(d[e])&&"@context"in d[e]){const t=d[e]["@context"];let a=!0;if(i(t)){const e=m(n.base,t);h.has(e)?a=!1:h.add(e)}if(a)try{await y.process({activeCtx:w.clone(),localCtx:d[e]["@context"],overrideProtected:!0,options:n,cycles:h})}catch(t){throw new o("Invalid JSON-LD syntax; invalid scoped context.","jsonld.SyntaxError",{code:"invalid scoped context",context:d[e]["@context"],term:e})}}a.setProcessed(e,{context:w,events:N})}return w},y.createTermDefinition=({activeCtx:e,localCtx:t,term:n,defined:a,options:s,overrideProtected:u=!1})=>{if(a.has(n)){if(a.get(n))return;throw new o("Cyclical context definition detected.","jsonld.CyclicalContext",{code:"cyclic IRI mapping",context:t,term:n})}let m;if(a.set(n,!1),t.hasOwnProperty(n)&&(m=t[n]),"@type"===n&&r(m)&&"@set"===(m["@container"]||"@set")&&y.processingMode(e,1.1)){const e=["@container","@id","@protected"],a=Object.keys(m);if(0===a.length||a.some((t=>!e.includes(t))))throw new o("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:t,term:n})}else{if(y.isKeyword(n))throw new o("Invalid JSON-LD syntax; keywords cannot be overridden.","jsonld.SyntaxError",{code:"keyword redefinition",context:t,term:n});if(n.match(h))return void(s.eventHandler&&c({event:{type:["JsonLdEvent"],code:"reserved term",level:"warning",message:'Terms beginning with "@" are reserved for future use and dropped.',details:{term:n}},options:s}));if(""===n)throw new o("Invalid JSON-LD syntax; a term cannot be an empty string.","jsonld.SyntaxError",{code:"invalid term definition",context:t})}const p=e.mappings.get(n);e.mappings.has(n)&&e.mappings.delete(n);let f=!1;if((i(m)||null===m)&&(f=!0,m={"@id":m}),!r(m))throw new o("Invalid JSON-LD syntax; @context term values must be strings or objects.","jsonld.SyntaxError",{code:"invalid term definition",context:t});const N={};e.mappings.set(n,N),N.reverse=!1;const g=["@container","@id","@language","@reverse","@type"];y.processingMode(e,1.1)&&g.push("@context","@direction","@index","@nest","@prefix","@protected");for(const e in m)if(!g.includes(e))throw new o("Invalid JSON-LD syntax; a term definition must not contain "+e,"jsonld.SyntaxError",{code:"invalid term definition",context:t});const v=n.indexOf(":");if(N._termHasColon=v>0,"@reverse"in m){if("@id"in m)throw new o("Invalid JSON-LD syntax; a @reverse term definition must not contain @id.","jsonld.SyntaxError",{code:"invalid reverse property",context:t});if("@nest"in m)throw new o("Invalid JSON-LD syntax; a @reverse term definition must not contain @nest.","jsonld.SyntaxError",{code:"invalid reverse property",context:t});const d=m["@reverse"];if(!i(d))throw new o("Invalid JSON-LD syntax; a @context @reverse value must be a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t});if(d.match(h))return s.eventHandler&&c({event:{type:["JsonLdEvent"],code:"reserved @reverse value",level:"warning",message:'@reverse values beginning with "@" are reserved for future use and dropped.',details:{reverse:d}},options:s}),void(p?e.mappings.set(n,p):e.mappings.delete(n));const r=$(e,d,{vocab:!0,base:!1},t,a,s);if(!l(r))throw new o("Invalid JSON-LD syntax; a @context @reverse value must be an absolute IRI or a blank node identifier.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t});N["@id"]=r,N.reverse=!0}else if("@id"in m){let d=m["@id"];if(d&&!i(d))throw new o("Invalid JSON-LD syntax; a @context @id value must be an array of strings or a string.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t});if(null===d)N["@id"]=null;else{if(!y.isKeyword(d)&&d.match(h))return s.eventHandler&&c({event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:'@id values beginning with "@" are reserved for future use and dropped.',details:{id:d}},options:s}),void(p?e.mappings.set(n,p):e.mappings.delete(n));if(d!==n){if(d=$(e,d,{vocab:!0,base:!1},t,a,s),!l(d)&&!y.isKeyword(d))throw new o("Invalid JSON-LD syntax; a @context @id value must be an absolute IRI, a blank node identifier, or a keyword.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t});if(n.match(/(?::[^:])|\//)&&$(e,n,{vocab:!0,base:!1},t,new Map(a).set(n,!0),s)!==d)throw new o("Invalid JSON-LD syntax; term in form of IRI must expand to definition.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t});N["@id"]=d,N._prefix=f&&!N._termHasColon&&null!==d.match(/[:\/\?#\[\]@]$/)}}}if(!("@id"in N))if(N._termHasColon){const o=n.substr(0,v);if(t.hasOwnProperty(o)&&y.createTermDefinition({activeCtx:e,localCtx:t,term:o,defined:a,options:s}),e.mappings.has(o)){const t=n.substr(v+1);N["@id"]=e.mappings.get(o)["@id"]+t}else N["@id"]=n}else if("@type"===n)N["@id"]=n;else{if(!("@vocab"in e))throw new o("Invalid JSON-LD syntax; @context terms must define an @id.","jsonld.SyntaxError",{code:"invalid IRI mapping",context:t,term:n});N["@id"]=e["@vocab"]+n}if((!0===m["@protected"]||!0===a.get("@protected")&&!1!==m["@protected"])&&(e.protected[n]=!0,N.protected=!0),a.set(n,!0),"@type"in m){let n=m["@type"];if(!i(n))throw new o("Invalid JSON-LD syntax; an @context @type value must be a string.","jsonld.SyntaxError",{code:"invalid type mapping",context:t});if("@json"===n||"@none"===n){if(y.processingMode(e,1))throw new o(`Invalid JSON-LD syntax; an @context @type value must not be "${n}" in JSON-LD 1.0 mode.`,"jsonld.SyntaxError",{code:"invalid type mapping",context:t})}else if("@id"!==n&&"@vocab"!==n){if(n=$(e,n,{vocab:!0,base:!1},t,a,s),!l(n))throw new o("Invalid JSON-LD syntax; an @context @type value must be an absolute IRI.","jsonld.SyntaxError",{code:"invalid type mapping",context:t});if(0===n.indexOf("_:"))throw new o("Invalid JSON-LD syntax; an @context @type value must be an IRI, not a blank node identifier.","jsonld.SyntaxError",{code:"invalid type mapping",context:t})}N["@type"]=n}if("@container"in m){const n=i(m["@container"])?[m["@container"]]:m["@container"]||[],a=["@list","@set","@index","@language"];let r=!0;const s=n.includes("@set");if(y.processingMode(e,1.1)){if(a.push("@graph","@id","@type"),n.includes("@list")){if(1!==n.length)throw new o("Invalid JSON-LD syntax; @context @container with @list must have no other values","jsonld.SyntaxError",{code:"invalid container mapping",context:t})}else if(n.includes("@graph")){if(n.some((e=>"@graph"!==e&&"@id"!==e&&"@index"!==e&&"@set"!==e)))throw new o("Invalid JSON-LD syntax; @context @container with @graph must have no other values other than @id, @index, and @set","jsonld.SyntaxError",{code:"invalid container mapping",context:t})}else r&=n.length<=(s?2:1);if(n.includes("@type")&&(N["@type"]=N["@type"]||"@id",!["@id","@vocab"].includes(N["@type"])))throw new o("Invalid JSON-LD syntax; container: @type requires @type to be @id or @vocab.","jsonld.SyntaxError",{code:"invalid type mapping",context:t})}else r&=!d(m["@container"]),r&=n.length<=1;if(r&=n.every((e=>a.includes(e))),r&=!(s&&n.includes("@list")),!r)throw new o("Invalid JSON-LD syntax; @context @container value must be one of the following: "+a.join(", "),"jsonld.SyntaxError",{code:"invalid container mapping",context:t});if(N.reverse&&!n.every((e=>["@index","@set"].includes(e))))throw new o("Invalid JSON-LD syntax; @context @container value for a @reverse type definition must be @index or @set.","jsonld.SyntaxError",{code:"invalid reverse property",context:t});N["@container"]=n}if("@index"in m){if(!("@container"in m)||!N["@container"].includes("@index"))throw new o(`Invalid JSON-LD syntax; @index without @index in @container: "${m["@index"]}" on term "${n}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:t});if(!i(m["@index"])||0===m["@index"].indexOf("@"))throw new o(`Invalid JSON-LD syntax; @index must expand to an IRI: "${m["@index"]}" on term "${n}".`,"jsonld.SyntaxError",{code:"invalid term definition",context:t});N["@index"]=m["@index"]}if("@context"in m&&(N["@context"]=m["@context"]),"@language"in m&&!("@type"in m)){let e=m["@language"];if(null!==e&&!i(e))throw new o("Invalid JSON-LD syntax; @context @language value must be a string or null.","jsonld.SyntaxError",{code:"invalid language mapping",context:t});null!==e&&(e=e.toLowerCase()),N["@language"]=e}if("@prefix"in m){if(n.match(/:|\//))throw new o("Invalid JSON-LD syntax; @context @prefix used on a compact IRI term","jsonld.SyntaxError",{code:"invalid term definition",context:t});if(y.isKeyword(N["@id"]))throw new o("Invalid JSON-LD syntax; keywords may not be used as prefixes","jsonld.SyntaxError",{code:"invalid term definition",context:t});if("boolean"!=typeof m["@prefix"])throw new o("Invalid JSON-LD syntax; @context value for @prefix must be boolean","jsonld.SyntaxError",{code:"invalid @prefix value",context:t});N._prefix=!0===m["@prefix"]}if("@direction"in m){const e=m["@direction"];if(null!==e&&"ltr"!==e&&"rtl"!==e)throw new o('Invalid JSON-LD syntax; @direction value must be null, "ltr", or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",context:t});N["@direction"]=e}if("@nest"in m){const e=m["@nest"];if(!i(e)||"@nest"!==e&&0===e.indexOf("@"))throw new o("Invalid JSON-LD syntax; @context @nest value must be a string which is not a keyword other than @nest.","jsonld.SyntaxError",{code:"invalid @nest value",context:t});N["@nest"]=e}const w=N["@id"];if("@context"===w||"@preserve"===w)throw new o("Invalid JSON-LD syntax; @context and @preserve cannot be aliased.","jsonld.SyntaxError",{code:"invalid keyword alias",context:t});if(p&&p.protected&&!u&&(e.protected[n]=!0,N.protected=!0,!b(p,N)))throw new o("Invalid JSON-LD syntax; tried to redefine a protected term.","jsonld.SyntaxError",{code:"protected term redefinition",context:t,term:n})},y.expandIri=(e,t,n,a)=>$(e,t,n,void 0,void 0,a),y.getInitialContext=e=>{const t=JSON.stringify({processingMode:e.processingMode}),n=g.get(t);if(n)return n;const o={processingMode:e.processingMode,mappings:new Map,inverse:null,getInverse:function(){const e=this;if(e.inverse)return e.inverse;const t=e.inverse={},n=e.fastCurieMap={},a={},o=(e["@language"]||"@none").toLowerCase(),i=e["@direction"],s=e.mappings,l=[...s.keys()].sort(N);for(const e of l){const d=s.get(e);if(null===d)continue;let l=d["@container"]||"@none";if(l=[].concat(l).sort().join(""),null===d["@id"])continue;const u=f(d["@id"]);for(const s of u){let u=t[s];const m=y.isKeyword(s);if(u)m||d._termHasColon||a[s].push(e);else if(t[s]=u={},!m&&!d._termHasColon){a[s]=[e];const t={iri:s,terms:a[s]};s[0]in n?n[s[0]].push(t):n[s[0]]=[t]}if(u[l]||(u[l]={"@language":{},"@type":{},"@any":{}}),u=u[l],r(e,u["@any"],"@none"),d.reverse)r(e,u["@type"],"@reverse");else if("@none"===d["@type"])r(e,u["@any"],"@none"),r(e,u["@language"],"@none"),r(e,u["@type"],"@none");else if("@type"in d)r(e,u["@type"],d["@type"]);else if("@language"in d&&"@direction"in d){const t=d["@language"],n=d["@direction"];r(e,u["@language"],t&&n?`${t}_${n}`.toLowerCase():t?t.toLowerCase():n?`_${n}`:"@null")}else"@language"in d?r(e,u["@language"],(d["@language"]||"@null").toLowerCase()):"@direction"in d?d["@direction"]?r(e,u["@language"],`_${d["@direction"]}`):r(e,u["@language"],"@none"):i?(r(e,u["@language"],`_${i}`),r(e,u["@language"],"@none"),r(e,u["@type"],"@none")):(r(e,u["@language"],o),r(e,u["@language"],"@none"),r(e,u["@type"],"@none"))}}for(const e in n)d(n,e,1);return t},clone:function(){const e={};return e.mappings=a.clone(this.mappings),e.clone=this.clone,e.inverse=null,e.getInverse=this.getInverse,e.protected=a.clone(this.protected),this.previousContext&&(e.previousContext=this.previousContext.clone()),e.revertToPreviousContext=this.revertToPreviousContext,"@base"in this&&(e["@base"]=this["@base"]),"@language"in this&&(e["@language"]=this["@language"]),"@vocab"in this&&(e["@vocab"]=this["@vocab"]),e},revertToPreviousContext:function(){return this.previousContext?this.previousContext.clone():this},protected:{}};return 1e4===g.size&&g.clear(),g.set(t,o),o;function d(e,t,n){const a=e[t],o=e[t]={};let r,i;for(const e of a)r=e.iri,i=n>=r.length?"":r[n],i in o?o[i].push(e):o[i]=[e];for(const e in o)""!==e&&d(o,e,n+1)}function r(e,t,n){t.hasOwnProperty(n)||(t[n]=e)}},y.getContextValue=(e,t,n)=>{if(null===t){if("@context"===n)return;return null}if(e.mappings.has(t)){const a=e.mappings.get(t);if(s(n))return a;if(a.hasOwnProperty(n))return a[n]}return"@language"===n&&n in e||"@direction"===n&&n in e?e[n]:"@context"!==n?null:void 0},y.processingMode=(e,t)=>t.toString()>="1.1"?!e.processingMode||e.processingMode>="json-ld-"+t.toString():"json-ld-1.0"===e.processingMode,y.isKeyword=e=>{if(!i(e)||"@"!==e[0])return!1;switch(e){case"@base":case"@container":case"@context":case"@default":case"@direction":case"@embed":case"@explicit":case"@graph":case"@id":case"@included":case"@index":case"@json":case"@language":case"@list":case"@nest":case"@none":case"@omitDefault":case"@prefix":case"@preserve":case"@protected":case"@requireAll":case"@reverse":case"@set":case"@type":case"@value":case"@version":case"@vocab":return!0}return!1}},6957:(e,t,n)=>{const{parseLinkHeader:a,buildHeaders:o}=n(9263),{LINK_HEADER_CONTEXT:d}=n(9378),r=n(2207),i=n(3743),{prependBase:s}=n(470),l=/(^|(\r\n))link:/i;e.exports=({secure:e,headers:t={},xhr:n}={headers:{}})=>(t=o(t),(new i).wrapLoader((async function o(i){if(0!==i.indexOf("http:")&&0!==i.indexOf("https:"))throw new r('URL could not be dereferenced; only "http" and "https" URLs are supported.',"jsonld.InvalidUrl",{code:"loading document failed",url:i});if(e&&0!==i.indexOf("https"))throw new r('URL could not be dereferenced; secure mode is enabled and the URL\'s scheme is not "https".',"jsonld.InvalidUrl",{code:"loading document failed",url:i});let u;try{u=await function(e,t,n){const a=new(e=e||XMLHttpRequest);return new Promise(((e,o)=>{a.onload=()=>e(a),a.onerror=e=>o(e),a.open("GET",t,!0);for(const e in n)a.setRequestHeader(e,n[e]);a.send()}))}(n,i,t)}catch(e){throw new r("URL could not be dereferenced, an error occurred.","jsonld.LoadDocumentError",{code:"loading document failed",url:i,cause:e})}if(u.status>=400)throw new r("URL could not be dereferenced: "+u.statusText,"jsonld.LoadDocumentError",{code:"loading document failed",url:i,httpStatusCode:u.status});let m={contextUrl:null,documentUrl:i,document:u.response},c=null;const p=u.getResponseHeader("Content-Type");let h;if(l.test(u.getAllResponseHeaders())&&(h=u.getResponseHeader("Link")),h&&"application/ld+json"!==p){const e=a(h),t=e[d];if(Array.isArray(t))throw new r("URL could not be dereferenced, it has more than one associated HTTP Link Header.","jsonld.InvalidUrl",{code:"multiple context link headers",url:i});t&&(m.contextUrl=t.target),c=e.alternate,c&&"application/ld+json"==c.type&&!(p||"").match(/^application\/(\w*\+)?json$/)&&(m=await o(s(i,c.target)))}return m})))},2246:(e,t,n)=>{const a=n(2207),{isArray:o}=n(7382),{asArray:d}=n(9263),r={};function i({event:e,handlers:t}){let n=!0;for(let d=0;n&&d<t.length;++d){n=!1;const r=t[d];if(o(r))n=i({event:e,handlers:r});else if("function"==typeof r)r({event:e,next:()=>{n=!0}});else{if("object"!=typeof r)throw new a("Invalid event handler.","jsonld.InvalidEventHandler",{event:e});e.code in r?r[e.code]({event:e,next:()=>{n=!0}}):n=!0}}return n}e.exports=r,r.defaultEventHandler=null,r.setupEventHandler=({options:e={}})=>{const t=[].concat(e.safe?r.safeEventHandler:[],e.eventHandler?d(e.eventHandler):[],r.defaultEventHandler?r.defaultEventHandler:[]);return 0===t.length?null:t},r.handleEvent=({event:e,options:t})=>{i({event:e,handlers:t.eventHandler})};const s=new Set(["empty object","free-floating scalar","invalid @language value","invalid property","null @id value","null @value value","object with only @id","object with only @language","object with only @list","object with only @value","relative @id reference","relative @type reference","relative @vocab reference","reserved @id value","reserved @reverse value","reserved term","blank node predicate","relative graph reference","relative object reference","relative predicate reference","relative subject reference","rdfDirection not set"]);r.safeEventHandler=function({event:e,next:t}){if("warning"===e.level&&s.has(e.code))throw new a("Safe mode validation error.","jsonld.ValidationError",{event:e});t()},r.logEventHandler=function({event:e,next:t}){console.log(`EVENT: ${e.message}`,{event:e}),t()},r.logWarningEventHandler=function({event:e,next:t}){"warning"===e.level&&console.warn(`WARNING: ${e.message}`,{event:e}),t()},r.unhandledEventHandler=function({event:e}){throw new a("No handler for event.","jsonld.UnhandledEvent",{event:e})},r.setDefaultEventHandler=function({eventHandler:e}={}){r.defaultEventHandler=e?d(e):null}},4019:(e,t,n)=>{const a=n(2207),{isArray:o,isObject:d,isEmptyObject:r,isString:i,isUndefined:s}=n(7382),{isList:l,isValue:u,isGraph:m,isSubject:c}=n(3978),{expandIri:p,getContextValue:h,isKeyword:f,process:N,processingMode:g}=n(1972),{isAbsolute:y}=n(470),{REGEX_BCP47:$,REGEX_KEYWORD:b,addValue:v,asArray:w,getValues:x,validateTypeValue:_}=n(9263),{handleEvent:C}=n(2246),q={};function S({value:e,count:t,options:n}){if(0===t||"@value"in e||"@list"in e||1===t&&"@id"in e){if(n.eventHandler){let a,o;0===t?(a="empty object",o="Dropping empty object."):"@value"in e?(a="object with only @value",o="Dropping object with only @value."):"@list"in e?(a="object with only @list",o="Dropping object with only @list."):1===t&&"@id"in e&&(a="object with only @id",o="Dropping object with only @id."),C({event:{type:["JsonLdEvent"],code:a,level:"warning",message:o,details:{value:e}},options:n})}return null}return e}async function E({activeCtx:e,activeProperty:t,expandedActiveProperty:n,element:m,expandedParent:b,options:x={},insideList:I,typeKey:L,typeScopedContext:T}){const A=Object.keys(m).sort(),P=[];let O;const k=m[L]&&"@json"===p(e,o(m[L])?m[L][0]:m[L],{vocab:!0},{...x,typeExpansion:!0});for(const E of A){let I,L=m[E];if("@context"===E)continue;const A=p(e,E,{vocab:!0},x);if(null===A||!y(A)&&!f(A)){x.eventHandler&&C({event:{type:["JsonLdEvent"],code:"invalid property",level:"warning",message:"Dropping property that did not expand into an absolute IRI or keyword.",details:{property:E,expandedProperty:A}},options:x});continue}if(f(A)){if("@reverse"===n)throw new a("Invalid JSON-LD syntax; a keyword cannot be used as a @reverse property.","jsonld.SyntaxError",{code:"invalid reverse property map",value:L});if(A in b&&"@included"!==A&&"@type"!==A)throw new a("Invalid JSON-LD syntax; colliding keywords detected.","jsonld.SyntaxError",{code:"colliding keywords",keyword:A})}if("@id"===A){if(!i(L)){if(!x.isFrame)throw new a('Invalid JSON-LD syntax; "@id" value must a string.',"jsonld.SyntaxError",{code:"invalid @id value",value:L});if(d(L)){if(!r(L))throw new a('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:L})}else{if(!o(L))throw new a('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:L});if(!L.every((e=>i(e))))throw new a('Invalid JSON-LD syntax; "@id" value an empty object or array of strings, if framing',"jsonld.SyntaxError",{code:"invalid @id value",value:L})}}v(b,"@id",w(L).map((t=>{if(i(t)){const n=p(e,t,{base:!0},x);return x.eventHandler&&(null===n?C(null===t?{event:{type:["JsonLdEvent"],code:"null @id value",level:"warning",message:"Null @id found.",details:{id:t}},options:x}:{event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:"Reserved @id found.",details:{id:t}},options:x}):y(n)||C({event:{type:["JsonLdEvent"],code:"relative @id reference",level:"warning",message:"Relative @id reference found.",details:{id:t,expandedId:n}},options:x})),n}return t})),{propertyIsArray:x.isFrame});continue}if("@type"===A){d(L)&&(L=Object.fromEntries(Object.entries(L).map((([e,t])=>[p(T,e,{vocab:!0}),w(t).map((e=>p(T,e,{base:!0,vocab:!0},{...x,typeExpansion:!0})))])))),_(L,x.isFrame),v(b,"@type",w(L).map((e=>{if(i(e)){const t=p(T,e,{base:!0,vocab:!0},{...x,typeExpansion:!0});return"@json"===t||y(t)||x.eventHandler&&C({event:{type:["JsonLdEvent"],code:"relative @type reference",level:"warning",message:"Relative @type reference found.",details:{type:e}},options:x}),t}return e})),{propertyIsArray:!!x.isFrame});continue}if("@included"===A&&g(e,1.1)){const n=w(await q.expand({activeCtx:e,activeProperty:t,element:L,options:x}));if(!n.every((e=>c(e))))throw new a("Invalid JSON-LD syntax; values of @included must expand to node objects.","jsonld.SyntaxError",{code:"invalid @included value",value:L});v(b,"@included",n,{propertyIsArray:!0});continue}if("@graph"===A&&!d(L)&&!o(L))throw new a('Invalid JSON-LD syntax; "@graph" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid @graph value",value:L});if("@value"===A){O=L,k&&g(e,1.1)?b["@value"]=L:v(b,"@value",L,{propertyIsArray:x.isFrame});continue}if("@language"===A){if(null===L)continue;if(!i(L)&&!x.isFrame)throw new a('Invalid JSON-LD syntax; "@language" value must be a string.',"jsonld.SyntaxError",{code:"invalid language-tagged string",value:L});L=w(L).map((e=>i(e)?e.toLowerCase():e));for(const e of L)i(e)&&!e.match($)&&x.eventHandler&&C({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:e}},options:x});v(b,"@language",L,{propertyIsArray:x.isFrame});continue}if("@direction"===A){if(!i(L)&&!x.isFrame)throw new a('Invalid JSON-LD syntax; "@direction" value must be a string.',"jsonld.SyntaxError",{code:"invalid base direction",value:L});L=w(L);for(const e of L)if(i(e)&&"ltr"!==e&&"rtl"!==e)throw new a('Invalid JSON-LD syntax; "@direction" must be "ltr" or "rtl".',"jsonld.SyntaxError",{code:"invalid base direction",value:L});v(b,"@direction",L,{propertyIsArray:x.isFrame});continue}if("@index"===A){if(!i(L))throw new a('Invalid JSON-LD syntax; "@index" value must be a string.',"jsonld.SyntaxError",{code:"invalid @index value",value:L});v(b,"@index",L);continue}if("@reverse"===A){if(!d(L))throw new a('Invalid JSON-LD syntax; "@reverse" value must be an object.',"jsonld.SyntaxError",{code:"invalid @reverse value",value:L});if(I=await q.expand({activeCtx:e,activeProperty:"@reverse",element:L,options:x}),"@reverse"in I)for(const e in I["@reverse"])v(b,e,I["@reverse"][e],{propertyIsArray:!0});let t=b["@reverse"]||null;for(const e in I){if("@reverse"===e)continue;null===t&&(t=b["@reverse"]={}),v(t,e,[],{propertyIsArray:!0});const n=I[e];for(let o=0;o<n.length;++o){const d=n[o];if(u(d)||l(d))throw new a('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:I});v(t,e,d,{propertyIsArray:!0})}}continue}if("@nest"===A){P.push(E);continue}let D=e;const M=h(e,E,"@context");s(M)||(D=await N({activeCtx:e,localCtx:M,propagate:!0,overrideProtected:!0,options:x}));const B=h(e,E,"@container")||[];if(B.includes("@language")&&d(L))I=R(D,L,h(D,E,"@direction"),x);else if(B.includes("@index")&&d(L)){const t=B.includes("@graph"),n=h(D,E,"@index")||"@index",a="@index"!==n&&p(e,n,{vocab:!0},x);I=await j({activeCtx:D,options:x,activeProperty:E,value:L,asGraph:t,indexKey:n,propertyIndex:a})}else if(B.includes("@id")&&d(L)){const e=B.includes("@graph");I=await j({activeCtx:D,options:x,activeProperty:E,value:L,asGraph:e,indexKey:"@id"})}else if(B.includes("@type")&&d(L))I=await j({activeCtx:D.revertToPreviousContext(),options:x,activeProperty:E,value:L,asGraph:!1,indexKey:"@type"});else{const a="@list"===A;if(a||"@set"===A){let e=t;a&&"@graph"===n&&(e=null),I=await q.expand({activeCtx:D,activeProperty:e,element:L,options:x,insideList:a})}else I="@json"===h(e,E,"@type")?{"@type":"@json","@value":L}:await q.expand({activeCtx:D,activeProperty:E,element:L,options:x,insideList:!1})}if(null!==I||"@value"===A){if("@list"!==A&&!l(I)&&B.includes("@list")&&(I={"@list":w(I)}),B.includes("@graph")&&!B.some((e=>"@id"===e||"@index"===e))){if(I=w(I),x.isFrame||(I=I.filter((e=>null!==S({value:e,count:Object.keys(e).length,options:x})))),0===I.length)continue;I=I.map((e=>({"@graph":w(e)})))}if(D.mappings.has(E)&&D.mappings.get(E).reverse){const e=b["@reverse"]=b["@reverse"]||{};I=w(I);for(let t=0;t<I.length;++t){const n=I[t];if(u(n)||l(n))throw new a('Invalid JSON-LD syntax; "@reverse" value must not be a @value or an @list.',"jsonld.SyntaxError",{code:"invalid reverse property value",value:I});v(e,A,n,{propertyIsArray:!0})}}else v(b,A,I,{propertyIsArray:!0})}}if("@value"in b)if("@json"===b["@type"]&&g(e,1.1));else if((d(O)||o(O))&&!x.isFrame)throw new a('Invalid JSON-LD syntax; "@value" value must not be an object or an array.',"jsonld.SyntaxError",{code:"invalid value object value",value:O});for(const r of P){const i=o(m[r])?m[r]:[m[r]];for(const o of i){if(!d(o)||Object.keys(o).some((t=>"@value"===p(e,t,{vocab:!0},x))))throw new a("Invalid JSON-LD syntax; nested value must be a node object.","jsonld.SyntaxError",{code:"invalid @nest value",value:o});await E({activeCtx:e,activeProperty:t,expandedActiveProperty:n,element:o,expandedParent:b,options:x,insideList:I,typeScopedContext:T,typeKey:L})}}}function I({activeCtx:e,activeProperty:t,value:n,options:a}){if(null==n)return null;const o=p(e,t,{vocab:!0},a);if("@id"===o)return p(e,n,{base:!0},a);if("@type"===o)return p(e,n,{vocab:!0,base:!0},{...a,typeExpansion:!0});const d=h(e,t,"@type");if(("@id"===d||"@graph"===o)&&i(n)){const o=p(e,n,{base:!0},a);return null===o&&n.match(b)&&a.eventHandler&&C({event:{type:["JsonLdEvent"],code:"reserved @id value",level:"warning",message:"Reserved @id found.",details:{id:t}},options:a}),{"@id":o}}if("@vocab"===d&&i(n))return{"@id":p(e,n,{vocab:!0,base:!0},a)};if(f(o))return n;const r={};if(d&&!["@id","@vocab","@none"].includes(d))r["@type"]=d;else if(i(n)){const n=h(e,t,"@language");null!==n&&(r["@language"]=n);const a=h(e,t,"@direction");null!==a&&(r["@direction"]=a)}return["boolean","number","string"].includes(typeof n)||(n=n.toString()),r["@value"]=n,r}function R(e,t,n,d){const r=[],s=Object.keys(t).sort();for(const l of s){const s=p(e,l,{vocab:!0},d);let u=t[l];o(u)||(u=[u]);for(const e of u){if(null===e)continue;if(!i(e))throw new a("Invalid JSON-LD syntax; language map values must be strings.","jsonld.SyntaxError",{code:"invalid language map value",languageMap:t});const o={"@value":e};"@none"!==s&&(l.match($)||d.eventHandler&&C({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:l}},options:d}),o["@language"]=l.toLowerCase()),n&&(o["@direction"]=n),r.push(o)}}return r}async function j({activeCtx:e,options:t,activeProperty:n,value:d,asGraph:r,indexKey:i,propertyIndex:l}){const c=[],f=Object.keys(d).sort(),g="@type"===i;for(let y of f){if(g){const n=h(e,y,"@context");s(n)||(e=await N({activeCtx:e,localCtx:n,propagate:!1,options:t}))}let f,$=d[y];o($)||($=[$]),$=await q.expand({activeCtx:e,activeProperty:n,element:$,options:t,insideList:!1,insideIndex:!0}),f=l?"@none"===y?"@none":I({activeCtx:e,activeProperty:i,value:y,options:t}):p(e,y,{vocab:!0},t),"@id"===i?y=p(e,y,{base:!0},t):g&&(y=f);for(let e of $){if(r&&!m(e)&&(e={"@graph":[e]}),"@type"===i)"@none"===f||(e["@type"]?e["@type"]=[y].concat(e["@type"]):e["@type"]=[y]);else{if(u(e)&&!["@language","@type","@index"].includes(i))throw new a(`Invalid JSON-LD syntax; Attempt to add illegal key to value object: "${i}".`,"jsonld.SyntaxError",{code:"invalid value object",value:e});l?"@none"!==f&&v(e,l,f,{propertyIsArray:!0,prependValue:!0}):"@none"===f||i in e||(e[i]=y)}c.push(e)}}return c}e.exports=q,q.expand=async({activeCtx:e,activeProperty:t=null,element:n,options:l={},insideList:u=!1,insideIndex:m=!1,typeScopedContext:c=null})=>{if(null==n)return null;if("@default"===t&&(l=Object.assign({},l,{isFrame:!1})),!o(n)&&!d(n))return u||null!==t&&"@graph"!==p(e,t,{vocab:!0},l)?I({activeCtx:e,activeProperty:t,value:n,options:l}):(l.eventHandler&&C({event:{type:["JsonLdEvent"],code:"free-floating scalar",level:"warning",message:"Dropping free-floating scalar not in a list.",details:{value:n}},options:l}),null);if(o(n)){let a=[];const d=h(e,t,"@container")||[];u=u||d.includes("@list");for(let d=0;d<n.length;++d){let r=await q.expand({activeCtx:e,activeProperty:t,element:n[d],options:l,insideIndex:m,typeScopedContext:c});u&&o(r)&&(r={"@list":r}),null!==r&&(o(r)?a=a.concat(r):a.push(r))}return a}const f=p(e,t,{vocab:!0},l),$=h(e,t,"@context");c=c||(e.previousContext?e:null);let b=Object.keys(n).sort(),v=!m;if(v&&c&&b.length<=2&&!b.includes("@context"))for(const t of b){const n=p(c,t,{vocab:!0},l);if("@value"===n){v=!1,e=c;break}if("@id"===n&&1===b.length){v=!1;break}}v&&(e=e.revertToPreviousContext()),s($)||(e=await N({activeCtx:e,localCtx:$,propagate:!0,overrideProtected:!0,options:l})),"@context"in n&&(e=await N({activeCtx:e,localCtx:n["@context"],options:l})),c=e;let _=null;for(const t of b)if("@type"===p(e,t,{vocab:!0},l)){_=_||t;const a=n[t],o=Array.isArray(a)?a.length>1?a.slice().sort():a:[a];for(const t of o){const n=h(c,t,"@context");s(n)||(e=await N({activeCtx:e,localCtx:n,options:l,propagate:!1}))}}let R={};await E({activeCtx:e,activeProperty:t,expandedActiveProperty:f,element:n,expandedParent:R,options:l,insideList:u,typeKey:_,typeScopedContext:c}),b=Object.keys(R);let j=b.length;if("@value"in R){if("@type"in R&&("@language"in R||"@direction"in R))throw new a('Invalid JSON-LD syntax; an element containing "@value" may not contain both "@type" and either "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:R});let t=j-1;if("@type"in R&&(t-=1),"@index"in R&&(t-=1),"@language"in R&&(t-=1),"@direction"in R&&(t-=1),0!==t)throw new a('Invalid JSON-LD syntax; an element containing "@value" may only have an "@index" property and either "@type" or either or both "@language" or "@direction".',"jsonld.SyntaxError",{code:"invalid value object",element:R});const n=null===R["@value"]?[]:w(R["@value"]),o=x(R,"@type");if(g(e,1.1)&&o.includes("@json")&&1===o.length);else if(0===n.length)l.eventHandler&&C({event:{type:["JsonLdEvent"],code:"null @value value",level:"warning",message:"Dropping null @value value.",details:{value:R}},options:l}),R=null;else{if(!n.every((e=>i(e)||r(e)))&&"@language"in R)throw new a("Invalid JSON-LD syntax; only strings may be language-tagged.","jsonld.SyntaxError",{code:"invalid language-tagged value",element:R});if(!o.every((e=>y(e)&&!(i(e)&&0===e.indexOf("_:"))||r(e))))throw new a('Invalid JSON-LD syntax; an element containing "@value" and "@type" must have an absolute IRI for the value of "@type".',"jsonld.SyntaxError",{code:"invalid typed value",element:R})}}else if("@type"in R&&!o(R["@type"]))R["@type"]=[R["@type"]];else if("@set"in R||"@list"in R){if(j>1&&(2!==j||!("@index"in R)))throw new a('Invalid JSON-LD syntax; if an element has the property "@set" or "@list", then it can have at most one other property that is "@index".',"jsonld.SyntaxError",{code:"invalid set or list object",element:R});"@set"in R&&(R=R["@set"],b=Object.keys(R),j=b.length)}else 1===j&&"@language"in R&&(l.eventHandler&&C({event:{type:["JsonLdEvent"],code:"object with only @language",level:"warning",message:"Dropping object with only @language.",details:{value:R}},options:l}),R=null);return!d(R)||l.keepFreeFloatingNodes||u||null!==t&&"@graph"!==f&&!(h(e,t,"@container")||[]).includes("@graph")||(R=S({value:R,count:j,options:l})),R}},5229:(e,t,n)=>{const{isSubjectReference:a}=n(3978),{createMergedNodeMap:o}=n(9233),d={};e.exports=d,d.flatten=e=>{const t=o(e),n=[],d=Object.keys(t).sort();for(let e=0;e<d.length;++e){const o=t[d[e]];a(o)||n.push(o)}return n}},7946:(e,t,n)=>{const{isKeyword:a}=n(1972),o=n(3978),d=n(7382),r=n(9263),i=n(470),s=n(2207),{createNodeMap:l,mergeNodeMapGraphs:u}=n(9233),m={};function c(e){const t={};for(const n in e)void 0!==e[n]&&(t["@"+n]=[e[n]]);return[t]}function p(e,t,n){for(let a=n.length-1;a>=0;--a){const o=n[a];if(o.graph===t&&o.subject["@id"]===e["@id"])return!0}return!1}function h(e,t,n){const a="@"+n;let o=a in e?e[a][0]:t[n];if("embed"===n)if(!0===o)o="@once";else if(!1===o)o="@never";else if("@always"!==o&&"@never"!==o&&"@link"!==o&&"@first"!==o&&"@last"!==o&&"@once"!==o)throw new s("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:e});return o}function f(e){if(!d.isArray(e)||1!==e.length||!d.isObject(e[0]))throw new s("Invalid JSON-LD syntax; a JSON-LD frame must be a single object.","jsonld.SyntaxError",{frame:e});if("@id"in e[0])for(const t of r.asArray(e[0]["@id"]))if(!d.isObject(t)&&!i.isAbsolute(t)||d.isString(t)&&0===t.indexOf("_:"))throw new s("Invalid JSON-LD syntax; invalid @id in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:e});if("@type"in e[0])for(const t of r.asArray(e[0]["@type"]))if(!d.isObject(t)&&!i.isAbsolute(t)&&"@json"!==t||d.isString(t)&&0===t.indexOf("_:"))throw new s("Invalid JSON-LD syntax; invalid @type in frame.","jsonld.SyntaxError",{code:"invalid frame",frame:e})}function N(e,t,n,i){let s=!0,l=!1;for(const u in n){let m=!1;const c=r.getValues(t,u),p=0===r.getValues(n,u).length;if("@id"===u){if(d.isEmptyObject(n["@id"][0]||{})?m=!0:n["@id"].length>=0&&(m=n["@id"].includes(c[0])),!i.requireAll)return m}else if("@type"===u){if(s=!1,p){if(c.length>0)return!1;m=!0}else if(1===n["@type"].length&&d.isEmptyObject(n["@type"][0]))m=c.length>0;else for(const e of n["@type"])m=!(!d.isObject(e)||!("@default"in e))||m||c.some((t=>t===e));if(!i.requireAll)return m}else{if(a(u))continue;{const t=r.getValues(n,u)[0];let a=!1;if(t&&(f([t]),a="@default"in t),s=!1,0===c.length&&a)continue;if(c.length>0&&p)return!1;if(void 0===t){if(c.length>0)return!1;m=!0}else if(o.isList(t)){const n=t["@list"][0];if(o.isList(c[0])){const t=c[0]["@list"];o.isValue(n)?m=t.some((e=>v(n,e))):(o.isSubject(n)||o.isSubjectReference(n))&&(m=t.some((t=>b(e,n,t,i))))}}else m=o.isValue(t)?c.some((e=>v(t,e))):o.isSubjectReference(t)?c.some((n=>b(e,t,n,i))):!!d.isObject(t)&&c.length>0}}if(!m&&i.requireAll)return!1;l=l||m}return s||l}function g(e,t){const n=e.uniqueEmbeds[e.graph],a=n[t],o=a.parent,i=a.property,s={"@id":t};if(d.isArray(o)){for(let e=0;e<o.length;++e)if(r.compareValues(o[e],s)){o[e]=s;break}}else{const e=d.isArray(o[i]);r.removeValue(o,i,s,{propertyIsArray:e}),r.addValue(o,i,s,{propertyIsArray:e})}const l=e=>{const t=Object.keys(n);for(const a of t)a in n&&d.isObject(n[a].parent)&&n[a].parent["@id"]===e&&(delete n[a],l(a))};l(t)}function y(e,t){if(d.isArray(e))return e.map((e=>y(e,t)));if(d.isObject(e)){if("@preserve"in e)return e["@preserve"][0];if(o.isValue(e))return e;if(o.isList(e))return e["@list"]=y(e["@list"],t),e;if("@id"in e){const n=e["@id"];if(t.link.hasOwnProperty(n)){const a=t.link[n].indexOf(e);if(-1!==a)return t.link[n][a];t.link[n].push(e)}else t.link[n]=[e]}for(const n in e)"@id"===n&&t.bnodesToClear.includes(e[n])?delete e["@id"]:e[n]=y(e[n],t)}return e}function $(e,t,n){d.isObject(e)?r.addValue(e,t,n,{propertyIsArray:!0}):e.push(n)}function b(e,t,n,a){if(!("@id"in n))return!1;const o=e.subjects[n["@id"]];return o&&N(e,o,t,a)}function v(e,t){const n=t["@value"],a=t["@type"],o=t["@language"],r=e["@value"]?d.isArray(e["@value"])?e["@value"]:[e["@value"]]:[],i=e["@type"]?d.isArray(e["@type"])?e["@type"]:[e["@type"]]:[],s=e["@language"]?d.isArray(e["@language"])?e["@language"]:[e["@language"]]:[];return 0===r.length&&0===i.length&&0===s.length||!(!r.includes(n)&&!d.isEmptyObject(r[0]))&&!!(!a&&0===i.length||i.includes(a)||a&&d.isEmptyObject(i[0]))&&!!(!o&&0===s.length||s.includes(o)||o&&d.isEmptyObject(s[0]))}e.exports=m,m.frameMergedOrDefault=(e,t,n)=>{const a={options:n,embedded:!1,graph:"@default",graphMap:{"@default":{}},subjectStack:[],link:{},bnodeMap:{}},o=new r.IdentifierIssuer("_:b");l(e,a.graphMap,"@default",o),n.merged&&(a.graphMap["@merged"]=u(a.graphMap),a.graph="@merged"),a.subjects=a.graphMap[a.graph];const d=[];return m.frame(a,Object.keys(a.subjects).sort(),t,d),n.pruneBlankNodeIdentifiers&&(n.bnodesToClear=Object.keys(a.bnodeMap).filter((e=>1===a.bnodeMap[e].length))),n.link={},y(d,n)},m.frame=(e,t,n,i,l=null)=>{f(n),n=n[0];const u=e.options,y={embed:h(n,u,"embed"),explicit:h(n,u,"explicit"),requireAll:h(n,u,"requireAll")};e.link.hasOwnProperty(e.graph)||(e.link[e.graph]={});const b=e.link[e.graph],w=function(e,t,n,a){const o={};for(const d of t){const t=e.graphMap[e.graph][d];N(e,t,n,a)&&(o[d]=t)}return o}(e,t,n,y),x=Object.keys(w).sort();for(const f of x){const N=w[f];if(null===l?e.uniqueEmbeds={[e.graph]:{}}:e.uniqueEmbeds[e.graph]=e.uniqueEmbeds[e.graph]||{},"@link"===y.embed&&f in b){$(i,l,b[f]);continue}const x={"@id":f};if(0===f.indexOf("_:")&&r.addValue(e.bnodeMap,f,x,{propertyIsArray:!0}),b[f]=x,("@first"===y.embed||"@last"===y.embed)&&e.is11)throw new s("Invalid JSON-LD syntax; invalid value of @embed.","jsonld.SyntaxError",{code:"invalid @embed value",frame:n});if(e.embedded||!e.uniqueEmbeds[e.graph].hasOwnProperty(f))if(!e.embedded||"@never"!==y.embed&&!p(N,e.graph,e.subjectStack))if(!e.embedded||"@first"!=y.embed&&"@once"!=y.embed||!e.uniqueEmbeds[e.graph].hasOwnProperty(f)){if("@last"===y.embed&&f in e.uniqueEmbeds[e.graph]&&g(e,f),e.uniqueEmbeds[e.graph][f]={parent:i,property:l},e.subjectStack.push({subject:N,graph:e.graph}),f in e.graphMap){let t=!1,a=null;"@graph"in n?(a=n["@graph"][0],t=!("@merged"===f||"@default"===f),d.isObject(a)||(a={})):(t="@merged"!==e.graph,a={}),t&&m.frame({...e,graph:f,embedded:!1},Object.keys(e.graphMap[f]).sort(),[a],x,"@graph")}"@included"in n&&m.frame({...e,embedded:!1},t,n["@included"],x,"@included");for(const t of Object.keys(N).sort())if(a(t)){if(x[t]=r.clone(N[t]),"@type"===t)for(const t of N["@type"])0===t.indexOf("_:")&&r.addValue(e.bnodeMap,t,x,{propertyIsArray:!0})}else if(!y.explicit||t in n)for(const a of N[t]){const d=t in n?n[t]:c(y);if(o.isList(a)){const d=n[t]&&n[t][0]&&n[t][0]["@list"]?n[t][0]["@list"]:c(y),i={"@list":[]};$(x,t,i);const s=a["@list"];for(const t of s)o.isSubjectReference(t)?m.frame({...e,embedded:!0},[t["@id"]],d,i,"@list"):$(i,"@list",r.clone(t))}else o.isSubjectReference(a)?m.frame({...e,embedded:!0},[a["@id"]],d,x,t):v(d[0],a)&&$(x,t,r.clone(a))}for(const e of Object.keys(n).sort()){if("@type"===e){if(!d.isObject(n[e][0])||!("@default"in n[e][0]))continue}else if(a(e))continue;const t=n[e][0]||{};if(!h(t,u,"omitDefault")&&!(e in x)){let n="@null";"@default"in t&&(n=r.clone(t["@default"])),d.isArray(n)||(n=[n]),x[e]=[{"@preserve":n}]}}for(const t of Object.keys(n["@reverse"]||{}).sort()){const a=n["@reverse"][t];for(const n of Object.keys(e.subjects))r.getValues(e.subjects[n],t).some((e=>e["@id"]===f))&&(x["@reverse"]=x["@reverse"]||{},r.addValue(x["@reverse"],t,[],{propertyIsArray:!0}),m.frame({...e,embedded:!0},[n],a,x["@reverse"][t],l))}$(i,l,x),e.subjectStack.pop()}else $(i,l,x);else $(i,l,x)}},m.cleanupNull=(e,t)=>{if(d.isArray(e))return e.map((e=>m.cleanupNull(e,t))).filter((e=>e));if("@null"===e)return null;if(d.isObject(e)){if("@id"in e){const n=e["@id"];if(t.link.hasOwnProperty(n)){const a=t.link[n].indexOf(e);if(-1!==a)return t.link[n][a];t.link[n].push(e)}else t.link[n]=[e]}for(const n in e)e[n]=m.cleanupNull(e[n],t)}return e}},3947:(e,t,n)=>{const a=n(2207),o=n(3978),d=n(7382),{REGEX_BCP47:r,addValue:i}=n(9263),{handleEvent:s}=n(2246),{RDF_LIST:l,RDF_FIRST:u,RDF_REST:m,RDF_NIL:c,RDF_TYPE:p,RDF_JSON_LITERAL:h,XSD_BOOLEAN:f,XSD_DOUBLE:N,XSD_INTEGER:g,XSD_STRING:y}=n(9378),$={};function b(e,t,n,o){if(e.termType.endsWith("Node"))return{"@id":e.value};const i={"@value":e.value};if(e.language)e.language.match(r)||o.eventHandler&&s({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:e.language}},options:o}),i["@language"]=e.language;else{let l=e.datatype.value;if(l||(l=y),l===h){l="@json";try{i["@value"]=JSON.parse(i["@value"])}catch(e){throw new a("JSON literal could not be parsed.","jsonld.InvalidJsonLiteral",{code:"invalid JSON literal",value:i["@value"],cause:e})}}if(t){if(l===f)"true"===i["@value"]?i["@value"]=!0:"false"===i["@value"]&&(i["@value"]=!1);else if(d.isNumeric(i["@value"]))if(l===g){const e=parseInt(i["@value"],10);e.toFixed(0)===i["@value"]&&(i["@value"]=e)}else l===N&&(i["@value"]=parseFloat(i["@value"]));[f,g,N,y].includes(l)||(i["@type"]=l)}else if("i18n-datatype"===n&&l.startsWith("https://www.w3.org/ns/i18n#")){const[,e,t]=l.split(/[#_]/);e.length>0&&(i["@language"]=e,e.match(r)||o.eventHandler&&s({event:{type:["JsonLdEvent"],code:"invalid @language value",level:"warning",message:"@language value must be valid BCP47.",details:{language:e}},options:o})),i["@direction"]=t}else l!==y&&(i["@type"]=l)}return i}e.exports=$,$.fromRDF=async(e,t)=>{const{useRdfType:n=!1,useNativeTypes:r=!1,rdfDirection:s=null}=t,h={},f={"@default":h},N={};if(s){if("compound-literal"===s)throw new a("Unsupported rdfDirection value.","jsonld.InvalidRdfDirection",{value:s});if("i18n-datatype"!==s)throw new a("Unknown rdfDirection value.","jsonld.InvalidRdfDirection",{value:s})}for(const a of e){const e="DefaultGraph"===a.graph.termType?"@default":a.graph.value;e in f||(f[e]={}),"@default"===e||e in h||(h[e]={"@id":e});const o=f[e],d=a.subject.value,l=a.predicate.value,u=a.object;d in o||(o[d]={"@id":d});const m=o[d],g=u.termType.endsWith("Node");if(g&&!(u.value in o)&&(o[u.value]={"@id":u.value}),l===p&&!n&&g){i(m,"@type",u.value,{propertyIsArray:!0});continue}const y=b(u,r,s,t);if(i(m,l,y,{propertyIsArray:!0}),g)if(u.value===c){const e=o[u.value];"usages"in e||(e.usages=[]),e.usages.push({node:m,property:l,value:y})}else u.value in N?N[u.value]=!1:N[u.value]={node:m,property:l,value:y}}for(const e in f){const t=f[e];if(!(c in t))continue;const n=t[c];if(n.usages){for(let e of n.usages){let n=e.node,a=e.property,r=e.value;const i=[],s=[];let c=Object.keys(n).length;for(;a===m&&d.isObject(N[n["@id"]])&&d.isArray(n[u])&&1===n[u].length&&d.isArray(n[m])&&1===n[m].length&&(3===c||4===c&&d.isArray(n["@type"])&&1===n["@type"].length&&n["@type"][0]===l)&&(i.push(n[u][0]),s.push(n["@id"]),e=N[n["@id"]],n=e.node,a=e.property,r=e.value,c=Object.keys(n).length,o.isBlankNode(n)););delete r["@id"],r["@list"]=i.reverse();for(const e of s)delete t[e]}delete n.usages}}const g=[],y=Object.keys(h).sort();for(const e of y){const t=h[e];if(e in f){const n=t["@graph"]=[],a=f[e],d=Object.keys(a).sort();for(const e of d){const t=a[e];o.isSubjectReference(t)||n.push(t)}}o.isSubjectReference(t)||g.push(t)}return g}},3978:(e,t,n)=>{const a=n(7382),o={};e.exports=o,o.isSubject=e=>!(!a.isObject(e)||"@value"in e||"@set"in e||"@list"in e)&&(Object.keys(e).length>1||!("@id"in e)),o.isSubjectReference=e=>a.isObject(e)&&1===Object.keys(e).length&&"@id"in e,o.isValue=e=>a.isObject(e)&&"@value"in e,o.isList=e=>a.isObject(e)&&"@list"in e,o.isGraph=e=>a.isObject(e)&&"@graph"in e&&1===Object.keys(e).filter((e=>"@id"!==e&&"@index"!==e)).length,o.isSimpleGraph=e=>o.isGraph(e)&&!("@id"in e),o.isBlankNode=e=>{if(a.isObject(e)){if("@id"in e){const t=e["@id"];return!a.isString(t)||0===t.indexOf("_:")}return 0===Object.keys(e).length||!("@value"in e||"@set"in e||"@list"in e)}return!1}},4841:(e,t,n)=>{const a=n(989),o=n(701),d=n(9263),r=n(7034),i=d.IdentifierIssuer,s=n(2207),l=n(9749),u=n(8229),{expand:m}=n(4019),{flatten:c}=n(5229),{fromRDF:p}=n(3947),{toRDF:h}=n(9180),{frameMergedOrDefault:f,cleanupNull:N}=n(7946),{isArray:g,isObject:y,isString:$}=n(7382),{isSubjectReference:b}=n(3978),{expandIri:v,getInitialContext:w,process:x,processingMode:_}=n(1972),{compact:C,compactIri:q}=n(1058),{createNodeMap:S,createMergedNodeMap:E,mergeNodeMaps:I}=n(9233),{logEventHandler:R,logWarningEventHandler:j,safeEventHandler:L,setDefaultEventHandler:T,setupEventHandler:A,strictEventHandler:P,unhandledEventHandler:O}=n(2246),k=function(e){const t={},k=new l({max:100});function D(t,{documentLoader:n=e.documentLoader,...a}){if(t&&"compactionMap"in t)throw new s('"compactionMap" not supported.',"jsonld.OptionsError");if(t&&"expansionMap"in t)throw new s('"expansionMap" not supported.',"jsonld.OptionsError");return Object.assign({},{documentLoader:n},a,t,{eventHandler:A({options:t})})}return e.compact=async function(t,n,a){if(arguments.length<2)throw new TypeError("Could not compact, too few arguments.");if(null===n)throw new s("The compaction context must not be null.","jsonld.CompactError",{code:"invalid local context"});if(null===t)return null;let o;(a=D(a,{base:$(t)?t:"",compactArrays:!0,compactToRelative:!0,graph:!1,skipExpansion:!1,link:!1,issuer:new i("_:b"),contextResolver:new r({sharedCache:k})})).link&&(a.skipExpansion=!0),a.compactToRelative||delete a.base,o=a.skipExpansion?t:await e.expand(t,a);const l=await e.processContext(w(a),n,a);let u=await C({activeCtx:l,element:o,options:a});a.compactArrays&&!a.graph&&g(u)?1===u.length?u=u[0]:0===u.length&&(u={}):a.graph&&y(u)&&(u=[u]),y(n)&&"@context"in n&&(n=n["@context"]),n=d.clone(n),g(n)||(n=[n]);const m=n;n=[];for(let e=0;e<m.length;++e)(!y(m[e])||Object.keys(m[e]).length>0)&&n.push(m[e]);const c=n.length>0;if(1===n.length&&(n=n[0]),g(u)){const e=q({activeCtx:l,iri:"@graph",relativeTo:{vocab:!0}}),t=u;u={},c&&(u["@context"]=n),u[e]=t}else if(y(u)&&c){const e=u;u={"@context":n};for(const t in e)u[t]=e[t]}return u},e.expand=async function(t,n){if(arguments.length<1)throw new TypeError("Could not expand, too few arguments.");const a={},o=[];if("expandContext"in(n=D(n,{keepFreeFloatingNodes:!1,contextResolver:new r({sharedCache:k})}))){const e=d.clone(n.expandContext);y(e)&&"@context"in e?a.expandContext=e:a.expandContext={"@context":e},o.push(a.expandContext)}let i;if($(t)){const d=await e.get(t,n);i=d.documentUrl,a.input=d.document,d.contextUrl&&(a.remoteContext={"@context":d.contextUrl},o.push(a.remoteContext))}else a.input=d.clone(t);"base"in n||(n.base=i||"");let s=w(n);for(const e of o)s=await x({activeCtx:s,localCtx:e,options:n});let l=await m({activeCtx:s,element:a.input,options:n});return y(l)&&"@graph"in l&&1===Object.keys(l).length?l=l["@graph"]:null===l&&(l=[]),g(l)||(l=[l]),l},e.flatten=async function(t,n,a){if(arguments.length<1)return new TypeError("Could not flatten, too few arguments.");n="function"==typeof n?null:n||null,a=D(a,{base:$(t)?t:"",contextResolver:new r({sharedCache:k})});const o=await e.expand(t,a),d=c(o);return null===n?d:(a.graph=!0,a.skipExpansion=!0,await e.compact(d,n,a))},e.frame=async function(t,n,a){if(arguments.length<2)throw new TypeError("Could not frame, too few arguments.");if(a=D(a,{base:$(t)?t:"",embed:"@once",explicit:!1,requireAll:!1,omitDefault:!1,bnodesToClear:[],contextResolver:new r({sharedCache:k})}),$(n)){const t=await e.get(n,a);if(n=t.document,t.contextUrl){let e=n["@context"];e?g(e)?e.push(t.contextUrl):e=[e,t.contextUrl]:e=t.contextUrl,n["@context"]=e}}const o=n&&n["@context"]||{},d=await e.processContext(w(a),o,a);a.hasOwnProperty("omitGraph")||(a.omitGraph=_(d,1.1)),a.hasOwnProperty("pruneBlankNodeIdentifiers")||(a.pruneBlankNodeIdentifiers=_(d,1.1));const i=await e.expand(t,a),s={...a};s.isFrame=!0,s.keepFreeFloatingNodes=!0;const l=await e.expand(n,s),u=Object.keys(n).map((e=>v(d,e,{vocab:!0})));s.merged=!u.includes("@graph"),s.is11=_(d,1.1);const m=f(i,l,s);s.graph=!a.omitGraph,s.skipExpansion=!0,s.link={},s.framing=!0;let c=await e.compact(m,o,s);return s.link={},c=N(c,s),c},e.link=async function(t,n,a){const o={};return n&&(o["@context"]=n),o["@embed"]="@link",e.frame(t,o,a)},e.normalize=e.canonize=async function(t,n){if(arguments.length<1)throw new TypeError("Could not canonize, too few arguments.");if("inputFormat"in(n=D(n,{base:$(t)?t:null,algorithm:"URDNA2015",skipExpansion:!1,safe:!0,contextResolver:new r({sharedCache:k})}))){if("application/n-quads"!==n.inputFormat&&"application/nquads"!==n.inputFormat)throw new s("Unknown canonicalization input format.","jsonld.CanonizeError");const e=u.parse(t);return a.canonize(e,n)}const o={...n};delete o.format,o.produceGeneralizedRdf=!1;const d=await e.toRDF(t,o);return a.canonize(d,n)},e.fromRDF=async function(e,n){if(arguments.length<1)throw new TypeError("Could not convert from RDF, too few arguments.");n=D(n,{format:$(e)?"application/n-quads":void 0});const{format:a}=n;let{rdfParser:o}=n;if(a){if(o=o||t[a],!o)throw new s("Unknown input format.","jsonld.UnknownFormat",{format:a})}else o=()=>e;const d=await o(e);return p(d,n)},e.toRDF=async function(t,n){if(arguments.length<1)throw new TypeError("Could not convert to RDF, too few arguments.");let a;a=(n=D(n,{base:$(t)?t:"",skipExpansion:!1,contextResolver:new r({sharedCache:k})})).skipExpansion?t:await e.expand(t,n);const o=h(a,n);if(n.format){if("application/n-quads"===n.format||"application/nquads"===n.format)return u.serialize(o);throw new s("Unknown output format.","jsonld.UnknownFormat",{format:n.format})}return o},e.createNodeMap=async function(t,n){if(arguments.length<1)throw new TypeError("Could not create node map, too few arguments.");n=D(n,{base:$(t)?t:"",contextResolver:new r({sharedCache:k})});const a=await e.expand(t,n);return E(a,n)},e.merge=async function(t,n,a){if(arguments.length<1)throw new TypeError("Could not merge, too few arguments.");if(!g(t))throw new TypeError('Could not merge, "docs" must be an array.');n="function"==typeof n?null:n||null,a=D(a,{contextResolver:new r({sharedCache:k})});const o=await Promise.all(t.map((t=>{const n={...a};return e.expand(t,n)})));let s=!0;"mergeNodes"in a&&(s=a.mergeNodes);const l=a.issuer||new i("_:b"),u={"@default":{}};for(let e=0;e<o.length;++e){const t=d.relabelBlankNodes(o[e],{issuer:new i("_:b"+e+"-")}),n=s||0===e?u:{"@default":{}};if(S(t,n,"@default",l),n!==u)for(const e in n){const t=n[e];if(!(e in u)){u[e]=t;continue}const a=u[e];for(const e in t)e in a||(a[e]=t[e])}}const m=I(u),c=[],p=Object.keys(m).sort();for(let e=0;e<p.length;++e){const t=m[p[e]];b(t)||c.push(t)}return null===n?c:(a.graph=!0,a.skipExpansion=!0,await e.compact(c,n,a))},Object.defineProperty(e,"documentLoader",{get:()=>e._documentLoader,set:t=>e._documentLoader=t}),e.documentLoader=async e=>{throw new s("Could not retrieve a JSON-LD document from the URL. URL dereferencing not implemented.","jsonld.LoadDocumentError",{code:"loading document failed",url:e})},e.get=async function(t,n){let a;a="function"==typeof n.documentLoader?n.documentLoader:e.documentLoader;const o=await a(t);try{if(!o.document)throw new s("No remote document found at the given URL.","jsonld.NullRemoteDocument");$(o.document)&&(o.document=JSON.parse(o.document))}catch(e){throw new s("Could not retrieve a JSON-LD document from the URL.","jsonld.LoadDocumentError",{code:"loading document failed",cause:e,remoteDoc:o})}return o},e.processContext=async function(e,t,n){return n=D(n,{base:"",contextResolver:new r({sharedCache:k})}),null===t?w(n):(t=d.clone(t),y(t)&&"@context"in t||(t={"@context":t}),x({activeCtx:e,localCtx:t,options:n}))},e.getContextValue=n(1972).getContextValue,e.documentLoaders={},e.useDocumentLoader=function(t){if(!(t in e.documentLoaders))throw new s('Unknown document loader type: "'+t+'"',"jsonld.UnknownDocumentLoader",{type:t});e.documentLoader=e.documentLoaders[t].apply(e,Array.prototype.slice.call(arguments,1))},e.registerRDFParser=function(e,n){t[e]=n},e.unregisterRDFParser=function(e){delete t[e]},e.registerRDFParser("application/n-quads",u.parse),e.registerRDFParser("application/nquads",u.parse),e.url=n(470),e.logEventHandler=R,e.logWarningEventHandler=j,e.safeEventHandler=L,e.setDefaultEventHandler=T,e.strictEventHandler=P,e.unhandledEventHandler=O,e.util=d,Object.assign(e,d),e.promises=e,e.RequestQueue=n(3743),e.JsonLdProcessor=n(5445)(e),o.setupGlobals(e),o.setupDocumentLoaders(e),e},D=function(){return k((function(){return D()}))};k(D),e.exports=D},9233:(e,t,n)=>{const{isKeyword:a}=n(1972),o=n(3978),d=n(7382),r=n(9263),i=n(2207),s={};e.exports=s,s.createMergedNodeMap=(e,t)=>{const n=(t=t||{}).issuer||new r.IdentifierIssuer("_:b"),a={"@default":{}};return s.createNodeMap(e,a,"@default",n),s.mergeNodeMaps(a)},s.createNodeMap=(e,t,n,l,u,m)=>{if(d.isArray(e)){for(const a of e)s.createNodeMap(a,t,n,l,void 0,m);return}if(!d.isObject(e))return void(m&&m.push(e));if(o.isValue(e)){if("@type"in e){let t=e["@type"];0===t.indexOf("_:")&&(e["@type"]=t=l.getId(t))}return void(m&&m.push(e))}if(m&&o.isList(e)){const a=[];return s.createNodeMap(e["@list"],t,n,l,u,a),void m.push({"@list":a})}if("@type"in e){const t=e["@type"];for(const e of t)0===e.indexOf("_:")&&l.getId(e)}d.isUndefined(u)&&(u=o.isBlankNode(e)?l.getId(e["@id"]):e["@id"]),m&&m.push({"@id":u});const c=t[n],p=c[u]=c[u]||{};p["@id"]=u;const h=Object.keys(e).sort();for(let d of h){if("@id"===d)continue;if("@reverse"===d){const a={"@id":u},d=e["@reverse"];for(const e in d){const i=d[e];for(const d of i){let i=d["@id"];o.isBlankNode(d)&&(i=l.getId(i)),s.createNodeMap(d,t,n,l,i),r.addValue(c[i],e,a,{propertyIsArray:!0,allowDuplicate:!1})}}continue}if("@graph"===d){u in t||(t[u]={}),s.createNodeMap(e[d],t,u,l);continue}if("@included"===d){s.createNodeMap(e[d],t,n,l);continue}if("@type"!==d&&a(d)){if("@index"===d&&d in p&&(e[d]!==p[d]||e[d]["@id"]!==p[d]["@id"]))throw new i("Invalid JSON-LD syntax; conflicting @index property detected.","jsonld.SyntaxError",{code:"conflicting indexes",subject:p});p[d]=e[d];continue}const m=e[d];if(0===d.indexOf("_:")&&(d=l.getId(d)),0!==m.length)for(let e of m)if("@type"===d&&(e=0===e.indexOf("_:")?l.getId(e):e),o.isSubject(e)||o.isSubjectReference(e)){if("@id"in e&&!e["@id"])continue;const a=o.isBlankNode(e)?l.getId(e["@id"]):e["@id"];r.addValue(p,d,{"@id":a},{propertyIsArray:!0,allowDuplicate:!1}),s.createNodeMap(e,t,n,l,a)}else if(o.isValue(e))r.addValue(p,d,e,{propertyIsArray:!0,allowDuplicate:!1});else if(o.isList(e)){const a=[];s.createNodeMap(e["@list"],t,n,l,u,a),e={"@list":a},r.addValue(p,d,e,{propertyIsArray:!0,allowDuplicate:!1})}else s.createNodeMap(e,t,n,l,u),r.addValue(p,d,e,{propertyIsArray:!0,allowDuplicate:!1});else r.addValue(p,d,[],{propertyIsArray:!0})}},s.mergeNodeMapGraphs=e=>{const t={};for(const n of Object.keys(e).sort())for(const o of Object.keys(e[n]).sort()){const d=e[n][o];o in t||(t[o]={"@id":o});const i=t[o];for(const e of Object.keys(d).sort())if(a(e)&&"@type"!==e)i[e]=r.clone(d[e]);else for(const t of d[e])r.addValue(i,e,r.clone(t),{propertyIsArray:!0,allowDuplicate:!1})}return t},s.mergeNodeMaps=e=>{const t=e["@default"],n=Object.keys(e).sort();for(const a of n){if("@default"===a)continue;const n=e[a];let d=t[a];d?"@graph"in d||(d["@graph"]=[]):t[a]=d={"@id":a,"@graph":[]};const r=d["@graph"];for(const e of Object.keys(n).sort()){const t=n[e];o.isSubjectReference(t)||r.push(t)}}return t}},701:(e,t,n)=>{const a=n(6957),o={};e.exports=o,o.setupDocumentLoaders=function(e){"undefined"!=typeof XMLHttpRequest&&(e.documentLoaders.xhr=a,e.useDocumentLoader("xhr"))},o.setupGlobals=function(e){void 0===globalThis.JsonLdProcessor&&Object.defineProperty(globalThis,"JsonLdProcessor",{writable:!0,enumerable:!1,configurable:!0,value:e.JsonLdProcessor})}},9180:(e,t,n)=>{const{createNodeMap:a}=n(9233),{isKeyword:o}=n(1972),d=n(3978),r=n(2341),i=n(2207),s=n(7382),l=n(9263),{handleEvent:u}=n(2246),{RDF_FIRST:m,RDF_REST:c,RDF_NIL:p,RDF_TYPE:h,RDF_JSON_LITERAL:f,RDF_LANGSTRING:N,XSD_BOOLEAN:g,XSD_DOUBLE:y,XSD_INTEGER:$,XSD_STRING:b}=n(9378),{isAbsolute:v}=n(470),w={};function x(e,t,n,a,d){const r=Object.keys(t).sort();for(const i of r){const r=t[i],s=Object.keys(r).sort();for(let t of s){const s=r[t];if("@type"===t)t=h;else if(o(t))continue;for(const o of s){const r={termType:i.startsWith("_:")?"BlankNode":"NamedNode",value:i};if(!v(i)){d.eventHandler&&u({event:{type:["JsonLdEvent"],code:"relative subject reference",level:"warning",message:"Relative subject reference found.",details:{subject:i}},options:d});continue}const s={termType:t.startsWith("_:")?"BlankNode":"NamedNode",value:t};if(!v(t)){d.eventHandler&&u({event:{type:["JsonLdEvent"],code:"relative predicate reference",level:"warning",message:"Relative predicate reference found.",details:{predicate:t}},options:d});continue}if("BlankNode"===s.termType&&!d.produceGeneralizedRdf){d.eventHandler&&u({event:{type:["JsonLdEvent"],code:"blank node predicate",level:"warning",message:"Dropping blank node predicate.",details:{property:a.getOldIds().find((e=>a.getId(e)===t))}},options:d});continue}const l=_(o,a,e,n,d.rdfDirection,d);l&&e.push({subject:r,predicate:s,object:l,graph:n})}}}}function _(e,t,n,a,o,l){const h={};if(d.isValue(e)){h.termType="Literal",h.value=void 0,h.datatype={termType:"NamedNode"};let t=e["@value"];const n=e["@type"]||null;if("@json"===n)h.value=r(t),h.datatype.value=f;else if(s.isBoolean(t))h.value=t.toString(),h.datatype.value=n||g;else if(s.isDouble(t)||n===y)s.isDouble(t)||(t=parseFloat(t)),h.value=t.toExponential(15).replace(/(\d)0*e\+?/,"$1E"),h.datatype.value=n||y;else if(s.isNumber(t))h.value=t.toFixed(0),h.datatype.value=n||$;else if("@direction"in e&&"i18n-datatype"===o){const n=`https://www.w3.org/ns/i18n#${(e["@language"]||"").toLowerCase()}_${e["@direction"]}`;h.datatype.value=n,h.value=t}else{if("@direction"in e&&"compound-literal"===o)throw new i("Unsupported rdfDirection value.","jsonld.InvalidRdfDirection",{value:o});if("@direction"in e&&o)throw new i("Unknown rdfDirection value.","jsonld.InvalidRdfDirection",{value:o});"@language"in e?("@direction"in e&&!o&&l.eventHandler&&u({event:{type:["JsonLdEvent"],code:"rdfDirection not set",level:"warning",message:"rdfDirection not set for @direction.",details:{object:h.value}},options:l}),h.value=t,h.datatype.value=n||N,h.language=e["@language"]):("@direction"in e&&!o&&l.eventHandler&&u({event:{type:["JsonLdEvent"],code:"rdfDirection not set",level:"warning",message:"rdfDirection not set for @direction.",details:{object:h.value}},options:l}),h.value=t,h.datatype.value=n||b)}}else if(d.isList(e)){const d=function(e,t,n,a,o,d){const r={termType:"NamedNode",value:m},i={termType:"NamedNode",value:c},s={termType:"NamedNode",value:p},l=e.pop(),u=l?{termType:"BlankNode",value:t.getId()}:s;let h=u;for(const s of e){const e=_(s,t,n,a,o,d),l={termType:"BlankNode",value:t.getId()};n.push({subject:h,predicate:r,object:e,graph:a}),n.push({subject:h,predicate:i,object:l,graph:a}),h=l}if(l){const e=_(l,t,n,a,o,d);n.push({subject:h,predicate:r,object:e,graph:a}),n.push({subject:h,predicate:i,object:s,graph:a})}return u}(e["@list"],t,n,a,o,l);h.termType=d.termType,h.value=d.value}else{const t=s.isObject(e)?e["@id"]:e;h.termType=t.startsWith("_:")?"BlankNode":"NamedNode",h.value=t}return"NamedNode"!==h.termType||v(h.value)?h:(l.eventHandler&&u({event:{type:["JsonLdEvent"],code:"relative object reference",level:"warning",message:"Relative object reference found.",details:{object:h.value}},options:l}),null)}e.exports=w,w.toRDF=(e,t)=>{const n=new l.IdentifierIssuer("_:b"),o={"@default":{}};a(e,o,"@default",n);const d=[],r=Object.keys(o).sort();for(const e of r){let a;if("@default"===e)a={termType:"DefaultGraph",value:""};else{if(!v(e)){t.eventHandler&&u({event:{type:["JsonLdEvent"],code:"relative graph reference",level:"warning",message:"Relative graph reference found.",details:{graph:e}},options:t});continue}a=e.startsWith("_:")?{termType:"BlankNode"}:{termType:"NamedNode"},a.value=e}x(d,o[e],a,n,t)}return d}},7382:e=>{const t={};e.exports=t,t.isArray=Array.isArray,t.isBoolean=e=>"boolean"==typeof e||"[object Boolean]"===Object.prototype.toString.call(e),t.isDouble=e=>t.isNumber(e)&&(-1!==String(e).indexOf(".")||Math.abs(e)>=1e21),t.isEmptyObject=e=>t.isObject(e)&&0===Object.keys(e).length,t.isNumber=e=>"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e),t.isNumeric=e=>!isNaN(parseFloat(e))&&isFinite(e),t.isObject=e=>"[object Object]"===Object.prototype.toString.call(e),t.isString=e=>"string"==typeof e||"[object String]"===Object.prototype.toString.call(e),t.isUndefined=e=>void 0===e},470:(e,t,n)=>{const a=n(7382),o={};e.exports=o,o.parsers={simple:{keys:["href","scheme","authority","path","query","fragment"],regex:/^(?:([^:\/?#]+):)?(?:\/\/([^\/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?/},full:{keys:["href","protocol","scheme","authority","auth","user","password","hostname","port","path","directory","file","query","fragment"],regex:/^(([a-zA-Z][a-zA-Z0-9+-.]*):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?(?:(((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/}},o.parse=(e,t)=>{const n={},a=o.parsers[t||"full"],d=a.regex.exec(e);let r=a.keys.length;for(;r--;)n[a.keys[r]]=void 0===d[r]?null:d[r];return("https"===n.scheme&&"443"===n.port||"http"===n.scheme&&"80"===n.port)&&(n.href=n.href.replace(":"+n.port,""),n.authority=n.authority.replace(":"+n.port,""),n.port=null),n.normalizedPath=o.removeDotSegments(n.path),n},o.prependBase=(e,t)=>{if(null===e)return t;if(o.isAbsolute(t))return t;e&&!a.isString(e)||(e=o.parse(e||""));const n=o.parse(t),d={protocol:e.protocol||""};if(null!==n.authority)d.authority=n.authority,d.path=n.path,d.query=n.query;else if(d.authority=e.authority,""===n.path)d.path=e.path,null!==n.query?d.query=n.query:d.query=e.query;else{if(0===n.path.indexOf("/"))d.path=n.path;else{let t=e.path;t=t.substr(0,t.lastIndexOf("/")+1),(t.length>0||e.authority)&&"/"!==t.substr(-1)&&(t+="/"),t+=n.path,d.path=t}d.query=n.query}""!==n.path&&(d.path=o.removeDotSegments(d.path));let r=d.protocol;return null!==d.authority&&(r+="//"+d.authority),r+=d.path,null!==d.query&&(r+="?"+d.query),null!==n.fragment&&(r+="#"+n.fragment),""===r&&(r="./"),r},o.removeBase=(e,t)=>{if(null===e)return t;e&&!a.isString(e)||(e=o.parse(e||""));let n="";if(""!==e.href?n+=(e.protocol||"")+"//"+(e.authority||""):t.indexOf("//")&&(n+="//"),0!==t.indexOf(n))return t;const d=o.parse(t.substr(n.length)),r=e.normalizedPath.split("/"),i=d.normalizedPath.split("/"),s=d.fragment||d.query?0:1;for(;r.length>0&&i.length>s&&r[0]===i[0];)r.shift(),i.shift();let l="";if(r.length>0){r.pop();for(let e=0;e<r.length;++e)l+="../"}return l+=i.join("/"),null!==d.query&&(l+="?"+d.query),null!==d.fragment&&(l+="#"+d.fragment),""===l&&(l="./"),l},o.removeDotSegments=e=>{if(0===e.length)return"";const t=e.split("/"),n=[];for(;t.length>0;){const e=t.shift(),a=0===t.length;"."!==e?".."!==e?n.push(e):(n.pop(),a&&n.push("")):a&&n.push("")}return"/"===e[0]&&n.length>0&&""!==n[0]&&n.unshift(""),1===n.length&&""===n[0]?"/":n.join("/")};const d=/^([A-Za-z][A-Za-z0-9+-.]*|_):[^\s]*$/;o.isAbsolute=e=>a.isString(e)&&d.test(e),o.isRelative=e=>a.isString(e)},9263:(e,t,n)=>{const a=n(3978),o=n(7382),d=n(989).IdentifierIssuer,r=n(2207),i=/(?:<[^>]*?>|"[^"]*?"|[^,])+/g,s=/\s*<([^>]*?)>\s*(?:;\s*(.*))?/,l=/(.*?)=(?:(?:"([^"]*?)")|([^"]*?))\s*(?:(?:;\s*)|$)/g,u="application/ld+json, application/json",m={};function c(e,t){if(o.isArray(t))for(let n=0;n<t.length;++n)t[n]=c(e,t[n]);else if(a.isList(t))t["@list"]=c(e,t["@list"]);else if(o.isObject(t)){a.isBlankNode(t)&&(t["@id"]=e.getId(t["@id"]));const n=Object.keys(t).sort();for(let a=0;a<n.length;++a){const o=n[a];"@id"!==o&&(t[o]=c(e,t[o]))}}return t}e.exports=m,m.IdentifierIssuer=d,m.REGEX_BCP47=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/,m.REGEX_KEYWORD=/^@[a-zA-Z]+$/,m.clone=function(e){if(e&&"object"==typeof e){let t;if(o.isArray(e)){t=[];for(let n=0;n<e.length;++n)t[n]=m.clone(e[n])}else if(e instanceof Map){t=new Map;for(const[n,a]of e)t.set(n,m.clone(a))}else if(e instanceof Set){t=new Set;for(const n of e)t.add(m.clone(n))}else if(o.isObject(e)){t={};for(const n in e)t[n]=m.clone(e[n])}else t=e.toString();return t}return e},m.asArray=function(e){return Array.isArray(e)?e:[e]},m.buildHeaders=(e={})=>{if(Object.keys(e).some((e=>"accept"===e.toLowerCase())))throw new RangeError('Accept header may not be specified; only "'+u+'" is supported.');return Object.assign({Accept:u},e)},m.parseLinkHeader=e=>{const t={},n=e.match(i);for(let e=0;e<n.length;++e){let a=n[e].match(s);if(!a)continue;const o={target:a[1]},d=a[2];for(;a=l.exec(d);)o[a[1]]=void 0===a[2]?a[3]:a[2];const r=o.rel||"";Array.isArray(t[r])?t[r].push(o):t.hasOwnProperty(r)?t[r]=[t[r],o]:t[r]=o}return t},m.validateTypeValue=(e,t)=>{if(!(o.isString(e)||o.isArray(e)&&e.every((e=>o.isString(e))))){if(t&&o.isObject(e))switch(Object.keys(e).length){case 0:return;case 1:if("@default"in e&&m.asArray(e["@default"]).every((e=>o.isString(e))))return}throw new r('Invalid JSON-LD syntax; "@type" value must a string, an array of strings, an empty object, or a default object.',"jsonld.SyntaxError",{code:"invalid type value",value:e})}},m.hasProperty=(e,t)=>{if(e.hasOwnProperty(t)){const n=e[t];return!o.isArray(n)||n.length>0}return!1},m.hasValue=(e,t,n)=>{if(m.hasProperty(e,t)){let d=e[t];const r=a.isList(d);if(o.isArray(d)||r){r&&(d=d["@list"]);for(let e=0;e<d.length;++e)if(m.compareValues(n,d[e]))return!0}else if(!o.isArray(n))return m.compareValues(n,d)}return!1},m.addValue=(e,t,n,a)=>{if("propertyIsArray"in(a=a||{})||(a.propertyIsArray=!1),"valueIsArray"in a||(a.valueIsArray=!1),"allowDuplicate"in a||(a.allowDuplicate=!0),"prependValue"in a||(a.prependValue=!1),a.valueIsArray)e[t]=n;else if(o.isArray(n)){0===n.length&&a.propertyIsArray&&!e.hasOwnProperty(t)&&(e[t]=[]),a.prependValue&&(n=n.concat(e[t]),e[t]=[]);for(let o=0;o<n.length;++o)m.addValue(e,t,n[o],a)}else if(e.hasOwnProperty(t)){const d=!a.allowDuplicate&&m.hasValue(e,t,n);o.isArray(e[t])||d&&!a.propertyIsArray||(e[t]=[e[t]]),d||(a.prependValue?e[t].unshift(n):e[t].push(n))}else e[t]=a.propertyIsArray?[n]:n},m.getValues=(e,t)=>[].concat(e[t]||[]),m.removeProperty=(e,t)=>{delete e[t]},m.removeValue=(e,t,n,a)=>{"propertyIsArray"in(a=a||{})||(a.propertyIsArray=!1);const o=m.getValues(e,t).filter((e=>!m.compareValues(e,n)));0===o.length?m.removeProperty(e,t):1!==o.length||a.propertyIsArray?e[t]=o:e[t]=o[0]},m.relabelBlankNodes=(e,t)=>c((t=t||{}).issuer||new d("_:b"),e),m.compareValues=(e,t)=>e===t||!(!a.isValue(e)||!a.isValue(t)||e["@value"]!==t["@value"]||e["@type"]!==t["@type"]||e["@language"]!==t["@language"]||e["@index"]!==t["@index"])||!!(o.isObject(e)&&"@id"in e&&o.isObject(t)&&"@id"in t)&&e["@id"]===t["@id"],m.compareShortestLeast=(e,t)=>e.length<t.length?-1:t.length<e.length?1:e===t?0:e<t?-1:1},9749:(e,t,n)=>{const a=n(8799),o=Symbol("max"),d=Symbol("length"),r=Symbol("lengthCalculator"),i=Symbol("allowStale"),s=Symbol("maxAge"),l=Symbol("dispose"),u=Symbol("noDisposeOnSet"),m=Symbol("lruList"),c=Symbol("cache"),p=Symbol("updateAgeOnGet"),h=()=>1,f=(e,t,n)=>{const a=e[c].get(t);if(a){const t=a.value;if(N(e,t)){if(y(e,a),!e[i])return}else n&&(e[p]&&(a.value.now=Date.now()),e[m].unshiftNode(a));return t.value}},N=(e,t)=>{if(!t||!t.maxAge&&!e[s])return!1;const n=Date.now()-t.now;return t.maxAge?n>t.maxAge:e[s]&&n>e[s]},g=e=>{if(e[d]>e[o])for(let t=e[m].tail;e[d]>e[o]&&null!==t;){const n=t.prev;y(e,t),t=n}},y=(e,t)=>{if(t){const n=t.value;e[l]&&e[l](n.key,n.value),e[d]-=n.length,e[c].delete(n.key),e[m].removeNode(t)}};class ${constructor(e,t,n,a,o){this.key=e,this.value=t,this.length=n,this.now=a,this.maxAge=o||0}}const b=(e,t,n,a)=>{let o=n.value;N(e,o)&&(y(e,n),e[i]||(o=void 0)),o&&t.call(a,o.value,o.key,e)};e.exports=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[o]=e.max||1/0;const t=e.length||h;if(this[r]="function"!=typeof t?h:t,this[i]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[s]=e.maxAge||0,this[l]=e.dispose,this[u]=e.noDisposeOnSet||!1,this[p]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[o]=e||1/0,g(this)}get max(){return this[o]}set allowStale(e){this[i]=!!e}get allowStale(){return this[i]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[s]=e,g(this)}get maxAge(){return this[s]}set lengthCalculator(e){"function"!=typeof e&&(e=h),e!==this[r]&&(this[r]=e,this[d]=0,this[m].forEach((e=>{e.length=this[r](e.value,e.key),this[d]+=e.length}))),g(this)}get lengthCalculator(){return this[r]}get length(){return this[d]}get itemCount(){return this[m].length}rforEach(e,t){t=t||this;for(let n=this[m].tail;null!==n;){const a=n.prev;b(this,e,n,t),n=a}}forEach(e,t){t=t||this;for(let n=this[m].head;null!==n;){const a=n.next;b(this,e,n,t),n=a}}keys(){return this[m].toArray().map((e=>e.key))}values(){return this[m].toArray().map((e=>e.value))}reset(){this[l]&&this[m]&&this[m].length&&this[m].forEach((e=>this[l](e.key,e.value))),this[c]=new Map,this[m]=new a,this[d]=0}dump(){return this[m].map((e=>!N(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[m]}set(e,t,n){if((n=n||this[s])&&"number"!=typeof n)throw new TypeError("maxAge must be a number");const a=n?Date.now():0,i=this[r](t,e);if(this[c].has(e)){if(i>this[o])return y(this,this[c].get(e)),!1;const r=this[c].get(e).value;return this[l]&&(this[u]||this[l](e,r.value)),r.now=a,r.maxAge=n,r.value=t,this[d]+=i-r.length,r.length=i,this.get(e),g(this),!0}const p=new $(e,t,i,a,n);return p.length>this[o]?(this[l]&&this[l](e,t),!1):(this[d]+=p.length,this[m].unshift(p),this[c].set(e,this[m].head),g(this),!0)}has(e){if(!this[c].has(e))return!1;const t=this[c].get(e).value;return!N(this,t)}get(e){return f(this,e,!0)}peek(e){return f(this,e,!1)}pop(){const e=this[m].tail;return e?(y(this,e),e.value):null}del(e){y(this,this[c].get(e))}load(e){this.reset();const t=Date.now();for(let n=e.length-1;n>=0;n--){const a=e[n],o=a.e||0;if(0===o)this.set(a.k,a.v);else{const e=o-t;e>0&&this.set(a.k,a.v,e)}}}prune(){this[c].forEach(((e,t)=>f(this,t,!1)))}}},6585:e=>{var t=1e3,n=60*t,a=60*n,o=24*a;function d(e,t,n,a){var o=t>=1.5*n;return Math.round(e/n)+" "+a+(o?"s":"")}e.exports=function(e,r){r=r||{};var i,s,l=typeof e;if("string"===l&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var d=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(d){var r=parseFloat(d[1]);switch((d[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"weeks":case"week":case"w":return 6048e5*r;case"days":case"day":case"d":return r*o;case"hours":case"hour":case"hrs":case"hr":case"h":return r*a;case"minutes":case"minute":case"mins":case"min":case"m":return r*n;case"seconds":case"second":case"secs":case"sec":case"s":return r*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}(e);if("number"===l&&isFinite(e))return r.long?(i=e,(s=Math.abs(i))>=o?d(i,s,o,"day"):s>=a?d(i,s,a,"hour"):s>=n?d(i,s,n,"minute"):s>=t?d(i,s,t,"second"):i+" ms"):function(e){var d=Math.abs(e);return d>=o?Math.round(e/o)+"d":d>=a?Math.round(e/a)+"h":d>=n?Math.round(e/n)+"m":d>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},5606:e=>{var t,n,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function d(){throw new Error("clearTimeout has not been defined")}function r(e){if(t===setTimeout)return setTimeout(e,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:o}catch(e){t=o}try{n="function"==typeof clearTimeout?clearTimeout:d}catch(e){n=d}}();var i,s=[],l=!1,u=-1;function m(){l&&i&&(l=!1,i.length?s=i.concat(s):u=-1,s.length&&c())}function c(){if(!l){var e=r(m);l=!0;for(var t=s.length;t;){for(i=s,s=[];++u<t;)i&&i[u].run();u=-1,t=s.length}i=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===d||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new p(e,t)),1!==s.length||l||r(c)},p.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=h,a.addListener=h,a.once=h,a.off=h,a.removeListener=h,a.removeAllListeners=h,a.emit=h,a.prependListener=h,a.prependOnceListener=h,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},9596:(e,t,n)=>{let a;e.exports="function"==typeof queueMicrotask?queueMicrotask.bind("undefined"!=typeof window?window:n.g):e=>(a||(a=Promise.resolve())).then(e).catch((e=>setTimeout((()=>{throw e}),0)))},989:(e,t,n)=>{e.exports=n(4005)},2985:e=>{e.exports=class e{constructor(e,t=new Map,n=0){this.prefix=e,this._existing=t,this.counter=n}clone(){const{prefix:t,_existing:n,counter:a}=this;return new e(t,new Map(n),a)}getId(e){const t=e&&this._existing.get(e);if(t)return t;const n=this.prefix+this.counter;return this.counter++,e&&this._existing.set(e,n),n}hasId(e){return this._existing.has(e)}getOldIds(){return[...this._existing.keys()]}}},3751:(e,t,n)=>{n(2791);const a=self.crypto||self.msCrypto;e.exports=class{constructor(e){if(!a||!a.subtle)throw new Error("crypto.subtle not found.");if("sha256"===e)this.algorithm={name:"SHA-256"};else{if("sha1"!==e)throw new Error(`Unsupported algorithm "${e}".`);this.algorithm={name:"SHA-1"}}this._content=""}update(e){this._content+=e}async digest(){const e=(new TextEncoder).encode(this._content),t=new Uint8Array(await a.subtle.digest(this.algorithm,e));let n="";for(let e=0;e<t.length;++e)n+=t[e].toString(16).padStart(2,"0");return n}}},1227:e=>{const t="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString",n="http://www.w3.org/2001/XMLSchema#string",a="NamedNode",o="BlankNode",d="Literal",r="DefaultGraph",i={};(()=>{const e="(?:<([^:]+:[^>]*)>)",t="A-Za-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�_",n=t+"0-9-·̀-ͯ‿-⁀",a="(_:(?:["+t+"0-9])(?:(?:["+n+".])*(?:["+n+"]))?)",o="[ \\t]+",d="[ \\t]*",r="(?:"+e+"|"+a+")"+o,s=e+o,l="(?:"+e+"|"+a+'|(?:"([^"\\\\]*(?:\\\\.[^"\\\\]*)*)"(?:(?:\\^\\^'+e+")|(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*)))?))"+d,u="(?:\\.|(?:(?:"+e+"|"+a+")"+d+"\\.))";i.eoln=/(?:\r\n)|(?:\n)|(?:\r)/g,i.empty=new RegExp("^"+d+"$"),i.quad=new RegExp("^"+d+r+s+l+u+d+"$")})(),e.exports=class e{static parse(e){const s=[],u={},m=e.split(i.eoln);let c=0;for(const e of m){if(c++,i.empty.test(e))continue;const m=e.match(i.quad);if(null===m)throw new Error("N-Quads parse error on line "+c+".");const f={subject:null,predicate:null,object:null,graph:null};if(void 0!==m[1]?f.subject={termType:a,value:m[1]}:f.subject={termType:o,value:m[2]},f.predicate={termType:a,value:m[3]},void 0!==m[4]?f.object={termType:a,value:m[4]}:void 0!==m[5]?f.object={termType:o,value:m[5]}:(f.object={termType:d,value:void 0,datatype:{termType:a}},void 0!==m[7]?f.object.datatype.value=m[7]:void 0!==m[8]?(f.object.datatype.value=t,f.object.language=m[8]):f.object.datatype.value=n,f.object.value=m[6].replace(l,(function(e,t,n,a){if(t)switch(t){case"t":return"\t";case"b":return"\b";case"n":return"\n";case"r":return"\r";case"f":return"\f";case'"':return'"';case"'":return"'";case"\\":return"\\"}if(n)return String.fromCharCode(parseInt(n,16));if(a)throw new Error("Unsupported U escape")}))),void 0!==m[9]?f.graph={termType:a,value:m[9]}:void 0!==m[10]?f.graph={termType:o,value:m[10]}:f.graph={termType:r,value:""},f.graph.value in u){let e=!0;const t=u[f.graph.value];for(const n of t)if(h=f,(p=n).subject.termType===h.subject.termType&&p.object.termType===h.object.termType&&p.subject.value===h.subject.value&&p.predicate.value===h.predicate.value&&p.object.value===h.object.value&&(p.object.termType!==d||p.object.datatype.termType===h.object.datatype.termType&&p.object.language===h.object.language&&p.object.datatype.value===h.object.datatype.value)){e=!1;break}e&&(t.push(f),s.push(f))}else u[f.graph.value]=[f],s.push(f)}var p,h;return s}static serialize(t){Array.isArray(t)||(t=e.legacyDatasetToQuads(t));const n=[];for(const a of t)n.push(e.serializeQuad(a));return n.sort().join("")}static serializeQuadComponents(e,d,r,i){let l="";return e.termType===a?l+=`<${e.value}>`:l+=`${e.value}`,l+=` <${d.value}> `,r.termType===a?l+=`<${r.value}>`:r.termType===o?l+=r.value:(l+=`"${function(e){return e.replace(s,(function(e){switch(e){case'"':return'\\"';case"\\":return"\\\\";case"\n":return"\\n";case"\r":return"\\r"}}))}(r.value)}"`,r.datatype.value===t?r.language&&(l+=`@${r.language}`):r.datatype.value!==n&&(l+=`^^<${r.datatype.value}>`)),i.termType===a?l+=` <${i.value}>`:i.termType===o&&(l+=` ${i.value}`),l+=" .\n",l}static serializeQuad(t){return e.serializeQuadComponents(t.subject,t.predicate,t.object,t.graph)}static legacyDatasetToQuads(e){const i=[],s={"blank node":o,IRI:a,literal:d};for(const l in e)e[l].forEach((e=>{const u={};for(const o in e){const r=e[o],i={termType:s[r.type],value:r.value};i.termType===d&&(i.datatype={termType:a},"datatype"in r&&(i.datatype.value=r.datatype),"language"in r?("datatype"in r||(i.datatype.value=t),i.language=r.language):"datatype"in r||(i.datatype.value=n)),u[o]=i}u.graph="@default"===l?{termType:r,value:""}:{termType:l.startsWith("_:")?o:a,value:l},i.push(u)}));return i}};const s=/["\\\n\r]/g,l=/(?:\\([tbnrf"'\\]))|(?:\\u([0-9A-Fa-f]{4}))|(?:\\U([0-9A-Fa-f]{8}))/g},9925:e=>{e.exports=class{constructor(e){this.current=e.sort(),this.done=!1,this.dir=new Map;for(let t=0;t<e.length;++t)this.dir.set(e[t],!0)}hasNext(){return!this.done}next(){const{current:e,dir:t}=this,n=e.slice();let a=null,o=0;const d=e.length;for(let n=0;n<d;++n){const r=e[n],i=t.get(r);(null===a||r>a)&&(i&&n>0&&r>e[n-1]||!i&&n<d-1&&r>e[n+1])&&(a=r,o=n)}if(null===a)this.done=!0;else{const n=t.get(a)?o-1:o+1;e[o]=e[n],e[n]=a;for(const n of e)n>a&&t.set(n,!t.get(n))}return n}}},3513:(e,t,n)=>{const a=n(2985),o=n(3751),d=n(9925),r=n(1227);function i(e,t){return e.hash<t.hash?-1:e.hash>t.hash?1:0}e.exports=class{constructor({createMessageDigest:e=(()=>new o("sha256")),canonicalIdMap:t=new Map,maxDeepIterations:n=1/0}={}){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new a("_:c14n",t),this.createMessageDigest=e,this.maxDeepIterations=n,this.quads=null,this.deepIterations=null}async main(e){this.deepIterations=new Map,this.quads=e;for(const t of e)this._addBlankNodeQuadInfo({quad:t,component:t.subject}),this._addBlankNodeQuadInfo({quad:t,component:t.object}),this._addBlankNodeQuadInfo({quad:t,component:t.graph});const t=new Map,n=[...this.blankNodeInfo.keys()];let o=0;for(const e of n)++o%100==0&&await this._yield(),await this._hashAndTrackBlankNode({id:e,hashToBlankNodes:t});const d=[...t.keys()].sort(),s=[];for(const e of d){const n=t.get(e);if(n.length>1){s.push(n);continue}const a=n[0];this.canonicalIssuer.getId(a)}for(const e of s){const t=[];for(const n of e){if(this.canonicalIssuer.hasId(n))continue;const e=new a("_:b");e.getId(n);const o=await this.hashNDegreeQuads(n,e);t.push(o)}t.sort(i);for(const e of t){const t=e.issuer.getOldIds();for(const e of t)this.canonicalIssuer.getId(e)}}const l=[];for(const e of this.quads){const t=r.serializeQuadComponents(this._componentWithCanonicalId(e.subject),e.predicate,this._componentWithCanonicalId(e.object),this._componentWithCanonicalId(e.graph));l.push(t)}return l.sort(),l.join("")}async hashFirstDegreeQuads(e){const t=[],n=this.blankNodeInfo.get(e),a=n.quads;for(const n of a){const a={subject:null,predicate:n.predicate,object:null,graph:null};a.subject=this.modifyFirstDegreeComponent(e,n.subject,"subject"),a.object=this.modifyFirstDegreeComponent(e,n.object,"object"),a.graph=this.modifyFirstDegreeComponent(e,n.graph,"graph"),t.push(r.serializeQuad(a))}t.sort();const o=this.createMessageDigest();for(const e of t)o.update(e);return n.hash=await o.digest(),n.hash}async hashRelatedBlankNode(e,t,n,a){let o;o=this.canonicalIssuer.hasId(e)?this.canonicalIssuer.getId(e):n.hasId(e)?n.getId(e):this.blankNodeInfo.get(e).hash;const d=this.createMessageDigest();return d.update(a),"g"!==a&&d.update(this.getRelatedPredicate(t)),d.update(o),d.digest()}async hashNDegreeQuads(e,t){const n=this.deepIterations.get(e)||0;if(n>this.maxDeepIterations)throw new Error(`Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);this.deepIterations.set(e,n+1);const a=this.createMessageDigest(),o=await this.createHashToRelated(e,t),r=[...o.keys()].sort();for(const e of r){a.update(e);let n,r="";const i=new d(o.get(e));let s=0;for(;i.hasNext();){const e=i.next();++s%3==0&&await this._yield();let a=t.clone(),o="";const d=[];let l=!1;for(const t of e)if(this.canonicalIssuer.hasId(t)?o+=this.canonicalIssuer.getId(t):(a.hasId(t)||d.push(t),o+=a.getId(t)),0!==r.length&&o>r){l=!0;break}if(!l){for(const e of d){const t=await this.hashNDegreeQuads(e,a);if(o+=a.getId(e),o+=`<${t.hash}>`,a=t.issuer,0!==r.length&&o>r){l=!0;break}}l||(0===r.length||o<r)&&(r=o,n=a)}}a.update(r),t=n}return{hash:await a.digest(),issuer:t}}modifyFirstDegreeComponent(e,t){return"BlankNode"!==t.termType?t:{termType:"BlankNode",value:t.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return`<${e.predicate.value}>`}async createHashToRelated(e,t){const n=new Map,a=this.blankNodeInfo.get(e).quads;let o=0;for(const d of a)++o%100==0&&await this._yield(),await Promise.all([this._addRelatedBlankNodeHash({quad:d,component:d.subject,position:"s",id:e,issuer:t,hashToRelated:n}),this._addRelatedBlankNodeHash({quad:d,component:d.object,position:"o",id:e,issuer:t,hashToRelated:n}),this._addRelatedBlankNodeHash({quad:d,component:d.graph,position:"g",id:e,issuer:t,hashToRelated:n})]);return n}async _hashAndTrackBlankNode({id:e,hashToBlankNodes:t}){const n=await this.hashFirstDegreeQuads(e),a=t.get(n);a?a.push(e):t.set(n,[e])}_addBlankNodeQuadInfo({quad:e,component:t}){if("BlankNode"!==t.termType)return;const n=t.value,a=this.blankNodeInfo.get(n);a?a.quads.add(e):this.blankNodeInfo.set(n,{quads:new Set([e]),hash:null})}async _addRelatedBlankNodeHash({quad:e,component:t,position:n,id:a,issuer:o,hashToRelated:d}){if("BlankNode"!==t.termType||t.value===a)return;const r=t.value,i=await this.hashRelatedBlankNode(r,e,o,n),s=d.get(i);s?s.push(r):d.set(i,[r])}_componentWithCanonicalId(e){return"BlankNode"!==e.termType||e.value.startsWith(this.canonicalIssuer.prefix)?e:{termType:"BlankNode",value:this.canonicalIssuer.getId(e.value)}}async _yield(){return new Promise((e=>setImmediate(e)))}}},2438:(e,t,n)=>{const a=n(2985),o=n(3751),d=n(9925),r=n(1227);function i(e,t){return e.hash<t.hash?-1:e.hash>t.hash?1:0}e.exports=class{constructor({createMessageDigest:e=(()=>new o("sha256")),canonicalIdMap:t=new Map,maxDeepIterations:n=1/0}={}){this.name="URDNA2015",this.blankNodeInfo=new Map,this.canonicalIssuer=new a("_:c14n",t),this.createMessageDigest=e,this.maxDeepIterations=n,this.quads=null,this.deepIterations=null}main(e){this.deepIterations=new Map,this.quads=e;for(const t of e)this._addBlankNodeQuadInfo({quad:t,component:t.subject}),this._addBlankNodeQuadInfo({quad:t,component:t.object}),this._addBlankNodeQuadInfo({quad:t,component:t.graph});const t=new Map,n=[...this.blankNodeInfo.keys()];for(const e of n)this._hashAndTrackBlankNode({id:e,hashToBlankNodes:t});const o=[...t.keys()].sort(),d=[];for(const e of o){const n=t.get(e);if(n.length>1){d.push(n);continue}const a=n[0];this.canonicalIssuer.getId(a)}for(const e of d){const t=[];for(const n of e){if(this.canonicalIssuer.hasId(n))continue;const e=new a("_:b");e.getId(n);const o=this.hashNDegreeQuads(n,e);t.push(o)}t.sort(i);for(const e of t){const t=e.issuer.getOldIds();for(const e of t)this.canonicalIssuer.getId(e)}}const s=[];for(const e of this.quads){const t=r.serializeQuadComponents(this._componentWithCanonicalId({component:e.subject}),e.predicate,this._componentWithCanonicalId({component:e.object}),this._componentWithCanonicalId({component:e.graph}));s.push(t)}return s.sort(),s.join("")}hashFirstDegreeQuads(e){const t=[],n=this.blankNodeInfo.get(e),a=n.quads;for(const n of a){const a={subject:null,predicate:n.predicate,object:null,graph:null};a.subject=this.modifyFirstDegreeComponent(e,n.subject,"subject"),a.object=this.modifyFirstDegreeComponent(e,n.object,"object"),a.graph=this.modifyFirstDegreeComponent(e,n.graph,"graph"),t.push(r.serializeQuad(a))}t.sort();const o=this.createMessageDigest();for(const e of t)o.update(e);return n.hash=o.digest(),n.hash}hashRelatedBlankNode(e,t,n,a){let o;o=this.canonicalIssuer.hasId(e)?this.canonicalIssuer.getId(e):n.hasId(e)?n.getId(e):this.blankNodeInfo.get(e).hash;const d=this.createMessageDigest();return d.update(a),"g"!==a&&d.update(this.getRelatedPredicate(t)),d.update(o),d.digest()}hashNDegreeQuads(e,t){const n=this.deepIterations.get(e)||0;if(n>this.maxDeepIterations)throw new Error(`Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);this.deepIterations.set(e,n+1);const a=this.createMessageDigest(),o=this.createHashToRelated(e,t),r=[...o.keys()].sort();for(const e of r){a.update(e);let n,r="";const i=new d(o.get(e));for(;i.hasNext();){const e=i.next();let a=t.clone(),o="";const d=[];let s=!1;for(const t of e)if(this.canonicalIssuer.hasId(t)?o+=this.canonicalIssuer.getId(t):(a.hasId(t)||d.push(t),o+=a.getId(t)),0!==r.length&&o>r){s=!0;break}if(!s){for(const e of d){const t=this.hashNDegreeQuads(e,a);if(o+=a.getId(e),o+=`<${t.hash}>`,a=t.issuer,0!==r.length&&o>r){s=!0;break}}s||(0===r.length||o<r)&&(r=o,n=a)}}a.update(r),t=n}return{hash:a.digest(),issuer:t}}modifyFirstDegreeComponent(e,t){return"BlankNode"!==t.termType?t:{termType:"BlankNode",value:t.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return`<${e.predicate.value}>`}createHashToRelated(e,t){const n=new Map,a=this.blankNodeInfo.get(e).quads;for(const o of a)this._addRelatedBlankNodeHash({quad:o,component:o.subject,position:"s",id:e,issuer:t,hashToRelated:n}),this._addRelatedBlankNodeHash({quad:o,component:o.object,position:"o",id:e,issuer:t,hashToRelated:n}),this._addRelatedBlankNodeHash({quad:o,component:o.graph,position:"g",id:e,issuer:t,hashToRelated:n});return n}_hashAndTrackBlankNode({id:e,hashToBlankNodes:t}){const n=this.hashFirstDegreeQuads(e),a=t.get(n);a?a.push(e):t.set(n,[e])}_addBlankNodeQuadInfo({quad:e,component:t}){if("BlankNode"!==t.termType)return;const n=t.value,a=this.blankNodeInfo.get(n);a?a.quads.add(e):this.blankNodeInfo.set(n,{quads:new Set([e]),hash:null})}_addRelatedBlankNodeHash({quad:e,component:t,position:n,id:a,issuer:o,hashToRelated:d}){if("BlankNode"!==t.termType||t.value===a)return;const r=t.value,i=this.hashRelatedBlankNode(r,e,o,n),s=d.get(i);s?s.push(r):d.set(i,[r])}_componentWithCanonicalId({component:e}){return"BlankNode"!==e.termType||e.value.startsWith(this.canonicalIssuer.prefix)?e:{termType:"BlankNode",value:this.canonicalIssuer.getId(e.value)}}}},3845:(e,t,n)=>{const a=n(3751),o=n(3513);e.exports=class extends o{constructor(){super(),this.name="URGNA2012",this.createMessageDigest=()=>new a("sha1")}modifyFirstDegreeComponent(e,t,n){return"BlankNode"!==t.termType?t:"graph"===n?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:t.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return e.predicate.value}async createHashToRelated(e,t){const n=new Map,a=this.blankNodeInfo.get(e).quads;let o=0;for(const d of a){let a,r;if("BlankNode"===d.subject.termType&&d.subject.value!==e)r=d.subject.value,a="p";else{if("BlankNode"!==d.object.termType||d.object.value===e)continue;r=d.object.value,a="r"}++o%100==0&&await this._yield();const i=await this.hashRelatedBlankNode(r,d,t,a),s=n.get(i);s?s.push(r):n.set(i,[r])}return n}}},378:(e,t,n)=>{const a=n(3751),o=n(2438);e.exports=class extends o{constructor(){super(),this.name="URGNA2012",this.createMessageDigest=()=>new a("sha1")}modifyFirstDegreeComponent(e,t,n){return"BlankNode"!==t.termType?t:"graph"===n?{termType:"BlankNode",value:"_:g"}:{termType:"BlankNode",value:t.value===e?"_:a":"_:z"}}getRelatedPredicate(e){return e.predicate.value}createHashToRelated(e,t){const n=new Map,a=this.blankNodeInfo.get(e).quads;for(const o of a){let a,d;if("BlankNode"===o.subject.termType&&o.subject.value!==e)d=o.subject.value,a="p";else{if("BlankNode"!==o.object.termType||o.object.value===e)continue;d=o.object.value,a="r"}const r=this.hashRelatedBlankNode(d,o,t,a),i=n.get(r);i?i.push(d):n.set(r,[d])}return n}}},4005:(e,t,n)=>{const a=n(3513),o=n(3845),d=n(2438),r=n(378);let i;try{i=n(7789)}catch(e){}function s(e){return Array.isArray(e)?e:t.NQuads.legacyDatasetToQuads(e)}t.NQuads=n(1227),t.IdentifierIssuer=n(2985),t._rdfCanonizeNative=function(e){return e&&(i=e),i},t.canonize=async function(e,t){const n=s(e);if(t.useNative){if(!i)throw new Error("rdf-canonize-native not available");if(t.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "useNative".');return new Promise(((e,a)=>i.canonize(n,t,((t,n)=>t?a(t):e(n)))))}if("URDNA2015"===t.algorithm)return new a(t).main(n);if("URGNA2012"===t.algorithm){if(t.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "URGNA2012".');return new o(t).main(n)}if(!("algorithm"in t))throw new Error("No RDF Dataset Canonicalization algorithm specified.");throw new Error("Invalid RDF Dataset Canonicalization algorithm: "+t.algorithm)},t._canonizeSync=function(e,t){const n=s(e);if(t.useNative){if(!i)throw new Error("rdf-canonize-native not available");if(t.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "useNative".');return i.canonizeSync(n,t)}if("URDNA2015"===t.algorithm)return new d(t).main(n);if("URGNA2012"===t.algorithm){if(t.createMessageDigest)throw new Error('"createMessageDigest" cannot be used with "URGNA2012".');return new r(t).main(n)}if(!("algorithm"in t))throw new Error("No RDF Dataset Canonicalization algorithm specified.");throw new Error("Invalid RDF Dataset Canonicalization algorithm: "+t.algorithm)}},7793:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(9931),t),o(n(8483),t),o(n(2142),t),o(n(2426),t),o(n(3988),t),o(n(6754),t),o(n(8401),t)},9931:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BlankNode=void 0,t.BlankNode=class{constructor(e){this.termType="BlankNode",this.value=e}equals(e){return!!e&&"BlankNode"===e.termType&&e.value===this.value}}},8483:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DataFactory=void 0;const a=n(9931),o=n(2142),d=n(2426),r=n(3988),i=n(6754),s=n(8401);let l=0;t.DataFactory=class{constructor(e){this.blankNodeCounter=0,e=e||{},this.blankNodePrefix=e.blankNodePrefix||`df_${l++}_`}namedNode(e){return new r.NamedNode(e)}blankNode(e){return new a.BlankNode(e||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(e,t){return new d.Literal(e,t)}variable(e){return new s.Variable(e)}defaultGraph(){return o.DefaultGraph.INSTANCE}quad(e,t,n,a){return new i.Quad(e,t,n,a||this.defaultGraph())}fromTerm(e){switch(e.termType){case"NamedNode":return this.namedNode(e.value);case"BlankNode":return this.blankNode(e.value);case"Literal":return e.language?this.literal(e.value,e.language):e.datatype.equals(d.Literal.XSD_STRING)?this.literal(e.value):this.literal(e.value,this.fromTerm(e.datatype));case"Variable":return this.variable(e.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(e.subject),this.fromTerm(e.predicate),this.fromTerm(e.object),this.fromTerm(e.graph))}}fromQuad(e){return this.fromTerm(e)}resetBlankNodeCounter(){this.blankNodeCounter=0}}},2142:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultGraph=void 0;class n{constructor(){this.termType="DefaultGraph",this.value=""}equals(e){return!!e&&"DefaultGraph"===e.termType}}t.DefaultGraph=n,n.INSTANCE=new n},2426:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Literal=void 0;const a=n(3988);class o{constructor(e,t){this.termType="Literal",this.value=e,"string"==typeof t?(this.language=t,this.datatype=o.RDF_LANGUAGE_STRING):t?(this.language="",this.datatype=t):(this.language="",this.datatype=o.XSD_STRING)}equals(e){return!!e&&"Literal"===e.termType&&e.value===this.value&&e.language===this.language&&this.datatype.equals(e.datatype)}}t.Literal=o,o.RDF_LANGUAGE_STRING=new a.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),o.XSD_STRING=new a.NamedNode("http://www.w3.org/2001/XMLSchema#string")},3988:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.NamedNode=void 0,t.NamedNode=class{constructor(e){this.termType="NamedNode",this.value=e}equals(e){return!!e&&"NamedNode"===e.termType&&e.value===this.value}}},6754:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Quad=void 0,t.Quad=class{constructor(e,t,n,a){this.termType="Quad",this.value="",this.subject=e,this.predicate=t,this.object=n,this.graph=a}equals(e){return!!e&&("Quad"===e.termType||!e.termType)&&this.subject.equals(e.subject)&&this.predicate.equals(e.predicate)&&this.object.equals(e.object)&&this.graph.equals(e.graph)}}},8401:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=void 0,t.Variable=class{constructor(e){this.termType="Variable",this.value=e}equals(e){return!!e&&"Variable"===e.termType&&e.value===this.value}}},9349:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.getSupportedJavaScriptPrimitives=t.getSupportedRdfDatatypes=t.getTermRaw=t.toRdf=t.fromRdf=void 0;const d=n(7793),r=n(4802),i=n(103);o(n(4802),t),o(n(5448),t),o(n(103),t);const s=new d.DataFactory,l=new i.Translator;function u(e,t){return l.fromRdf(e,t)}l.registerHandler(new r.TypeHandlerString,r.TypeHandlerString.TYPES.map((e=>s.namedNode(e))),["string"]),l.registerHandler(new r.TypeHandlerBoolean,[r.TypeHandlerBoolean.TYPE].map((e=>s.namedNode(e))),["boolean"]),l.registerHandler(new r.TypeHandlerNumberDouble,r.TypeHandlerNumberDouble.TYPES.map((e=>s.namedNode(e))),["number"]),l.registerHandler(new r.TypeHandlerNumberInteger,r.TypeHandlerNumberInteger.TYPES.map((e=>s.namedNode(e))),["number"]),l.registerHandler(new r.TypeHandlerDate,r.TypeHandlerDate.TYPES.map((e=>s.namedNode(e))),["object"]),t.fromRdf=u,t.toRdf=function(e,t){return t&&"namedNode"in t&&(t={dataFactory:t}),(t=t||{})&&!t.dataFactory&&(t.dataFactory=s),l.toRdf(e,t)},t.getTermRaw=function(e,t){return"Literal"===e.termType?u(e,t):e.value},t.getSupportedRdfDatatypes=function(){return l.getSupportedRdfDatatypes()},t.getSupportedJavaScriptPrimitives=function(){return l.getSupportedJavaScriptPrimitives()}},5448:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},103:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Translator=void 0,t.Translator=class{constructor(){this.supportedRdfDatatypes=[],this.fromRdfHandlers={},this.toRdfHandlers={}}static incorrectRdfDataType(e){throw new Error(`Invalid RDF ${e.datatype.value} value: '${e.value}'`)}registerHandler(e,t,n){for(const n of t)this.supportedRdfDatatypes.push(n),this.fromRdfHandlers[n.value]=e;for(const t of n){let n=this.toRdfHandlers[t];n||(this.toRdfHandlers[t]=n=[]),n.push(e)}}fromRdf(e,t){const n=this.fromRdfHandlers[e.datatype.value];return n?n.fromRdf(e,t):e.value}toRdf(e,t){const n=this.toRdfHandlers[typeof e];if(n)for(const a of n){const n=a.toRdf(e,t);if(n)return n}throw new Error(`Invalid JavaScript value: '${e}'`)}getSupportedRdfDatatypes(){return this.supportedRdfDatatypes}getSupportedJavaScriptPrimitives(){return Object.keys(this.toRdfHandlers)}}},92:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeHandlerBoolean=void 0;const a=n(103);class o{fromRdf(e,t){switch(e.value){case"true":case"1":return!0;case"false":case"0":return!1}return t&&a.Translator.incorrectRdfDataType(e),!1}toRdf(e,{datatype:t,dataFactory:n}){return n.literal(e?"true":"false",t||n.namedNode(o.TYPE))}}t.TypeHandlerBoolean=o,o.TYPE="http://www.w3.org/2001/XMLSchema#boolean"},7258:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeHandlerDate=void 0;const a=n(103);class o{fromRdf(e,t){switch(t&&!e.value.match(o.VALIDATORS[e.datatype.value.substr(33,e.datatype.value.length)])&&a.Translator.incorrectRdfDataType(e),e.datatype.value){case"http://www.w3.org/2001/XMLSchema#gDay":return new Date(0,0,parseInt(e.value,10));case"http://www.w3.org/2001/XMLSchema#gMonthDay":const t=e.value.split("-");return new Date(0,parseInt(t[0],10)-1,parseInt(t[1],10));case"http://www.w3.org/2001/XMLSchema#gYear":return new Date(e.value+"-01-01");case"http://www.w3.org/2001/XMLSchema#gYearMonth":return new Date(e.value+"-01");default:return new Date(e.value)}}toRdf(e,{datatype:t,dataFactory:n}){if(t=t||n.namedNode(o.TYPES[0]),!(e instanceof Date))return null;const a=e;let d;switch(t.value){case"http://www.w3.org/2001/XMLSchema#gDay":d=String(a.getUTCDate());break;case"http://www.w3.org/2001/XMLSchema#gMonthDay":d=a.getUTCMonth()+1+"-"+a.getUTCDate();break;case"http://www.w3.org/2001/XMLSchema#gYear":d=String(a.getUTCFullYear());break;case"http://www.w3.org/2001/XMLSchema#gYearMonth":d=a.getUTCFullYear()+"-"+(a.getUTCMonth()+1);break;case"http://www.w3.org/2001/XMLSchema#date":d=a.toISOString().replace(/T.*$/,"");break;default:d=a.toISOString()}return n.literal(d,t)}}t.TypeHandlerDate=o,o.TYPES=["http://www.w3.org/2001/XMLSchema#dateTime","http://www.w3.org/2001/XMLSchema#date","http://www.w3.org/2001/XMLSchema#gDay","http://www.w3.org/2001/XMLSchema#gMonthDay","http://www.w3.org/2001/XMLSchema#gYear","http://www.w3.org/2001/XMLSchema#gYearMonth"],o.VALIDATORS={date:/^[0-9]+-[0-9][0-9]-[0-9][0-9]Z?$/,dateTime:/^[0-9]+-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9](\.[0-9][0-9][0-9])?((Z?)|([\+-][0-9][0-9]:[0-9][0-9]))$/,gDay:/^[0-9]+$/,gMonthDay:/^[0-9]+-[0-9][0-9]$/,gYear:/^[0-9]+$/,gYearMonth:/^[0-9]+-[0-9][0-9]$/}},2406:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeHandlerNumberDouble=void 0;const a=n(103);class o{fromRdf(e,t){const n=parseFloat(e.value);return t&&isNaN(n)&&a.Translator.incorrectRdfDataType(e),n}toRdf(e,{datatype:t,dataFactory:n}){return t=t||n.namedNode(o.TYPES[0]),isNaN(e)?n.literal("NaN",t):isFinite(e)?e%1==0?null:n.literal(e.toExponential(15).replace(/(\d)0*e\+?/,"$1E"),t):n.literal(e>0?"INF":"-INF",t)}}t.TypeHandlerNumberDouble=o,o.TYPES=["http://www.w3.org/2001/XMLSchema#double","http://www.w3.org/2001/XMLSchema#decimal","http://www.w3.org/2001/XMLSchema#float"]},6925:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeHandlerNumberInteger=void 0;const a=n(103);class o{fromRdf(e,t){const n=parseInt(e.value,10);return t&&(isNaN(n)||e.value.indexOf(".")>=0)&&a.Translator.incorrectRdfDataType(e),n}toRdf(e,{datatype:t,dataFactory:n}){return n.literal(String(e),t||(e<=o.MAX_INT&&e>=o.MIN_INT?n.namedNode(o.TYPES[0]):n.namedNode(o.TYPES[1])))}}t.TypeHandlerNumberInteger=o,o.TYPES=["http://www.w3.org/2001/XMLSchema#integer","http://www.w3.org/2001/XMLSchema#long","http://www.w3.org/2001/XMLSchema#int","http://www.w3.org/2001/XMLSchema#byte","http://www.w3.org/2001/XMLSchema#short","http://www.w3.org/2001/XMLSchema#negativeInteger","http://www.w3.org/2001/XMLSchema#nonNegativeInteger","http://www.w3.org/2001/XMLSchema#nonPositiveInteger","http://www.w3.org/2001/XMLSchema#positiveInteger","http://www.w3.org/2001/XMLSchema#unsignedByte","http://www.w3.org/2001/XMLSchema#unsignedInt","http://www.w3.org/2001/XMLSchema#unsignedLong","http://www.w3.org/2001/XMLSchema#unsignedShort"],o.MAX_INT=2147483647,o.MIN_INT=-2147483648},4191:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TypeHandlerString=void 0;class n{fromRdf(e){return e.value}toRdf(e,{datatype:t,dataFactory:n}){return n.literal(e,t)}}t.TypeHandlerString=n,n.TYPES=["http://www.w3.org/2001/XMLSchema#string","http://www.w3.org/2001/XMLSchema#normalizedString","http://www.w3.org/2001/XMLSchema#anyURI","http://www.w3.org/2001/XMLSchema#base64Binary","http://www.w3.org/2001/XMLSchema#language","http://www.w3.org/2001/XMLSchema#Name","http://www.w3.org/2001/XMLSchema#NCName","http://www.w3.org/2001/XMLSchema#NMTOKEN","http://www.w3.org/2001/XMLSchema#token","http://www.w3.org/2001/XMLSchema#hexBinary","http://www.w3.org/1999/02/22-rdf-syntax-ns#langString","http://www.w3.org/2001/XMLSchema#time","http://www.w3.org/2001/XMLSchema#duration"]},4802:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(92),t),o(n(7258),t),o(n(2406),t),o(n(6925),t),o(n(4191),t)},4147:(e,t,n)=>{const{AbortError:a,codes:o}=n(6371),{isNodeStream:d,isWebStream:r,kControllerErrorFunction:i}=n(6115),s=n(6238),{ERR_INVALID_ARG_TYPE:l}=o;e.exports.addAbortSignal=function(t,n){if(((e,t)=>{if("object"!=typeof e||!("aborted"in e))throw new l("signal","AbortSignal",e)})(t),!d(n)&&!r(n))throw new l("stream",["ReadableStream","WritableStream","Stream"],n);return e.exports.addAbortSignalNoValidate(t,n)},e.exports.addAbortSignalNoValidate=function(e,t){if("object"!=typeof e||!("aborted"in e))return t;const n=d(t)?()=>{t.destroy(new a(void 0,{cause:e.reason}))}:()=>{t[i](new a(void 0,{cause:e.reason}))};return e.aborted?n():(e.addEventListener("abort",n),s(t,(()=>e.removeEventListener("abort",n)))),t}},345:(e,t,n)=>{const{StringPrototypeSlice:a,SymbolIterator:o,TypedArrayPrototypeSet:d,Uint8Array:r}=n(4134),{Buffer:i}=n(8287),{inspect:s}=n(7760);e.exports=class{constructor(){this.head=null,this.tail=null,this.length=0}push(e){const t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}unshift(e){const t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}shift(){if(0===this.length)return;const e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}clear(){this.head=this.tail=null,this.length=0}join(e){if(0===this.length)return"";let t=this.head,n=""+t.data;for(;null!==(t=t.next);)n+=e+t.data;return n}concat(e){if(0===this.length)return i.alloc(0);const t=i.allocUnsafe(e>>>0);let n=this.head,a=0;for(;n;)d(t,n.data,a),a+=n.data.length,n=n.next;return t}consume(e,t){const n=this.head.data;if(e<n.length){const t=n.slice(0,e);return this.head.data=n.slice(e),t}return e===n.length?this.shift():t?this._getString(e):this._getBuffer(e)}first(){return this.head.data}*[o](){for(let e=this.head;e;e=e.next)yield e.data}_getString(e){let t="",n=this.head,o=0;do{const d=n.data;if(!(e>d.length)){e===d.length?(t+=d,++o,n.next?this.head=n.next:this.head=this.tail=null):(t+=a(d,0,e),this.head=n,n.data=a(d,e));break}t+=d,e-=d.length,++o}while(null!==(n=n.next));return this.length-=o,t}_getBuffer(e){const t=i.allocUnsafe(e),n=e;let a=this.head,o=0;do{const i=a.data;if(!(e>i.length)){e===i.length?(d(t,i,n-e),++o,a.next?this.head=a.next:this.head=this.tail=null):(d(t,new r(i.buffer,i.byteOffset,e),n-e),this.head=a,a.data=i.slice(e));break}d(t,i,n-e),e-=i.length,++o}while(null!==(a=a.next));return this.length-=o,t}[Symbol.for("nodejs.util.inspect.custom")](e,t){return s(this,{...t,depth:0,customInspect:!1})}}},7830:(e,t,n)=>{const{pipeline:a}=n(7758),o=n(3370),{destroyer:d}=n(5896),{isNodeStream:r,isReadable:i,isWritable:s,isWebStream:l,isTransformStream:u,isWritableStream:m,isReadableStream:c}=n(6115),{AbortError:p,codes:{ERR_INVALID_ARG_VALUE:h,ERR_MISSING_ARGS:f}}=n(6371),N=n(6238);e.exports=function(...e){if(0===e.length)throw new f("streams");if(1===e.length)return o.from(e[0]);const t=[...e];if("function"==typeof e[0]&&(e[0]=o.from(e[0])),"function"==typeof e[e.length-1]){const t=e.length-1;e[t]=o.from(e[t])}for(let n=0;n<e.length;++n)if(r(e[n])||l(e[n])){if(n<e.length-1&&!(i(e[n])||c(e[n])||u(e[n])))throw new h(`streams[${n}]`,t[n],"must be readable");if(n>0&&!(s(e[n])||m(e[n])||u(e[n])))throw new h(`streams[${n}]`,t[n],"must be writable")}let n,g,y,$,b;const v=e[0],w=a(e,(function(e){const t=$;$=null,t?t(e):e?b.destroy(e):_||x||b.destroy()})),x=!!(s(v)||m(v)||u(v)),_=!!(i(w)||c(w)||u(w));if(b=new o({writableObjectMode:!(null==v||!v.writableObjectMode),readableObjectMode:!(null==w||!w.writableObjectMode),writable:x,readable:_}),x){if(r(v))b._write=function(e,t,a){v.write(e,t)?a():n=a},b._final=function(e){v.end(),g=e},v.on("drain",(function(){if(n){const e=n;n=null,e()}}));else if(l(v)){const e=(u(v)?v.writable:v).getWriter();b._write=async function(t,n,a){try{await e.ready,e.write(t).catch((()=>{})),a()}catch(e){a(e)}},b._final=async function(t){try{await e.ready,e.close().catch((()=>{})),g=t}catch(e){t(e)}}}const e=u(w)?w.readable:w;N(e,(()=>{if(g){const e=g;g=null,e()}}))}if(_)if(r(w))w.on("readable",(function(){if(y){const e=y;y=null,e()}})),w.on("end",(function(){b.push(null)})),b._read=function(){for(;;){const e=w.read();if(null===e)return void(y=b._read);if(!b.push(e))return}};else if(l(w)){const e=(u(w)?w.readable:w).getReader();b._read=async function(){for(;;)try{const{value:t,done:n}=await e.read();if(!b.push(t))return;if(n)return void b.push(null)}catch{return}}}return b._destroy=function(e,t){e||null===$||(e=new p),y=null,n=null,g=null,null===$?t(e):($=t,r(w)&&d(w,e))},b}},5896:(e,t,n)=>{const a=n(5606),{aggregateTwoErrors:o,codes:{ERR_MULTIPLE_CALLBACK:d},AbortError:r}=n(6371),{Symbol:i}=n(4134),{kDestroyed:s,isDestroyed:l,isFinished:u,isServerRequest:m}=n(6115),c=i("kDestroy"),p=i("kConstruct");function h(e,t,n){e&&(e.stack,t&&!t.errored&&(t.errored=e),n&&!n.errored&&(n.errored=e))}function f(e,t,n){let o=!1;function d(t){if(o)return;o=!0;const d=e._readableState,r=e._writableState;h(t,r,d),r&&(r.closed=!0),d&&(d.closed=!0),"function"==typeof n&&n(t),t?a.nextTick(N,e,t):a.nextTick(g,e)}try{e._destroy(t||null,d)}catch(t){d(t)}}function N(e,t){y(e,t),g(e)}function g(e){const t=e._readableState,n=e._writableState;n&&(n.closeEmitted=!0),t&&(t.closeEmitted=!0),(null!=n&&n.emitClose||null!=t&&t.emitClose)&&e.emit("close")}function y(e,t){const n=e._readableState,a=e._writableState;null!=a&&a.errorEmitted||null!=n&&n.errorEmitted||(a&&(a.errorEmitted=!0),n&&(n.errorEmitted=!0),e.emit("error",t))}function $(e,t,n){const o=e._readableState,d=e._writableState;if(null!=d&&d.destroyed||null!=o&&o.destroyed)return this;null!=o&&o.autoDestroy||null!=d&&d.autoDestroy?e.destroy(t):t&&(t.stack,d&&!d.errored&&(d.errored=t),o&&!o.errored&&(o.errored=t),n?a.nextTick(y,e,t):y(e,t))}function b(e){let t=!1;function n(n){if(t)return void $(e,null!=n?n:new d);t=!0;const o=e._readableState,r=e._writableState,i=r||o;o&&(o.constructed=!0),r&&(r.constructed=!0),i.destroyed?e.emit(c,n):n?$(e,n,!0):a.nextTick(v,e)}try{e._construct((e=>{a.nextTick(n,e)}))}catch(e){a.nextTick(n,e)}}function v(e){e.emit(p)}function w(e){return(null==e?void 0:e.setHeader)&&"function"==typeof e.abort}function x(e){e.emit("close")}function _(e,t){e.emit("error",t),a.nextTick(x,e)}e.exports={construct:function(e,t){if("function"!=typeof e._construct)return;const n=e._readableState,o=e._writableState;n&&(n.constructed=!1),o&&(o.constructed=!1),e.once(p,t),e.listenerCount(p)>1||a.nextTick(b,e)},destroyer:function(e,t){e&&!l(e)&&(t||u(e)||(t=new r),m(e)?(e.socket=null,e.destroy(t)):w(e)?e.abort():w(e.req)?e.req.abort():"function"==typeof e.destroy?e.destroy(t):"function"==typeof e.close?e.close():t?a.nextTick(_,e,t):a.nextTick(x,e),e.destroyed||(e[s]=!0))},destroy:function(e,t){const n=this._readableState,a=this._writableState,d=a||n;return null!=a&&a.destroyed||null!=n&&n.destroyed?("function"==typeof t&&t(),this):(h(e,a,n),a&&(a.destroyed=!0),n&&(n.destroyed=!0),d.constructed?f(this,e,t):this.once(c,(function(n){f(this,o(n,e),t)})),this)},undestroy:function(){const e=this._readableState,t=this._writableState;e&&(e.constructed=!0,e.closed=!1,e.closeEmitted=!1,e.destroyed=!1,e.errored=null,e.errorEmitted=!1,e.reading=!1,e.ended=!1===e.readable,e.endEmitted=!1===e.readable),t&&(t.constructed=!0,t.destroyed=!1,t.closed=!1,t.closeEmitted=!1,t.errored=null,t.errorEmitted=!1,t.finalCalled=!1,t.prefinished=!1,t.ended=!1===t.writable,t.ending=!1===t.writable,t.finished=!1===t.writable)},errorOrDestroy:$}},3370:(e,t,n)=>{const{ObjectDefineProperties:a,ObjectGetOwnPropertyDescriptor:o,ObjectKeys:d,ObjectSetPrototypeOf:r}=n(4134);e.exports=l;const i=n(7576),s=n(8584);r(l.prototype,i.prototype),r(l,i);{const e=d(s.prototype);for(let t=0;t<e.length;t++){const n=e[t];l.prototype[n]||(l.prototype[n]=s.prototype[n])}}function l(e){if(!(this instanceof l))return new l(e);i.call(this,e),s.call(this,e),e?(this.allowHalfOpen=!1!==e.allowHalfOpen,!1===e.readable&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),!1===e.writable&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)):this.allowHalfOpen=!0}let u,m;function c(){return void 0===u&&(u={}),u}a(l.prototype,{writable:{__proto__:null,...o(s.prototype,"writable")},writableHighWaterMark:{__proto__:null,...o(s.prototype,"writableHighWaterMark")},writableObjectMode:{__proto__:null,...o(s.prototype,"writableObjectMode")},writableBuffer:{__proto__:null,...o(s.prototype,"writableBuffer")},writableLength:{__proto__:null,...o(s.prototype,"writableLength")},writableFinished:{__proto__:null,...o(s.prototype,"writableFinished")},writableCorked:{__proto__:null,...o(s.prototype,"writableCorked")},writableEnded:{__proto__:null,...o(s.prototype,"writableEnded")},writableNeedDrain:{__proto__:null,...o(s.prototype,"writableNeedDrain")},destroyed:{__proto__:null,get(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set(e){this._readableState&&this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}}),l.fromWeb=function(e,t){return c().newStreamDuplexFromReadableWritablePair(e,t)},l.toWeb=function(e){return c().newReadableWritablePairFromDuplex(e)},l.from=function(e){return m||(m=n(6706)),m(e,"body")}},6706:(e,t,n)=>{const a=n(5606),o=n(8287),{isReadable:d,isWritable:r,isIterable:i,isNodeStream:s,isReadableNodeStream:l,isWritableNodeStream:u,isDuplexNodeStream:m}=n(6115),c=n(6238),{AbortError:p,codes:{ERR_INVALID_ARG_TYPE:h,ERR_INVALID_RETURN_VALUE:f}}=n(6371),{destroyer:N}=n(5896),g=n(3370),y=n(7576),{createDeferredPromise:$}=n(7760),b=n(6532),v=globalThis.Blob||o.Blob,w=void 0!==v?function(e){return e instanceof v}:function(e){return!1},x=globalThis.AbortController||n(5568).AbortController,{FunctionPrototypeCall:_}=n(4134);class C extends g{constructor(e){super(e),!1===(null==e?void 0:e.readable)&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),!1===(null==e?void 0:e.writable)&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)}}function q(e){const t=e.readable&&"function"!=typeof e.readable.read?y.wrap(e.readable):e.readable,n=e.writable;let a,o,i,s,l,u=!!d(t),m=!!r(n);function h(e){const t=s;s=null,t?t(e):e&&l.destroy(e)}return l=new C({readableObjectMode:!(null==t||!t.readableObjectMode),writableObjectMode:!(null==n||!n.writableObjectMode),readable:u,writable:m}),m&&(c(n,(e=>{m=!1,e&&N(t,e),h(e)})),l._write=function(e,t,o){n.write(e,t)?o():a=o},l._final=function(e){n.end(),o=e},n.on("drain",(function(){if(a){const e=a;a=null,e()}})),n.on("finish",(function(){if(o){const e=o;o=null,e()}}))),u&&(c(t,(e=>{u=!1,e&&N(t,e),h(e)})),t.on("readable",(function(){if(i){const e=i;i=null,e()}})),t.on("end",(function(){l.push(null)})),l._read=function(){for(;;){const e=t.read();if(null===e)return void(i=l._read);if(!l.push(e))return}}),l._destroy=function(e,d){e||null===s||(e=new p),i=null,a=null,o=null,null===s?d(e):(s=d,N(n,e),N(t,e))},l}e.exports=function e(t,n){if(m(t))return t;if(l(t))return q({readable:t});if(u(t))return q({writable:t});if(s(t))return q({writable:!1,readable:!1});if("function"==typeof t){const{value:e,write:o,final:d,destroy:r}=function(e){let{promise:t,resolve:n}=$();const o=new x,d=o.signal;return{value:e(async function*(){for(;;){const e=t;t=null;const{chunk:o,done:r,cb:i}=await e;if(a.nextTick(i),r)return;if(d.aborted)throw new p(void 0,{cause:d.reason});({promise:t,resolve:n}=$()),yield o}}(),{signal:d}),write(e,t,a){const o=n;n=null,o({chunk:e,done:!1,cb:a})},final(e){const t=n;n=null,t({done:!0,cb:e})},destroy(e,t){o.abort(),t(e)}}}(t);if(i(e))return b(C,e,{objectMode:!0,write:o,final:d,destroy:r});const s=null==e?void 0:e.then;if("function"==typeof s){let t;const n=_(s,e,(e=>{if(null!=e)throw new f("nully","body",e)}),(e=>{N(t,e)}));return t=new C({objectMode:!0,readable:!1,write:o,final(e){d((async()=>{try{await n,a.nextTick(e,null)}catch(t){a.nextTick(e,t)}}))},destroy:r})}throw new f("Iterable, AsyncIterable or AsyncFunction",n,e)}if(w(t))return e(t.arrayBuffer());if(i(t))return b(C,t,{objectMode:!0,writable:!1});if("object"==typeof(null==t?void 0:t.writable)||"object"==typeof(null==t?void 0:t.readable))return q({readable:null!=t&&t.readable?l(null==t?void 0:t.readable)?null==t?void 0:t.readable:e(t.readable):void 0,writable:null!=t&&t.writable?u(null==t?void 0:t.writable)?null==t?void 0:t.writable:e(t.writable):void 0});const o=null==t?void 0:t.then;if("function"==typeof o){let e;return _(o,t,(t=>{null!=t&&e.push(t),e.push(null)}),(t=>{N(e,t)})),e=new C({objectMode:!0,writable:!1,read(){}})}throw new h(n,["Blob","ReadableStream","WritableStream","Stream","Iterable","AsyncIterable","Function","{ readable, writable } pair","Promise"],t)}},6238:(e,t,n)=>{const a=n(5606),{AbortError:o,codes:d}=n(6371),{ERR_INVALID_ARG_TYPE:r,ERR_STREAM_PREMATURE_CLOSE:i}=d,{kEmptyObject:s,once:l}=n(7760),{validateAbortSignal:u,validateFunction:m,validateObject:c,validateBoolean:p}=n(277),{Promise:h,PromisePrototypeThen:f}=n(4134),{isClosed:N,isReadable:g,isReadableNodeStream:y,isReadableStream:$,isReadableFinished:b,isReadableErrored:v,isWritable:w,isWritableNodeStream:x,isWritableStream:_,isWritableFinished:C,isWritableErrored:q,isNodeStream:S,willEmitClose:E,kIsClosedPromise:I}=n(6115),R=()=>{};function j(e,t,n){var d,p;if(2===arguments.length?(n=t,t=s):null==t?t=s:c(t,"options"),m(n,"callback"),u(t.signal,"options.signal"),n=l(n),$(e)||_(e))return function(e,t,n){let d=!1,r=R;if(t.signal)if(r=()=>{d=!0,n.call(e,new o(void 0,{cause:t.signal.reason}))},t.signal.aborted)a.nextTick(r);else{const a=n;n=l(((...n)=>{t.signal.removeEventListener("abort",r),a.apply(e,n)})),t.signal.addEventListener("abort",r)}const i=(...t)=>{d||a.nextTick((()=>n.apply(e,t)))};return f(e[I].promise,i,i),R}(e,t,n);if(!S(e))throw new r("stream",["ReadableStream","WritableStream","Stream"],e);const h=null!==(d=t.readable)&&void 0!==d?d:y(e),j=null!==(p=t.writable)&&void 0!==p?p:x(e),L=e._writableState,T=e._readableState,A=()=>{e.writable||k()};let P=E(e)&&y(e)===h&&x(e)===j,O=C(e,!1);const k=()=>{O=!0,e.destroyed&&(P=!1),(!P||e.readable&&!h)&&(h&&!D||n.call(e))};let D=b(e,!1);const M=()=>{D=!0,e.destroyed&&(P=!1),(!P||e.writable&&!j)&&(j&&!O||n.call(e))},B=t=>{n.call(e,t)};let F=N(e);const V=()=>{F=!0;const t=q(e)||v(e);return t&&"boolean"!=typeof t?n.call(e,t):h&&!D&&y(e,!0)&&!b(e,!1)?n.call(e,new i):!j||O||C(e,!1)?void n.call(e):n.call(e,new i)},Q=()=>{F=!0;const t=q(e)||v(e);if(t&&"boolean"!=typeof t)return n.call(e,t);n.call(e)},U=()=>{e.req.on("finish",k)};!function(e){return e.setHeader&&"function"==typeof e.abort}(e)?j&&!L&&(e.on("end",A),e.on("close",A)):(e.on("complete",k),P||e.on("abort",V),e.req?U():e.on("request",U)),P||"boolean"!=typeof e.aborted||e.on("aborted",V),e.on("end",M),e.on("finish",k),!1!==t.error&&e.on("error",B),e.on("close",V),F?a.nextTick(V):null!=L&&L.errorEmitted||null!=T&&T.errorEmitted?P||a.nextTick(Q):(h||P&&!g(e)||!O&&!1!==w(e))&&(j||P&&!w(e)||!D&&!1!==g(e))?T&&e.req&&e.aborted&&a.nextTick(Q):a.nextTick(Q);const G=()=>{n=R,e.removeListener("aborted",V),e.removeListener("complete",k),e.removeListener("abort",V),e.removeListener("request",U),e.req&&e.req.removeListener("finish",k),e.removeListener("end",A),e.removeListener("close",A),e.removeListener("finish",k),e.removeListener("end",M),e.removeListener("error",B),e.removeListener("close",V)};if(t.signal&&!F){const d=()=>{const a=n;G(),a.call(e,new o(void 0,{cause:t.signal.reason}))};if(t.signal.aborted)a.nextTick(d);else{const a=n;n=l(((...n)=>{t.signal.removeEventListener("abort",d),a.apply(e,n)})),t.signal.addEventListener("abort",d)}}return G}e.exports=j,e.exports.finished=function(e,t){var n;let a=!1;return null===t&&(t=s),null!==(n=t)&&void 0!==n&&n.cleanup&&(p(t.cleanup,"cleanup"),a=t.cleanup),new h(((n,o)=>{const d=j(e,t,(e=>{a&&d(),e?o(e):n()}))}))}},6532:(e,t,n)=>{const a=n(5606),{PromisePrototypeThen:o,SymbolAsyncIterator:d,SymbolIterator:r}=n(4134),{Buffer:i}=n(8287),{ERR_INVALID_ARG_TYPE:s,ERR_STREAM_NULL_VALUES:l}=n(6371).codes;e.exports=function(e,t,n){let u,m;if("string"==typeof t||t instanceof i)return new e({objectMode:!0,...n,read(){this.push(t),this.push(null)}});if(t&&t[d])m=!0,u=t[d]();else{if(!t||!t[r])throw new s("iterable",["Iterable"],t);m=!1,u=t[r]()}const c=new e({objectMode:!0,highWaterMark:1,...n});let p=!1;return c._read=function(){p||(p=!0,async function(){for(;;){try{const{value:e,done:t}=m?await u.next():u.next();if(t)c.push(null);else{const t=e&&"function"==typeof e.then?await e:e;if(null===t)throw p=!1,new l;if(c.push(t))continue;p=!1}}catch(e){c.destroy(e)}break}}())},c._destroy=function(e,t){o(async function(e){const t=null!=e,n="function"==typeof u.throw;if(t&&n){const{value:t,done:n}=await u.throw(e);if(await t,n)return}if("function"==typeof u.return){const{value:e}=await u.return();await e}}(e),(()=>a.nextTick(t,e)),(n=>a.nextTick(t,n||e)))},c}},4259:(e,t,n)=>{const{ArrayIsArray:a,ObjectSetPrototypeOf:o}=n(4134),{EventEmitter:d}=n(7007);function r(e){d.call(this,e)}function i(e,t,n){if("function"==typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?a(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}o(r.prototype,d.prototype),o(r,d),r.prototype.pipe=function(e,t){const n=this;function a(t){e.writable&&!1===e.write(t)&&n.pause&&n.pause()}function o(){n.readable&&n.resume&&n.resume()}n.on("data",a),e.on("drain",o),e._isStdio||t&&!1===t.end||(n.on("end",s),n.on("close",l));let r=!1;function s(){r||(r=!0,e.end())}function l(){r||(r=!0,"function"==typeof e.destroy&&e.destroy())}function u(e){m(),0===d.listenerCount(this,"error")&&this.emit("error",e)}function m(){n.removeListener("data",a),e.removeListener("drain",o),n.removeListener("end",s),n.removeListener("close",l),n.removeListener("error",u),e.removeListener("error",u),n.removeListener("end",m),n.removeListener("close",m),e.removeListener("close",m)}return i(n,"error",u),i(e,"error",u),n.on("end",m),n.on("close",m),e.on("close",m),e.emit("pipe",n),e},e.exports={Stream:r,prependListener:i}},823:(e,t,n)=>{const a=globalThis.AbortController||n(5568).AbortController,{codes:{ERR_INVALID_ARG_VALUE:o,ERR_INVALID_ARG_TYPE:d,ERR_MISSING_ARGS:r,ERR_OUT_OF_RANGE:i},AbortError:s}=n(6371),{validateAbortSignal:l,validateInteger:u,validateObject:m}=n(277),c=n(4134).Symbol("kWeak"),{finished:p}=n(6238),h=n(7830),{addAbortSignalNoValidate:f}=n(4147),{isWritable:N,isNodeStream:g}=n(6115),{ArrayPrototypePush:y,MathFloor:$,Number:b,NumberIsNaN:v,Promise:w,PromiseReject:x,PromisePrototypeThen:_,Symbol:C}=n(4134),q=C("kEmpty"),S=C("kEof");function E(e,t){if("function"!=typeof e)throw new d("fn",["Function","AsyncFunction"],e);null!=t&&m(t,"options"),null!=(null==t?void 0:t.signal)&&l(t.signal,"options.signal");let n=1;return null!=(null==t?void 0:t.concurrency)&&(n=$(t.concurrency)),u(n,"concurrency",1),async function*(){var o,d;const r=new a,i=this,l=[],u=r.signal,m={signal:u},c=()=>r.abort();let p,h;null!=t&&null!==(o=t.signal)&&void 0!==o&&o.aborted&&c(),null==t||null===(d=t.signal)||void 0===d||d.addEventListener("abort",c);let f=!1;function N(){f=!0}!async function(){try{for await(let t of i){var a;if(f)return;if(u.aborted)throw new s;try{t=e(t,m)}catch(e){t=x(e)}t!==q&&("function"==typeof(null===(a=t)||void 0===a?void 0:a.catch)&&t.catch(N),l.push(t),p&&(p(),p=null),!f&&l.length&&l.length>=n&&await new w((e=>{h=e})))}l.push(S)}catch(e){const t=x(e);_(t,void 0,N),l.push(t)}finally{var o;f=!0,p&&(p(),p=null),null==t||null===(o=t.signal)||void 0===o||o.removeEventListener("abort",c)}}();try{for(;;){for(;l.length>0;){const e=await l[0];if(e===S)return;if(u.aborted)throw new s;e!==q&&(yield e),l.shift(),h&&(h(),h=null)}await new w((e=>{p=e}))}}finally{r.abort(),f=!0,h&&(h(),h=null)}}.call(this)}async function I(e,t=void 0){for await(const n of R.call(this,e,t))return!0;return!1}function R(e,t){if("function"!=typeof e)throw new d("fn",["Function","AsyncFunction"],e);return E.call(this,(async function(t,n){return await e(t,n)?t:q}),t)}class j extends r{constructor(){super("reduce"),this.message="Reduce of an empty stream requires an initial value"}}function L(e){if(e=b(e),v(e))return 0;if(e<0)throw new i("number",">= 0",e);return e}e.exports.streamReturningOperators={asIndexedPairs:function(e=void 0){return null!=e&&m(e,"options"),null!=(null==e?void 0:e.signal)&&l(e.signal,"options.signal"),async function*(){let t=0;for await(const a of this){var n;if(null!=e&&null!==(n=e.signal)&&void 0!==n&&n.aborted)throw new s({cause:e.signal.reason});yield[t++,a]}}.call(this)},drop:function(e,t=void 0){return null!=t&&m(t,"options"),null!=(null==t?void 0:t.signal)&&l(t.signal,"options.signal"),e=L(e),async function*(){var n;if(null!=t&&null!==(n=t.signal)&&void 0!==n&&n.aborted)throw new s;for await(const n of this){var a;if(null!=t&&null!==(a=t.signal)&&void 0!==a&&a.aborted)throw new s;e--<=0&&(yield n)}}.call(this)},filter:R,flatMap:function(e,t){const n=E.call(this,e,t);return async function*(){for await(const e of n)yield*e}.call(this)},map:E,take:function(e,t=void 0){return null!=t&&m(t,"options"),null!=(null==t?void 0:t.signal)&&l(t.signal,"options.signal"),e=L(e),async function*(){var n;if(null!=t&&null!==(n=t.signal)&&void 0!==n&&n.aborted)throw new s;for await(const n of this){var a;if(null!=t&&null!==(a=t.signal)&&void 0!==a&&a.aborted)throw new s;if(!(e-- >0))return;yield n}}.call(this)},compose:function(e,t){if(null!=t&&m(t,"options"),null!=(null==t?void 0:t.signal)&&l(t.signal,"options.signal"),g(e)&&!N(e))throw new o("stream",e,"must be writable");const n=h(this,e);return null!=t&&t.signal&&f(t.signal,n),n}},e.exports.promiseReturningOperators={every:async function(e,t=void 0){if("function"!=typeof e)throw new d("fn",["Function","AsyncFunction"],e);return!await I.call(this,(async(...t)=>!await e(...t)),t)},forEach:async function(e,t){if("function"!=typeof e)throw new d("fn",["Function","AsyncFunction"],e);for await(const n of E.call(this,(async function(t,n){return await e(t,n),q}),t));},reduce:async function(e,t,n){var o;if("function"!=typeof e)throw new d("reducer",["Function","AsyncFunction"],e);null!=n&&m(n,"options"),null!=(null==n?void 0:n.signal)&&l(n.signal,"options.signal");let r=arguments.length>1;if(null!=n&&null!==(o=n.signal)&&void 0!==o&&o.aborted){const e=new s(void 0,{cause:n.signal.reason});throw this.once("error",(()=>{})),await p(this.destroy(e)),e}const i=new a,u=i.signal;if(null!=n&&n.signal){const e={once:!0,[c]:this};n.signal.addEventListener("abort",(()=>i.abort()),e)}let h=!1;try{for await(const a of this){var f;if(h=!0,null!=n&&null!==(f=n.signal)&&void 0!==f&&f.aborted)throw new s;r?t=await e(t,a,{signal:u}):(t=a,r=!0)}if(!h&&!r)throw new j}finally{i.abort()}return t},toArray:async function(e){null!=e&&m(e,"options"),null!=(null==e?void 0:e.signal)&&l(e.signal,"options.signal");const t=[];for await(const a of this){var n;if(null!=e&&null!==(n=e.signal)&&void 0!==n&&n.aborted)throw new s(void 0,{cause:e.signal.reason});y(t,a)}return t},some:I,find:async function(e,t){for await(const n of R.call(this,e,t))return n}}},6524:(e,t,n)=>{const{ObjectSetPrototypeOf:a}=n(4134);e.exports=d;const o=n(5001);function d(e){if(!(this instanceof d))return new d(e);o.call(this,e)}a(d.prototype,o.prototype),a(d,o),d.prototype._transform=function(e,t,n){n(null,e)}},7758:(e,t,n)=>{const a=n(5606),{ArrayIsArray:o,Promise:d,SymbolAsyncIterator:r}=n(4134),i=n(6238),{once:s}=n(7760),l=n(5896),u=n(3370),{aggregateTwoErrors:m,codes:{ERR_INVALID_ARG_TYPE:c,ERR_INVALID_RETURN_VALUE:p,ERR_MISSING_ARGS:h,ERR_STREAM_DESTROYED:f,ERR_STREAM_PREMATURE_CLOSE:N},AbortError:g}=n(6371),{validateFunction:y,validateAbortSignal:$}=n(277),{isIterable:b,isReadable:v,isReadableNodeStream:w,isNodeStream:x,isTransformStream:_,isWebStream:C,isReadableStream:q,isReadableEnded:S}=n(6115),E=globalThis.AbortController||n(5568).AbortController;let I,R;function j(e,t,n){let a=!1;return e.on("close",(()=>{a=!0})),{destroy:t=>{a||(a=!0,l.destroyer(e,t||new f("pipe")))},cleanup:i(e,{readable:t,writable:n},(e=>{a=!e}))}}function L(e){if(b(e))return e;if(w(e))return async function*(e){R||(R=n(7576)),yield*R.prototype[r].call(e)}(e);throw new c("val",["Readable","Iterable","AsyncIterable"],e)}async function T(e,t,n,{end:a}){let o,r=null;const s=e=>{if(e&&(o=e),r){const e=r;r=null,e()}},l=()=>new d(((e,t)=>{o?t(o):r=()=>{o?t(o):e()}}));t.on("drain",s);const u=i(t,{readable:!1},s);try{t.writableNeedDrain&&await l();for await(const n of e)t.write(n)||await l();a&&t.end(),await l(),n()}catch(e){n(o!==e?m(o,e):e)}finally{u(),t.off("drain",s)}}async function A(e,t,n,{end:a}){_(t)&&(t=t.writable);const o=t.getWriter();try{for await(const t of e)await o.ready,o.write(t).catch((()=>{}));await o.ready,a&&await o.close(),n()}catch(e){try{await o.abort(e),n(e)}catch(e){n(e)}}}function P(e,t,d){if(1===e.length&&o(e[0])&&(e=e[0]),e.length<2)throw new h("streams");const r=new E,i=r.signal,s=null==d?void 0:d.signal,l=[];function m(){k(new g)}let f,N;$(s,"options.signal"),null==s||s.addEventListener("abort",m);const y=[];let S,R=0;function P(e){k(e,0==--R)}function k(e,n){if(!e||f&&"ERR_STREAM_PREMATURE_CLOSE"!==f.code||(f=e),f||n){for(;y.length;)y.shift()(f);null==s||s.removeEventListener("abort",m),r.abort(),n&&(f||l.forEach((e=>e())),a.nextTick(t,f,N))}}for(let B=0;B<e.length;B++){const F=e[B],V=B<e.length-1,Q=B>0,U=V||!1!==(null==d?void 0:d.end),G=B===e.length-1;if(x(F)){if(U){const{destroy:H,cleanup:z}=j(F,V,Q);y.push(H),v(F)&&G&&l.push(z)}function J(e){e&&"AbortError"!==e.name&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code&&P(e)}F.on("error",J),v(F)&&G&&l.push((()=>{F.removeListener("error",J)}))}if(0===B)if("function"==typeof F){if(S=F({signal:i}),!b(S))throw new p("Iterable, AsyncIterable or Stream","source",S)}else S=b(F)||w(F)||_(F)?F:u.from(F);else if("function"==typeof F){var D;if(S=_(S)?L(null===(D=S)||void 0===D?void 0:D.readable):L(S),S=F(S,{signal:i}),V){if(!b(S,!0))throw new p("AsyncIterable",`transform[${B-1}]`,S)}else{var M;I||(I=n(6524));const W=new I({objectMode:!0}),K=null===(M=S)||void 0===M?void 0:M.then;if("function"==typeof K)R++,K.call(S,(e=>{N=e,null!=e&&W.write(e),U&&W.end(),a.nextTick(P)}),(e=>{W.destroy(e),a.nextTick(P,e)}));else if(b(S,!0))R++,T(S,W,P,{end:U});else{if(!q(S)&&!_(S))throw new p("AsyncIterable or Promise","destination",S);{const Z=S.readable||S;R++,T(Z,W,P,{end:U})}}S=W;const{destroy:X,cleanup:Y}=j(S,!1,!0);y.push(X),G&&l.push(Y)}}else if(x(F)){if(w(S)){R+=2;const ee=O(S,F,P,{end:U});v(F)&&G&&l.push(ee)}else if(_(S)||q(S)){const te=S.readable||S;R++,T(te,F,P,{end:U})}else{if(!b(S))throw new c("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],S);R++,T(S,F,P,{end:U})}S=F}else if(C(F)){if(w(S))R++,A(L(S),F,P,{end:U});else if(q(S)||b(S))R++,A(S,F,P,{end:U});else{if(!_(S))throw new c("val",["Readable","Iterable","AsyncIterable","ReadableStream","TransformStream"],S);R++,A(S.readable,F,P,{end:U})}S=F}else S=u.from(F)}return(null!=i&&i.aborted||null!=s&&s.aborted)&&a.nextTick(m),S}function O(e,t,n,{end:o}){let d=!1;if(t.on("close",(()=>{d||n(new N)})),e.pipe(t,{end:!1}),o){function r(){d=!0,t.end()}S(e)?a.nextTick(r):e.once("end",r)}else n();return i(e,{readable:!0,writable:!1},(t=>{const a=e._readableState;t&&"ERR_STREAM_PREMATURE_CLOSE"===t.code&&a&&a.ended&&!a.errored&&!a.errorEmitted?e.once("end",n).once("error",n):n(t)})),i(t,{readable:!1,writable:!0},n)}e.exports={pipelineImpl:P,pipeline:function(...e){return P(e,s(function(e){return y(e[e.length-1],"streams[stream.length - 1]"),e.pop()}(e)))}}},7576:(e,t,n)=>{const a=n(5606),{ArrayPrototypeIndexOf:o,NumberIsInteger:d,NumberIsNaN:r,NumberParseInt:i,ObjectDefineProperties:s,ObjectKeys:l,ObjectSetPrototypeOf:u,Promise:m,SafeSet:c,SymbolAsyncIterator:p,Symbol:h}=n(4134);e.exports=M,M.ReadableState=D;const{EventEmitter:f}=n(7007),{Stream:N,prependListener:g}=n(4259),{Buffer:y}=n(8287),{addAbortSignal:$}=n(4147),b=n(6238);let v=n(7760).debuglog("stream",(e=>{v=e}));const w=n(345),x=n(5896),{getHighWaterMark:_,getDefaultHighWaterMark:C}=n(5291),{aggregateTwoErrors:q,codes:{ERR_INVALID_ARG_TYPE:S,ERR_METHOD_NOT_IMPLEMENTED:E,ERR_OUT_OF_RANGE:I,ERR_STREAM_PUSH_AFTER_EOF:R,ERR_STREAM_UNSHIFT_AFTER_END_EVENT:j}}=n(6371),{validateObject:L}=n(277),T=h("kPaused"),{StringDecoder:A}=n(3141),P=n(6532);u(M.prototype,N.prototype),u(M,N);const O=()=>{},{errorOrDestroy:k}=x;function D(e,t,a){"boolean"!=typeof a&&(a=t instanceof n(3370)),this.objectMode=!(!e||!e.objectMode),a&&(this.objectMode=this.objectMode||!(!e||!e.readableObjectMode)),this.highWaterMark=e?_(this,e,"readableHighWaterMark",a):C(!1),this.buffer=new w,this.length=0,this.pipes=[],this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.constructed=!0,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this[T]=null,this.errorEmitted=!1,this.emitClose=!e||!1!==e.emitClose,this.autoDestroy=!e||!1!==e.autoDestroy,this.destroyed=!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this.defaultEncoding=e&&e.defaultEncoding||"utf8",this.awaitDrainWriters=null,this.multiAwaitDrain=!1,this.readingMore=!1,this.dataEmitted=!1,this.decoder=null,this.encoding=null,e&&e.encoding&&(this.decoder=new A(e.encoding),this.encoding=e.encoding)}function M(e){if(!(this instanceof M))return new M(e);const t=this instanceof n(3370);this._readableState=new D(e,this,t),e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.construct&&(this._construct=e.construct),e.signal&&!t&&$(e.signal,this)),N.call(this,e),x.construct(this,(()=>{this._readableState.needReadable&&G(this,this._readableState)}))}function B(e,t,n,a){v("readableAddChunk",t);const o=e._readableState;let d;if(o.objectMode||("string"==typeof t?(n=n||o.defaultEncoding,o.encoding!==n&&(a&&o.encoding?t=y.from(t,n).toString(o.encoding):(t=y.from(t,n),n=""))):t instanceof y?n="":N._isUint8Array(t)?(t=N._uint8ArrayToBuffer(t),n=""):null!=t&&(d=new S("chunk",["string","Buffer","Uint8Array"],t))),d)k(e,d);else if(null===t)o.reading=!1,function(e,t){if(v("onEofChunk"),!t.ended){if(t.decoder){const e=t.decoder.end();e&&e.length&&(t.buffer.push(e),t.length+=t.objectMode?1:e.length)}t.ended=!0,t.sync?Q(e):(t.needReadable=!1,t.emittedReadable=!0,U(e))}}(e,o);else if(o.objectMode||t&&t.length>0)if(a)if(o.endEmitted)k(e,new j);else{if(o.destroyed||o.errored)return!1;F(e,o,t,!0)}else if(o.ended)k(e,new R);else{if(o.destroyed||o.errored)return!1;o.reading=!1,o.decoder&&!n?(t=o.decoder.write(t),o.objectMode||0!==t.length?F(e,o,t,!1):G(e,o)):F(e,o,t,!1)}else a||(o.reading=!1,G(e,o));return!o.ended&&(o.length<o.highWaterMark||0===o.length)}function F(e,t,n,a){t.flowing&&0===t.length&&!t.sync&&e.listenerCount("data")>0?(t.multiAwaitDrain?t.awaitDrainWriters.clear():t.awaitDrainWriters=null,t.dataEmitted=!0,e.emit("data",n)):(t.length+=t.objectMode?1:n.length,a?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&Q(e)),G(e,t)}function V(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:r(e)?t.flowing&&t.length?t.buffer.first().length:t.length:e<=t.length?e:t.ended?t.length:0}function Q(e){const t=e._readableState;v("emitReadable",t.needReadable,t.emittedReadable),t.needReadable=!1,t.emittedReadable||(v("emitReadable",t.flowing),t.emittedReadable=!0,a.nextTick(U,e))}function U(e){const t=e._readableState;v("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||t.errored||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,K(e)}function G(e,t){!t.readingMore&&t.constructed&&(t.readingMore=!0,a.nextTick(J,e,t))}function J(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){const n=t.length;if(v("maybeReadMore read 0"),e.read(0),n===t.length)break}t.readingMore=!1}function H(e){const t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!1===t[T]?t.flowing=!0:e.listenerCount("data")>0?e.resume():t.readableListening||(t.flowing=null)}function z(e){v("readable nexttick read 0"),e.read(0)}function W(e,t){v("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),K(e),t.flowing&&!t.reading&&e.read(0)}function K(e){const t=e._readableState;for(v("flow",t.flowing);t.flowing&&null!==e.read(););}function X(e,t){"function"!=typeof e.read&&(e=M.wrap(e,{objectMode:!0}));const n=async function*(e,t){let n,a=O;function o(t){this===e?(a(),a=O):a=t}e.on("readable",o);const d=b(e,{writable:!1},(e=>{n=e?q(n,e):null,a(),a=O}));try{for(;;){const t=e.destroyed?null:e.read();if(null!==t)yield t;else{if(n)throw n;if(null===n)return;await new m(o)}}}catch(e){throw n=q(n,e),n}finally{!n&&!1===(null==t?void 0:t.destroyOnReturn)||void 0!==n&&!e._readableState.autoDestroy?(e.off("readable",o),d()):x.destroyer(e,null)}}(e,t);return n.stream=e,n}function Y(e,t){if(0===t.length)return null;let n;return t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n}function Z(e){const t=e._readableState;v("endReadable",t.endEmitted),t.endEmitted||(t.ended=!0,a.nextTick(ee,t,e))}function ee(e,t){if(v("endReadableNT",e.endEmitted,e.length),!e.errored&&!e.closeEmitted&&!e.endEmitted&&0===e.length)if(e.endEmitted=!0,t.emit("end"),t.writable&&!1===t.allowHalfOpen)a.nextTick(te,t);else if(e.autoDestroy){const e=t._writableState;(!e||e.autoDestroy&&(e.finished||!1===e.writable))&&t.destroy()}}function te(e){e.writable&&!e.writableEnded&&!e.destroyed&&e.end()}let ne;function ae(){return void 0===ne&&(ne={}),ne}M.prototype.destroy=x.destroy,M.prototype._undestroy=x.undestroy,M.prototype._destroy=function(e,t){t(e)},M.prototype[f.captureRejectionSymbol]=function(e){this.destroy(e)},M.prototype.push=function(e,t){return B(this,e,t,!1)},M.prototype.unshift=function(e,t){return B(this,e,t,!0)},M.prototype.isPaused=function(){const e=this._readableState;return!0===e[T]||!1===e.flowing},M.prototype.setEncoding=function(e){const t=new A(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;const n=this._readableState.buffer;let a="";for(const e of n)a+=t.write(e);return n.clear(),""!==a&&n.push(a),this._readableState.length=a.length,this},M.prototype.read=function(e){v("read",e),void 0===e?e=NaN:d(e)||(e=i(e,10));const t=this._readableState,n=e;if(e>t.highWaterMark&&(t.highWaterMark=function(e){if(e>1073741824)throw new I("size","<= 1GiB",e);return e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,++e}(e)),0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return v("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?Z(this):Q(this),null;if(0===(e=V(e,t))&&t.ended)return 0===t.length&&Z(this),null;let a,o=t.needReadable;if(v("need readable",o),(0===t.length||t.length-e<t.highWaterMark)&&(o=!0,v("length less than watermark",o)),t.ended||t.reading||t.destroyed||t.errored||!t.constructed)o=!1,v("reading, ended or constructing",o);else if(o){v("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0);try{this._read(t.highWaterMark)}catch(e){k(this,e)}t.sync=!1,t.reading||(e=V(n,t))}return a=e>0?Y(e,t):null,null===a?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.multiAwaitDrain?t.awaitDrainWriters.clear():t.awaitDrainWriters=null),0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&Z(this)),null===a||t.errorEmitted||t.closeEmitted||(t.dataEmitted=!0,this.emit("data",a)),a},M.prototype._read=function(e){throw new E("_read()")},M.prototype.pipe=function(e,t){const n=this,o=this._readableState;1===o.pipes.length&&(o.multiAwaitDrain||(o.multiAwaitDrain=!0,o.awaitDrainWriters=new c(o.awaitDrainWriters?[o.awaitDrainWriters]:[]))),o.pipes.push(e),v("pipe count=%d opts=%j",o.pipes.length,t);const d=t&&!1===t.end||e===a.stdout||e===a.stderr?f:r;function r(){v("onend"),e.end()}let i;o.endEmitted?a.nextTick(d):n.once("end",d),e.on("unpipe",(function t(a,d){v("onunpipe"),a===n&&d&&!1===d.hasUnpiped&&(d.hasUnpiped=!0,v("cleanup"),e.removeListener("close",p),e.removeListener("finish",h),i&&e.removeListener("drain",i),e.removeListener("error",m),e.removeListener("unpipe",t),n.removeListener("end",r),n.removeListener("end",f),n.removeListener("data",u),s=!0,i&&o.awaitDrainWriters&&(!e._writableState||e._writableState.needDrain)&&i())}));let s=!1;function l(){s||(1===o.pipes.length&&o.pipes[0]===e?(v("false write response, pause",0),o.awaitDrainWriters=e,o.multiAwaitDrain=!1):o.pipes.length>1&&o.pipes.includes(e)&&(v("false write response, pause",o.awaitDrainWriters.size),o.awaitDrainWriters.add(e)),n.pause()),i||(i=function(e,t){return function(){const n=e._readableState;n.awaitDrainWriters===t?(v("pipeOnDrain",1),n.awaitDrainWriters=null):n.multiAwaitDrain&&(v("pipeOnDrain",n.awaitDrainWriters.size),n.awaitDrainWriters.delete(t)),n.awaitDrainWriters&&0!==n.awaitDrainWriters.size||!e.listenerCount("data")||e.resume()}}(n,e),e.on("drain",i))}function u(t){v("ondata");const n=e.write(t);v("dest.write",n),!1===n&&l()}function m(t){if(v("onerror",t),f(),e.removeListener("error",m),0===e.listenerCount("error")){const n=e._writableState||e._readableState;n&&!n.errorEmitted?k(e,t):e.emit("error",t)}}function p(){e.removeListener("finish",h),f()}function h(){v("onfinish"),e.removeListener("close",p),f()}function f(){v("unpipe"),n.unpipe(e)}return n.on("data",u),g(e,"error",m),e.once("close",p),e.once("finish",h),e.emit("pipe",n),!0===e.writableNeedDrain?o.flowing&&l():o.flowing||(v("pipe resume"),n.resume()),e},M.prototype.unpipe=function(e){const t=this._readableState;if(0===t.pipes.length)return this;if(!e){const e=t.pipes;t.pipes=[],this.pause();for(let t=0;t<e.length;t++)e[t].emit("unpipe",this,{hasUnpiped:!1});return this}const n=o(t.pipes,e);return-1===n||(t.pipes.splice(n,1),0===t.pipes.length&&this.pause(),e.emit("unpipe",this,{hasUnpiped:!1})),this},M.prototype.on=function(e,t){const n=N.prototype.on.call(this,e,t),o=this._readableState;return"data"===e?(o.readableListening=this.listenerCount("readable")>0,!1!==o.flowing&&this.resume()):"readable"===e&&(o.endEmitted||o.readableListening||(o.readableListening=o.needReadable=!0,o.flowing=!1,o.emittedReadable=!1,v("on readable",o.length,o.reading),o.length?Q(this):o.reading||a.nextTick(z,this))),n},M.prototype.addListener=M.prototype.on,M.prototype.removeListener=function(e,t){const n=N.prototype.removeListener.call(this,e,t);return"readable"===e&&a.nextTick(H,this),n},M.prototype.off=M.prototype.removeListener,M.prototype.removeAllListeners=function(e){const t=N.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||a.nextTick(H,this),t},M.prototype.resume=function(){const e=this._readableState;return e.flowing||(v("resume"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,a.nextTick(W,e,t))}(this,e)),e[T]=!1,this},M.prototype.pause=function(){return v("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(v("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState[T]=!0,this},M.prototype.wrap=function(e){let t=!1;e.on("data",(n=>{!this.push(n)&&e.pause&&(t=!0,e.pause())})),e.on("end",(()=>{this.push(null)})),e.on("error",(e=>{k(this,e)})),e.on("close",(()=>{this.destroy()})),e.on("destroy",(()=>{this.destroy()})),this._read=()=>{t&&e.resume&&(t=!1,e.resume())};const n=l(e);for(let t=1;t<n.length;t++){const a=n[t];void 0===this[a]&&"function"==typeof e[a]&&(this[a]=e[a].bind(e))}return this},M.prototype[p]=function(){return X(this)},M.prototype.iterator=function(e){return void 0!==e&&L(e,"options"),X(this,e)},s(M.prototype,{readable:{__proto__:null,get(){const e=this._readableState;return!(!e||!1===e.readable||e.destroyed||e.errorEmitted||e.endEmitted)},set(e){this._readableState&&(this._readableState.readable=!!e)}},readableDidRead:{__proto__:null,enumerable:!1,get:function(){return this._readableState.dataEmitted}},readableAborted:{__proto__:null,enumerable:!1,get:function(){return!(!1===this._readableState.readable||!this._readableState.destroyed&&!this._readableState.errored||this._readableState.endEmitted)}},readableHighWaterMark:{__proto__:null,enumerable:!1,get:function(){return this._readableState.highWaterMark}},readableBuffer:{__proto__:null,enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}},readableFlowing:{__proto__:null,enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}},readableLength:{__proto__:null,enumerable:!1,get(){return this._readableState.length}},readableObjectMode:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.objectMode}},readableEncoding:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.encoding:null}},errored:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.errored:null}},closed:{__proto__:null,get(){return!!this._readableState&&this._readableState.closed}},destroyed:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.destroyed},set(e){this._readableState&&(this._readableState.destroyed=e)}},readableEnded:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.endEmitted}}}),s(D.prototype,{pipesCount:{__proto__:null,get(){return this.pipes.length}},paused:{__proto__:null,get(){return!1!==this[T]},set(e){this[T]=!!e}}}),M._fromList=Y,M.from=function(e,t){return P(M,e,t)},M.fromWeb=function(e,t){return ae().newStreamReadableFromReadableStream(e,t)},M.toWeb=function(e,t){return ae().newReadableStreamFromStreamReadable(e,t)},M.wrap=function(e,t){var n,a;return new M({objectMode:null===(n=null!==(a=e.readableObjectMode)&&void 0!==a?a:e.objectMode)||void 0===n||n,...t,destroy(t,n){x.destroyer(e,t),n(t)}}).wrap(e)}},5291:(e,t,n)=>{const{MathFloor:a,NumberIsInteger:o}=n(4134),{ERR_INVALID_ARG_VALUE:d}=n(6371).codes;function r(e){return e?16:16384}e.exports={getHighWaterMark:function(e,t,n,i){const s=function(e,t,n){return null!=e.highWaterMark?e.highWaterMark:t?e[n]:null}(t,i,n);if(null!=s){if(!o(s)||s<0)throw new d(i?`options.${n}`:"options.highWaterMark",s);return a(s)}return r(e.objectMode)},getDefaultHighWaterMark:r}},5001:(e,t,n)=>{const{ObjectSetPrototypeOf:a,Symbol:o}=n(4134);e.exports=l;const{ERR_METHOD_NOT_IMPLEMENTED:d}=n(6371).codes,r=n(3370),{getHighWaterMark:i}=n(5291);a(l.prototype,r.prototype),a(l,r);const s=o("kCallback");function l(e){if(!(this instanceof l))return new l(e);const t=e?i(this,e,"readableHighWaterMark",!0):null;0===t&&(e={...e,highWaterMark:null,readableHighWaterMark:t,writableHighWaterMark:e.writableHighWaterMark||0}),r.call(this,e),this._readableState.sync=!1,this[s]=null,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",m)}function u(e){"function"!=typeof this._flush||this.destroyed?(this.push(null),e&&e()):this._flush(((t,n)=>{t?e?e(t):this.destroy(t):(null!=n&&this.push(n),this.push(null),e&&e())}))}function m(){this._final!==u&&u.call(this)}l.prototype._final=u,l.prototype._transform=function(e,t,n){throw new d("_transform()")},l.prototype._write=function(e,t,n){const a=this._readableState,o=this._writableState,d=a.length;this._transform(e,t,((e,t)=>{e?n(e):(null!=t&&this.push(t),o.ended||d===a.length||a.length<a.highWaterMark?n():this[s]=n)}))},l.prototype._read=function(){if(this[s]){const e=this[s];this[s]=null,e()}}},6115:(e,t,n)=>{const{Symbol:a,SymbolAsyncIterator:o,SymbolIterator:d,SymbolFor:r}=n(4134),i=a("kDestroyed"),s=a("kIsErrored"),l=a("kIsReadable"),u=a("kIsDisturbed"),m=r("nodejs.webstream.isClosedPromise"),c=r("nodejs.webstream.controllerErrorFunction");function p(e,t=!1){var n;return!(!e||"function"!=typeof e.pipe||"function"!=typeof e.on||t&&("function"!=typeof e.pause||"function"!=typeof e.resume)||e._writableState&&!1===(null===(n=e._readableState)||void 0===n?void 0:n.readable)||e._writableState&&!e._readableState)}function h(e){var t;return!(!e||"function"!=typeof e.write||"function"!=typeof e.on||e._readableState&&!1===(null===(t=e._writableState)||void 0===t?void 0:t.writable))}function f(e){return e&&(e._readableState||e._writableState||"function"==typeof e.write&&"function"==typeof e.on||"function"==typeof e.pipe&&"function"==typeof e.on)}function N(e){return!(!e||f(e)||"function"!=typeof e.pipeThrough||"function"!=typeof e.getReader||"function"!=typeof e.cancel)}function g(e){return!(!e||f(e)||"function"!=typeof e.getWriter||"function"!=typeof e.abort)}function y(e){return!(!e||f(e)||"object"!=typeof e.readable||"object"!=typeof e.writable)}function $(e){if(!f(e))return null;const t=e._writableState,n=e._readableState,a=t||n;return!!(e.destroyed||e[i]||null!=a&&a.destroyed)}function b(e){if(!h(e))return null;if(!0===e.writableEnded)return!0;const t=e._writableState;return(null==t||!t.errored)&&("boolean"!=typeof(null==t?void 0:t.ended)?null:t.ended)}function v(e,t){if(!p(e))return null;const n=e._readableState;return(null==n||!n.errored)&&("boolean"!=typeof(null==n?void 0:n.endEmitted)?null:!!(n.endEmitted||!1===t&&!0===n.ended&&0===n.length))}function w(e){return e&&null!=e[l]?e[l]:"boolean"!=typeof(null==e?void 0:e.readable)?null:!$(e)&&p(e)&&e.readable&&!v(e)}function x(e){return"boolean"!=typeof(null==e?void 0:e.writable)?null:!$(e)&&h(e)&&e.writable&&!b(e)}function _(e){return"boolean"==typeof e._closed&&"boolean"==typeof e._defaultKeepAlive&&"boolean"==typeof e._removedConnection&&"boolean"==typeof e._removedContLen}function C(e){return"boolean"==typeof e._sent100&&_(e)}e.exports={kDestroyed:i,isDisturbed:function(e){var t;return!(!e||!(null!==(t=e[u])&&void 0!==t?t:e.readableDidRead||e.readableAborted))},kIsDisturbed:u,isErrored:function(e){var t,n,a,o,d,r,i,l,u,m;return!(!e||!(null!==(t=null!==(n=null!==(a=null!==(o=null!==(d=null!==(r=e[s])&&void 0!==r?r:e.readableErrored)&&void 0!==d?d:e.writableErrored)&&void 0!==o?o:null===(i=e._readableState)||void 0===i?void 0:i.errorEmitted)&&void 0!==a?a:null===(l=e._writableState)||void 0===l?void 0:l.errorEmitted)&&void 0!==n?n:null===(u=e._readableState)||void 0===u?void 0:u.errored)&&void 0!==t?t:null===(m=e._writableState)||void 0===m?void 0:m.errored))},kIsErrored:s,isReadable:w,kIsReadable:l,kIsClosedPromise:m,kControllerErrorFunction:c,isClosed:function(e){if(!f(e))return null;if("boolean"==typeof e.closed)return e.closed;const t=e._writableState,n=e._readableState;return"boolean"==typeof(null==t?void 0:t.closed)||"boolean"==typeof(null==n?void 0:n.closed)?(null==t?void 0:t.closed)||(null==n?void 0:n.closed):"boolean"==typeof e._closed&&_(e)?e._closed:null},isDestroyed:$,isDuplexNodeStream:function(e){return!(!e||"function"!=typeof e.pipe||!e._readableState||"function"!=typeof e.on||"function"!=typeof e.write)},isFinished:function(e,t){return f(e)?!(!$(e)&&(!1!==(null==t?void 0:t.readable)&&w(e)||!1!==(null==t?void 0:t.writable)&&x(e))):null},isIterable:function(e,t){return null!=e&&(!0===t?"function"==typeof e[o]:!1===t?"function"==typeof e[d]:"function"==typeof e[o]||"function"==typeof e[d])},isReadableNodeStream:p,isReadableStream:N,isReadableEnded:function(e){if(!p(e))return null;if(!0===e.readableEnded)return!0;const t=e._readableState;return!(!t||t.errored)&&("boolean"!=typeof(null==t?void 0:t.ended)?null:t.ended)},isReadableFinished:v,isReadableErrored:function(e){var t,n;return f(e)?e.readableErrored?e.readableErrored:null!==(t=null===(n=e._readableState)||void 0===n?void 0:n.errored)&&void 0!==t?t:null:null},isNodeStream:f,isWebStream:function(e){return N(e)||g(e)||y(e)},isWritable:x,isWritableNodeStream:h,isWritableStream:g,isWritableEnded:b,isWritableFinished:function(e,t){if(!h(e))return null;if(!0===e.writableFinished)return!0;const n=e._writableState;return(null==n||!n.errored)&&("boolean"!=typeof(null==n?void 0:n.finished)?null:!!(n.finished||!1===t&&!0===n.ended&&0===n.length))},isWritableErrored:function(e){var t,n;return f(e)?e.writableErrored?e.writableErrored:null!==(t=null===(n=e._writableState)||void 0===n?void 0:n.errored)&&void 0!==t?t:null:null},isServerRequest:function(e){var t;return"boolean"==typeof e._consuming&&"boolean"==typeof e._dumped&&void 0===(null===(t=e.req)||void 0===t?void 0:t.upgradeOrConnect)},isServerResponse:C,willEmitClose:function(e){if(!f(e))return null;const t=e._writableState,n=e._readableState,a=t||n;return!a&&C(e)||!!(a&&a.autoDestroy&&a.emitClose&&!1===a.closed)},isTransformStream:y}},8584:(e,t,n)=>{const a=n(5606),{ArrayPrototypeSlice:o,Error:d,FunctionPrototypeSymbolHasInstance:r,ObjectDefineProperty:i,ObjectDefineProperties:s,ObjectSetPrototypeOf:l,StringPrototypeToLowerCase:u,Symbol:m,SymbolHasInstance:c}=n(4134);e.exports=A,A.WritableState=L;const{EventEmitter:p}=n(7007),h=n(4259).Stream,{Buffer:f}=n(8287),N=n(5896),{addAbortSignal:g}=n(4147),{getHighWaterMark:y,getDefaultHighWaterMark:$}=n(5291),{ERR_INVALID_ARG_TYPE:b,ERR_METHOD_NOT_IMPLEMENTED:v,ERR_MULTIPLE_CALLBACK:w,ERR_STREAM_CANNOT_PIPE:x,ERR_STREAM_DESTROYED:_,ERR_STREAM_ALREADY_FINISHED:C,ERR_STREAM_NULL_VALUES:q,ERR_STREAM_WRITE_AFTER_END:S,ERR_UNKNOWN_ENCODING:E}=n(6371).codes,{errorOrDestroy:I}=N;function R(){}l(A.prototype,h.prototype),l(A,h);const j=m("kOnFinished");function L(e,t,a){"boolean"!=typeof a&&(a=t instanceof n(3370)),this.objectMode=!(!e||!e.objectMode),a&&(this.objectMode=this.objectMode||!(!e||!e.writableObjectMode)),this.highWaterMark=e?y(this,e,"writableHighWaterMark",a):$(!1),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;const o=!(!e||!1!==e.decodeStrings);this.decodeStrings=!o,this.defaultEncoding=e&&e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=D.bind(void 0,t),this.writecb=null,this.writelen=0,this.afterWriteTickInfo=null,T(this),this.pendingcb=0,this.constructed=!0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!e||!1!==e.emitClose,this.autoDestroy=!e||!1!==e.autoDestroy,this.errored=null,this.closed=!1,this.closeEmitted=!1,this[j]=[]}function T(e){e.buffered=[],e.bufferedIndex=0,e.allBuffers=!0,e.allNoop=!0}function A(e){const t=this instanceof n(3370);if(!t&&!r(A,this))return new A(e);this._writableState=new L(e,this,t),e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final),"function"==typeof e.construct&&(this._construct=e.construct),e.signal&&g(e.signal,this)),h.call(this,e),N.construct(this,(()=>{const e=this._writableState;e.writing||V(this,e),U(this,e)}))}function P(e,t,n,o){const d=e._writableState;if("function"==typeof n)o=n,n=d.defaultEncoding;else{if(n){if("buffer"!==n&&!f.isEncoding(n))throw new E(n)}else n=d.defaultEncoding;"function"!=typeof o&&(o=R)}if(null===t)throw new q;if(!d.objectMode)if("string"==typeof t)!1!==d.decodeStrings&&(t=f.from(t,n),n="buffer");else if(t instanceof f)n="buffer";else{if(!h._isUint8Array(t))throw new b("chunk",["string","Buffer","Uint8Array"],t);t=h._uint8ArrayToBuffer(t),n="buffer"}let r;return d.ending?r=new S:d.destroyed&&(r=new _("write")),r?(a.nextTick(o,r),I(e,r,!0),r):(d.pendingcb++,function(e,t,n,a,o){const d=t.objectMode?1:n.length;t.length+=d;const r=t.length<t.highWaterMark;return r||(t.needDrain=!0),t.writing||t.corked||t.errored||!t.constructed?(t.buffered.push({chunk:n,encoding:a,callback:o}),t.allBuffers&&"buffer"!==a&&(t.allBuffers=!1),t.allNoop&&o!==R&&(t.allNoop=!1)):(t.writelen=d,t.writecb=o,t.writing=!0,t.sync=!0,e._write(n,a,t.onwrite),t.sync=!1),r&&!t.errored&&!t.destroyed}(e,d,t,n,o))}function O(e,t,n,a,o,d,r){t.writelen=a,t.writecb=r,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new _("write")):n?e._writev(o,t.onwrite):e._write(o,d,t.onwrite),t.sync=!1}function k(e,t,n,a){--t.pendingcb,a(n),F(t),I(e,n)}function D(e,t){const n=e._writableState,o=n.sync,d=n.writecb;"function"==typeof d?(n.writing=!1,n.writecb=null,n.length-=n.writelen,n.writelen=0,t?(t.stack,n.errored||(n.errored=t),e._readableState&&!e._readableState.errored&&(e._readableState.errored=t),o?a.nextTick(k,e,n,t,d):k(e,n,t,d)):(n.buffered.length>n.bufferedIndex&&V(e,n),o?null!==n.afterWriteTickInfo&&n.afterWriteTickInfo.cb===d?n.afterWriteTickInfo.count++:(n.afterWriteTickInfo={count:1,cb:d,stream:e,state:n},a.nextTick(M,n.afterWriteTickInfo)):B(e,n,1,d))):I(e,new w)}function M({stream:e,state:t,count:n,cb:a}){return t.afterWriteTickInfo=null,B(e,t,n,a)}function B(e,t,n,a){for(!t.ending&&!e.destroyed&&0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"));n-- >0;)t.pendingcb--,a();t.destroyed&&F(t),U(e,t)}function F(e){if(e.writing)return;for(let n=e.bufferedIndex;n<e.buffered.length;++n){var t;const{chunk:a,callback:o}=e.buffered[n],d=e.objectMode?1:a.length;e.length-=d,o(null!==(t=e.errored)&&void 0!==t?t:new _("write"))}const n=e[j].splice(0);for(let t=0;t<n.length;t++){var a;n[t](null!==(a=e.errored)&&void 0!==a?a:new _("end"))}T(e)}function V(e,t){if(t.corked||t.bufferProcessing||t.destroyed||!t.constructed)return;const{buffered:n,bufferedIndex:a,objectMode:d}=t,r=n.length-a;if(!r)return;let i=a;if(t.bufferProcessing=!0,r>1&&e._writev){t.pendingcb-=r-1;const a=t.allNoop?R:e=>{for(let t=i;t<n.length;++t)n[t].callback(e)},d=t.allNoop&&0===i?n:o(n,i);d.allBuffers=t.allBuffers,O(e,t,!0,t.length,d,"",a),T(t)}else{do{const{chunk:a,encoding:o,callback:r}=n[i];n[i++]=null,O(e,t,!1,d?1:a.length,a,o,r)}while(i<n.length&&!t.writing);i===n.length?T(t):i>256?(n.splice(0,i),t.bufferedIndex=0):t.bufferedIndex=i}t.bufferProcessing=!1}function Q(e){return e.ending&&!e.destroyed&&e.constructed&&0===e.length&&!e.errored&&0===e.buffered.length&&!e.finished&&!e.writing&&!e.errorEmitted&&!e.closeEmitted}function U(e,t,n){Q(t)&&(function(e,t){t.prefinished||t.finalCalled||("function"!=typeof e._final||t.destroyed?(t.prefinished=!0,e.emit("prefinish")):(t.finalCalled=!0,function(e,t){let n=!1;function o(o){if(n)I(e,null!=o?o:w());else if(n=!0,t.pendingcb--,o){const n=t[j].splice(0);for(let e=0;e<n.length;e++)n[e](o);I(e,o,t.sync)}else Q(t)&&(t.prefinished=!0,e.emit("prefinish"),t.pendingcb++,a.nextTick(G,e,t))}t.sync=!0,t.pendingcb++;try{e._final(o)}catch(e){o(e)}t.sync=!1}(e,t)))}(e,t),0===t.pendingcb&&(n?(t.pendingcb++,a.nextTick(((e,t)=>{Q(t)?G(e,t):t.pendingcb--}),e,t)):Q(t)&&(t.pendingcb++,G(e,t))))}function G(e,t){t.pendingcb--,t.finished=!0;const n=t[j].splice(0);for(let e=0;e<n.length;e++)n[e]();if(e.emit("finish"),t.autoDestroy){const t=e._readableState;(!t||t.autoDestroy&&(t.endEmitted||!1===t.readable))&&e.destroy()}}L.prototype.getBuffer=function(){return o(this.buffered,this.bufferedIndex)},i(L.prototype,"bufferedRequestCount",{__proto__:null,get(){return this.buffered.length-this.bufferedIndex}}),i(A,c,{__proto__:null,value:function(e){return!!r(this,e)||this===A&&e&&e._writableState instanceof L}}),A.prototype.pipe=function(){I(this,new x)},A.prototype.write=function(e,t,n){return!0===P(this,e,t,n)},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){const e=this._writableState;e.corked&&(e.corked--,e.writing||V(this,e))},A.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=u(e)),!f.isEncoding(e))throw new E(e);return this._writableState.defaultEncoding=e,this},A.prototype._write=function(e,t,n){if(!this._writev)throw new v("_write()");this._writev([{chunk:e,encoding:t}],n)},A.prototype._writev=null,A.prototype.end=function(e,t,n){const o=this._writableState;let r;if("function"==typeof e?(n=e,e=null,t=null):"function"==typeof t&&(n=t,t=null),null!=e){const n=P(this,e,t);n instanceof d&&(r=n)}return o.corked&&(o.corked=1,this.uncork()),r||(o.errored||o.ending?o.finished?r=new C("end"):o.destroyed&&(r=new _("end")):(o.ending=!0,U(this,o,!0),o.ended=!0)),"function"==typeof n&&(r||o.finished?a.nextTick(n,r):o[j].push(n)),this},s(A.prototype,{closed:{__proto__:null,get(){return!!this._writableState&&this._writableState.closed}},destroyed:{__proto__:null,get(){return!!this._writableState&&this._writableState.destroyed},set(e){this._writableState&&(this._writableState.destroyed=e)}},writable:{__proto__:null,get(){const e=this._writableState;return!(!e||!1===e.writable||e.destroyed||e.errored||e.ending||e.ended)},set(e){this._writableState&&(this._writableState.writable=!!e)}},writableFinished:{__proto__:null,get(){return!!this._writableState&&this._writableState.finished}},writableObjectMode:{__proto__:null,get(){return!!this._writableState&&this._writableState.objectMode}},writableBuffer:{__proto__:null,get(){return this._writableState&&this._writableState.getBuffer()}},writableEnded:{__proto__:null,get(){return!!this._writableState&&this._writableState.ending}},writableNeedDrain:{__proto__:null,get(){const e=this._writableState;return!!e&&!e.destroyed&&!e.ending&&e.needDrain}},writableHighWaterMark:{__proto__:null,get(){return this._writableState&&this._writableState.highWaterMark}},writableCorked:{__proto__:null,get(){return this._writableState?this._writableState.corked:0}},writableLength:{__proto__:null,get(){return this._writableState&&this._writableState.length}},errored:{__proto__:null,enumerable:!1,get(){return this._writableState?this._writableState.errored:null}},writableAborted:{__proto__:null,enumerable:!1,get:function(){return!(!1===this._writableState.writable||!this._writableState.destroyed&&!this._writableState.errored||this._writableState.finished)}}});const J=N.destroy;let H;function z(){return void 0===H&&(H={}),H}A.prototype.destroy=function(e,t){const n=this._writableState;return!n.destroyed&&(n.bufferedIndex<n.buffered.length||n[j].length)&&a.nextTick(F,n),J.call(this,e,t),this},A.prototype._undestroy=N.undestroy,A.prototype._destroy=function(e,t){t(e)},A.prototype[p.captureRejectionSymbol]=function(e){this.destroy(e)},A.fromWeb=function(e,t){return z().newStreamWritableFromWritableStream(e,t)},A.toWeb=function(e){return z().newWritableStreamFromStreamWritable(e)}},277:(e,t,n)=>{const{ArrayIsArray:a,ArrayPrototypeIncludes:o,ArrayPrototypeJoin:d,ArrayPrototypeMap:r,NumberIsInteger:i,NumberIsNaN:s,NumberMAX_SAFE_INTEGER:l,NumberMIN_SAFE_INTEGER:u,NumberParseInt:m,ObjectPrototypeHasOwnProperty:c,RegExpPrototypeExec:p,String:h,StringPrototypeToUpperCase:f,StringPrototypeTrim:N}=n(4134),{hideStackFrames:g,codes:{ERR_SOCKET_BAD_PORT:y,ERR_INVALID_ARG_TYPE:$,ERR_INVALID_ARG_VALUE:b,ERR_OUT_OF_RANGE:v,ERR_UNKNOWN_SIGNAL:w}}=n(6371),{normalizeEncoding:x}=n(7760),{isAsyncFunction:_,isArrayBufferView:C}=n(7760).types,q={},S=/^[0-7]+$/,E=g(((e,t,n=u,a=l)=>{if("number"!=typeof e)throw new $(t,"number",e);if(!i(e))throw new v(t,"an integer",e);if(e<n||e>a)throw new v(t,`>= ${n} && <= ${a}`,e)})),I=g(((e,t,n=-2147483648,a=2147483647)=>{if("number"!=typeof e)throw new $(t,"number",e);if(!i(e))throw new v(t,"an integer",e);if(e<n||e>a)throw new v(t,`>= ${n} && <= ${a}`,e)})),R=g(((e,t,n=!1)=>{if("number"!=typeof e)throw new $(t,"number",e);if(!i(e))throw new v(t,"an integer",e);const a=n?1:0,o=4294967295;if(e<a||e>o)throw new v(t,`>= ${a} && <= ${o}`,e)}));function j(e,t){if("string"!=typeof e)throw new $(t,"string",e)}const L=g(((e,t,n)=>{if(!o(n,e)){const a=d(r(n,(e=>"string"==typeof e?`'${e}'`:h(e))),", ");throw new b(t,e,"must be one of: "+a)}}));function T(e,t){if("boolean"!=typeof e)throw new $(t,"boolean",e)}function A(e,t,n){return null!=e&&c(e,t)?e[t]:n}const P=g(((e,t,n=null)=>{const o=A(n,"allowArray",!1),d=A(n,"allowFunction",!1);if(!A(n,"nullable",!1)&&null===e||!o&&a(e)||"object"!=typeof e&&(!d||"function"!=typeof e))throw new $(t,"Object",e)})),O=g(((e,t)=>{if(null!=e&&"object"!=typeof e&&"function"!=typeof e)throw new $(t,"a dictionary",e)})),k=g(((e,t,n=0)=>{if(!a(e))throw new $(t,"Array",e);if(e.length<n)throw new b(t,e,`must be longer than ${n}`)})),D=g(((e,t="buffer")=>{if(!C(e))throw new $(t,["Buffer","TypedArray","DataView"],e)})),M=g(((e,t)=>{if(void 0!==e&&(null===e||"object"!=typeof e||!("aborted"in e)))throw new $(t,"AbortSignal",e)})),B=g(((e,t)=>{if("function"!=typeof e)throw new $(t,"Function",e)})),F=g(((e,t)=>{if("function"!=typeof e||_(e))throw new $(t,"Function",e)})),V=g(((e,t)=>{if(void 0!==e)throw new $(t,"undefined",e)})),Q=/^(?:<[^>]*>)(?:\s*;\s*[^;"\s]+(?:=(")?[^;"\s]*\1)?)*$/;function U(e,t){if(void 0===e||!p(Q,e))throw new b(t,e,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}e.exports={isInt32:function(e){return e===(0|e)},isUint32:function(e){return e===e>>>0},parseFileMode:function(e,t,n){if(void 0===e&&(e=n),"string"==typeof e){if(null===p(S,e))throw new b(t,e,"must be a 32-bit unsigned integer or an octal string");e=m(e,8)}return R(e,t),e},validateArray:k,validateStringArray:function(e,t){k(e,t);for(let n=0;n<e.length;n++)j(e[n],`${t}[${n}]`)},validateBooleanArray:function(e,t){k(e,t);for(let n=0;n<e.length;n++)T(e[n],`${t}[${n}]`)},validateBoolean:T,validateBuffer:D,validateDictionary:O,validateEncoding:function(e,t){const n=x(t),a=e.length;if("hex"===n&&a%2!=0)throw new b("encoding",t,`is invalid for data of length ${a}`)},validateFunction:B,validateInt32:I,validateInteger:E,validateNumber:function(e,t,n=void 0,a){if("number"!=typeof e)throw new $(t,"number",e);if(null!=n&&e<n||null!=a&&e>a||(null!=n||null!=a)&&s(e))throw new v(t,`${null!=n?`>= ${n}`:""}${null!=n&&null!=a?" && ":""}${null!=a?`<= ${a}`:""}`,e)},validateObject:P,validateOneOf:L,validatePlainFunction:F,validatePort:function(e,t="Port",n=!0){if("number"!=typeof e&&"string"!=typeof e||"string"==typeof e&&0===N(e).length||+e!=+e>>>0||e>65535||0===e&&!n)throw new y(t,e,n);return 0|e},validateSignalName:function(e,t="signal"){if(j(e,t),void 0===q[e]){if(void 0!==q[f(e)])throw new w(e+" (signals must use all capital letters)");throw new w(e)}},validateString:j,validateUint32:R,validateUndefined:V,validateUnion:function(e,t,n){if(!o(n,e))throw new $(t,`('${d(n,"|")}')`,e)},validateAbortSignal:M,validateLinkHeaderValue:function(e){if("string"==typeof e)return U(e,"hints"),e;if(a(e)){const t=e.length;let n="";if(0===t)return n;for(let a=0;a<t;a++){const o=e[a];U(o,"hints"),n+=o,a!==t-1&&(n+=", ")}return n}throw new b("hints",e,'must be an array or string of format "</styles.css>; rel=preload; as=style"')}}},9198:(e,t,n)=>{const a=n(5506),o=n(3095),d=a.Readable.destroy;e.exports=a.Readable,e.exports._uint8ArrayToBuffer=a._uint8ArrayToBuffer,e.exports._isUint8Array=a._isUint8Array,e.exports.isDisturbed=a.isDisturbed,e.exports.isErrored=a.isErrored,e.exports.isReadable=a.isReadable,e.exports.Readable=a.Readable,e.exports.Writable=a.Writable,e.exports.Duplex=a.Duplex,e.exports.Transform=a.Transform,e.exports.PassThrough=a.PassThrough,e.exports.addAbortSignal=a.addAbortSignal,e.exports.finished=a.finished,e.exports.destroy=a.destroy,e.exports.destroy=d,e.exports.pipeline=a.pipeline,e.exports.compose=a.compose,Object.defineProperty(a,"promises",{configurable:!0,enumerable:!0,get:()=>o}),e.exports.Stream=a.Stream,e.exports.default=e.exports},6371:(e,t,n)=>{const{format:a,inspect:o,AggregateError:d}=n(7760),r=globalThis.AggregateError||d,i=Symbol("kIsNodeError"),s=["string","function","number","object","Function","Object","boolean","bigint","symbol"],l=/^([A-Z][a-z0-9]*)+$/,u={};function m(e,t){if(!e)throw new u.ERR_INTERNAL_ASSERTION(t)}function c(e){let t="",n=e.length;const a="-"===e[0]?1:0;for(;n>=a+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function p(e,t,n){n||(n=Error);class o extends n{constructor(...n){super(function(e,t,n){if("function"==typeof t)return m(t.length<=n.length,`Code: ${e}; The provided arguments length (${n.length}) does not match the required ones (${t.length}).`),t(...n);const o=(t.match(/%[dfijoOs]/g)||[]).length;return m(o===n.length,`Code: ${e}; The provided arguments length (${n.length}) does not match the required ones (${o}).`),0===n.length?t:a(t,...n)}(e,t,n))}toString(){return`${this.name} [${e}]: ${this.message}`}}Object.defineProperties(o.prototype,{name:{value:n.name,writable:!0,enumerable:!1,configurable:!0},toString:{value(){return`${this.name} [${e}]: ${this.message}`},writable:!0,enumerable:!1,configurable:!0}}),o.prototype.code=e,o.prototype[i]=!0,u[e]=o}function h(e){const t="__node_internal_"+e.name;return Object.defineProperty(e,"name",{value:t}),e}class f extends Error{constructor(e="The operation was aborted",t=void 0){if(void 0!==t&&"object"!=typeof t)throw new u.ERR_INVALID_ARG_TYPE("options","Object",t);super(e,t),this.code="ABORT_ERR",this.name="AbortError"}}p("ERR_ASSERTION","%s",Error),p("ERR_INVALID_ARG_TYPE",((e,t,n)=>{m("string"==typeof e,"'name' must be a string"),Array.isArray(t)||(t=[t]);let a="The ";e.endsWith(" argument")?a+=`${e} `:a+=`"${e}" ${e.includes(".")?"property":"argument"} `,a+="must be ";const d=[],r=[],i=[];for(const e of t)m("string"==typeof e,"All expected entries have to be of type string"),s.includes(e)?d.push(e.toLowerCase()):l.test(e)?r.push(e):(m("object"!==e,'The value "object" should be written as "Object"'),i.push(e));if(r.length>0){const e=d.indexOf("object");-1!==e&&(d.splice(d,e,1),r.push("Object"))}if(d.length>0){switch(d.length){case 1:a+=`of type ${d[0]}`;break;case 2:a+=`one of type ${d[0]} or ${d[1]}`;break;default:{const e=d.pop();a+=`one of type ${d.join(", ")}, or ${e}`}}(r.length>0||i.length>0)&&(a+=" or ")}if(r.length>0){switch(r.length){case 1:a+=`an instance of ${r[0]}`;break;case 2:a+=`an instance of ${r[0]} or ${r[1]}`;break;default:{const e=r.pop();a+=`an instance of ${r.join(", ")}, or ${e}`}}i.length>0&&(a+=" or ")}switch(i.length){case 0:break;case 1:i[0].toLowerCase()!==i[0]&&(a+="an "),a+=`${i[0]}`;break;case 2:a+=`one of ${i[0]} or ${i[1]}`;break;default:{const e=i.pop();a+=`one of ${i.join(", ")}, or ${e}`}}if(null==n)a+=`. Received ${n}`;else if("function"==typeof n&&n.name)a+=`. Received function ${n.name}`;else if("object"==typeof n){var u;null!==(u=n.constructor)&&void 0!==u&&u.name?a+=`. Received an instance of ${n.constructor.name}`:a+=`. Received ${o(n,{depth:-1})}`}else{let e=o(n,{colors:!1});e.length>25&&(e=`${e.slice(0,25)}...`),a+=`. Received type ${typeof n} (${e})`}return a}),TypeError),p("ERR_INVALID_ARG_VALUE",((e,t,n="is invalid")=>{let a=o(t);return a.length>128&&(a=a.slice(0,128)+"..."),`The ${e.includes(".")?"property":"argument"} '${e}' ${n}. Received ${a}`}),TypeError),p("ERR_INVALID_RETURN_VALUE",((e,t,n)=>{var a;return`Expected ${e} to be returned from the "${t}" function but got ${null!=n&&null!==(a=n.constructor)&&void 0!==a&&a.name?`instance of ${n.constructor.name}`:"type "+typeof n}.`}),TypeError),p("ERR_MISSING_ARGS",((...e)=>{let t;m(e.length>0,"At least one arg needs to be specified");const n=e.length;switch(e=(Array.isArray(e)?e:[e]).map((e=>`"${e}"`)).join(" or "),n){case 1:t+=`The ${e[0]} argument`;break;case 2:t+=`The ${e[0]} and ${e[1]} arguments`;break;default:{const n=e.pop();t+=`The ${e.join(", ")}, and ${n} arguments`}}return`${t} must be specified`}),TypeError),p("ERR_OUT_OF_RANGE",((e,t,n)=>{let a;return m(t,'Missing "range" argument'),Number.isInteger(n)&&Math.abs(n)>2**32?a=c(String(n)):"bigint"==typeof n?(a=String(n),(n>2n**32n||n<-(2n**32n))&&(a=c(a)),a+="n"):a=o(n),`The value of "${e}" is out of range. It must be ${t}. Received ${a}`}),RangeError),p("ERR_MULTIPLE_CALLBACK","Callback called multiple times",Error),p("ERR_METHOD_NOT_IMPLEMENTED","The %s method is not implemented",Error),p("ERR_STREAM_ALREADY_FINISHED","Cannot call %s after a stream was finished",Error),p("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable",Error),p("ERR_STREAM_DESTROYED","Cannot call %s after a stream was destroyed",Error),p("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),p("ERR_STREAM_PREMATURE_CLOSE","Premature close",Error),p("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF",Error),p("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event",Error),p("ERR_STREAM_WRITE_AFTER_END","write after end",Error),p("ERR_UNKNOWN_ENCODING","Unknown encoding: %s",TypeError),e.exports={AbortError:f,aggregateTwoErrors:h((function(e,t){if(e&&t&&e!==t){if(Array.isArray(t.errors))return t.errors.push(e),t;const n=new r([t,e],t.message);return n.code=t.code,n}return e||t})),hideStackFrames:h,codes:u}},4134:e=>{e.exports={ArrayIsArray:e=>Array.isArray(e),ArrayPrototypeIncludes:(e,t)=>e.includes(t),ArrayPrototypeIndexOf:(e,t)=>e.indexOf(t),ArrayPrototypeJoin:(e,t)=>e.join(t),ArrayPrototypeMap:(e,t)=>e.map(t),ArrayPrototypePop:(e,t)=>e.pop(t),ArrayPrototypePush:(e,t)=>e.push(t),ArrayPrototypeSlice:(e,t,n)=>e.slice(t,n),Error,FunctionPrototypeCall:(e,t,...n)=>e.call(t,...n),FunctionPrototypeSymbolHasInstance:(e,t)=>Function.prototype[Symbol.hasInstance].call(e,t),MathFloor:Math.floor,Number,NumberIsInteger:Number.isInteger,NumberIsNaN:Number.isNaN,NumberMAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER,NumberMIN_SAFE_INTEGER:Number.MIN_SAFE_INTEGER,NumberParseInt:Number.parseInt,ObjectDefineProperties:(e,t)=>Object.defineProperties(e,t),ObjectDefineProperty:(e,t,n)=>Object.defineProperty(e,t,n),ObjectGetOwnPropertyDescriptor:(e,t)=>Object.getOwnPropertyDescriptor(e,t),ObjectKeys:e=>Object.keys(e),ObjectSetPrototypeOf:(e,t)=>Object.setPrototypeOf(e,t),Promise,PromisePrototypeCatch:(e,t)=>e.catch(t),PromisePrototypeThen:(e,t,n)=>e.then(t,n),PromiseReject:e=>Promise.reject(e),ReflectApply:Reflect.apply,RegExpPrototypeTest:(e,t)=>e.test(t),SafeSet:Set,String,StringPrototypeSlice:(e,t,n)=>e.slice(t,n),StringPrototypeToLowerCase:e=>e.toLowerCase(),StringPrototypeToUpperCase:e=>e.toUpperCase(),StringPrototypeTrim:e=>e.trim(),Symbol,SymbolFor:Symbol.for,SymbolAsyncIterator:Symbol.asyncIterator,SymbolHasInstance:Symbol.hasInstance,SymbolIterator:Symbol.iterator,TypedArrayPrototypeSet:(e,t,n)=>e.set(t,n),Uint8Array}},7760:(e,t,n)=>{const a=n(8287),o=Object.getPrototypeOf((async function(){})).constructor,d=globalThis.Blob||a.Blob,r=void 0!==d?function(e){return e instanceof d}:function(e){return!1};class i extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError("Expected input to be an Array, got "+typeof e);let t="";for(let n=0;n<e.length;n++)t+=`    ${e[n].stack}\n`;super(t),this.name="AggregateError",this.errors=e}}e.exports={AggregateError:i,kEmptyObject:Object.freeze({}),once(e){let t=!1;return function(...n){t||(t=!0,e.apply(this,n))}},createDeferredPromise:function(){let e,t;return{promise:new Promise(((n,a)=>{e=n,t=a})),resolve:e,reject:t}},promisify:e=>new Promise(((t,n)=>{e(((e,...a)=>e?n(e):t(...a)))})),debuglog:()=>function(){},format:(e,...t)=>e.replace(/%([sdifj])/g,(function(...[e,n]){const a=t.shift();return"f"===n?a.toFixed(6):"j"===n?JSON.stringify(a):"s"===n&&"object"==typeof a?`${a.constructor!==Object?a.constructor.name:""} {}`.trim():a.toString()})),inspect(e){switch(typeof e){case"string":if(e.includes("'")){if(!e.includes('"'))return`"${e}"`;if(!e.includes("`")&&!e.includes("${"))return`\`${e}\``}return`'${e}'`;case"number":return isNaN(e)?"NaN":Object.is(e,-0)?String(e):e;case"bigint":return`${String(e)}n`;case"boolean":case"undefined":return String(e);case"object":return"{}"}},types:{isAsyncFunction:e=>e instanceof o,isArrayBufferView:e=>ArrayBuffer.isView(e)},isBlob:r},e.exports.promisify.custom=Symbol.for("nodejs.util.promisify.custom")},5506:(e,t,n)=>{const{Buffer:a}=n(8287),{ObjectDefineProperty:o,ObjectKeys:d,ReflectApply:r}=n(4134),{promisify:{custom:i}}=n(7760),{streamReturningOperators:s,promiseReturningOperators:l}=n(823),{codes:{ERR_ILLEGAL_CONSTRUCTOR:u}}=n(6371),m=n(7830),{pipeline:c}=n(7758),{destroyer:p}=n(5896),h=n(6238),f=n(3095),N=n(6115),g=e.exports=n(4259).Stream;g.isDisturbed=N.isDisturbed,g.isErrored=N.isErrored,g.isReadable=N.isReadable,g.Readable=n(7576);for(const $ of d(s)){const b=s[$];function v(...e){if(new.target)throw u();return g.Readable.from(r(b,this,e))}o(v,"name",{__proto__:null,value:b.name}),o(v,"length",{__proto__:null,value:b.length}),o(g.Readable.prototype,$,{__proto__:null,value:v,enumerable:!1,configurable:!0,writable:!0})}for(const w of d(l)){const x=l[w];function _(...e){if(new.target)throw u();return r(x,this,e)}o(_,"name",{__proto__:null,value:x.name}),o(_,"length",{__proto__:null,value:x.length}),o(g.Readable.prototype,w,{__proto__:null,value:_,enumerable:!1,configurable:!0,writable:!0})}g.Writable=n(8584),g.Duplex=n(3370),g.Transform=n(5001),g.PassThrough=n(6524),g.pipeline=c;const{addAbortSignal:y}=n(4147);g.addAbortSignal=y,g.finished=h,g.destroy=p,g.compose=m,o(g,"promises",{__proto__:null,configurable:!0,enumerable:!0,get:()=>f}),o(c,i,{__proto__:null,enumerable:!0,get:()=>f.pipeline}),o(h,i,{__proto__:null,enumerable:!0,get:()=>f.finished}),g.Stream=g,g._isUint8Array=function(e){return e instanceof Uint8Array},g._uint8ArrayToBuffer=function(e){return a.from(e.buffer,e.byteOffset,e.byteLength)}},3095:(e,t,n)=>{const{ArrayPrototypePop:a,Promise:o}=n(4134),{isIterable:d,isNodeStream:r,isWebStream:i}=n(6115),{pipelineImpl:s}=n(7758),{finished:l}=n(6238);n(5506),e.exports={finished:l,pipeline:function(...e){return new o(((t,n)=>{let o,l;const u=e[e.length-1];if(u&&"object"==typeof u&&!r(u)&&!d(u)&&!i(u)){const t=a(e);o=t.signal,l=t.end}s(e,((e,a)=>{e?n(e):t(a)}),{signal:o,end:l})}))}}},2861:(e,t,n)=>{var a=n(8287),o=a.Buffer;function d(e,t){for(var n in e)t[n]=e[n]}function r(e,t,n){return o(e,t,n)}o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?e.exports=a:(d(a,t),t.Buffer=r),r.prototype=Object.create(o.prototype),d(o,r),r.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return o(e,t,n)},r.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var a=o(e);return void 0!==t?"string"==typeof n?a.fill(t,n):a.fill(t):a.fill(0),a},r.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return o(e)},r.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a.SlowBuffer(e)}},2791:function(e,t,n){!function(e,t){if(!e.setImmediate){var n,a,o,d,r,i=1,s={},l=!1,u=e.document,m=Object.getPrototypeOf&&Object.getPrototypeOf(e);m=m&&m.setTimeout?m:e,"[object process]"==={}.toString.call(e.process)?n=function(e){process.nextTick((function(){p(e)}))}:function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?(d="setImmediate$"+Math.random()+"$",r=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(d)&&p(+t.data.slice(d.length))},e.addEventListener?e.addEventListener("message",r,!1):e.attachEvent("onmessage",r),n=function(t){e.postMessage(d+t,"*")}):e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){p(e.data)},n=function(e){o.port2.postMessage(e)}):u&&"onreadystatechange"in u.createElement("script")?(a=u.documentElement,n=function(e){var t=u.createElement("script");t.onreadystatechange=function(){p(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):n=function(e){setTimeout(p,0,e)},m.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),a=0;a<t.length;a++)t[a]=arguments[a+1];var o={callback:e,args:t};return s[i]=o,n(i),i++},m.clearImmediate=c}function c(e){delete s[e]}function p(e){if(l)setTimeout(p,0,e);else{var t=s[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(undefined,n)}}(t)}finally{c(e),l=!1}}}}}("undefined"==typeof self?void 0===n.g?this:n.g:self)},3141:(e,t,n)=>{var a=n(2861).Buffer,o=a.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function d(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(a.isEncoding===o||!o(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=s,this.end=l,t=4;break;case"utf8":this.fillLast=i,t=4;break;case"base64":this.text=u,this.end=m,t=3;break;default:return this.write=c,void(this.end=p)}this.lastNeed=0,this.lastTotal=0,this.lastChar=a.allocUnsafe(t)}function r(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function i(e){var t=this.lastTotal-this.lastNeed,n=function(e,t,n){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==n?n:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function s(e,t){if((e.length-t)%2==0){var n=e.toString("utf16le",t);if(n){var a=n.charCodeAt(n.length-1);if(a>=55296&&a<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function l(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,n)}return t}function u(e,t){var n=(e.length-t)%3;return 0===n?e.toString("base64",t):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-n))}function m(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function c(e){return e.toString(this.encoding)}function p(e){return e&&e.length?this.write(e):""}t.StringDecoder=d,d.prototype.write=function(e){if(0===e.length)return"";var t,n;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<e.length?t?t+this.text(e,n):this.text(e,n):t||""},d.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},d.prototype.text=function(e,t){var n=function(e,t,n){var a=t.length-1;if(a<n)return 0;var o=r(t[a]);return o>=0?(o>0&&(e.lastNeed=o-1),o):--a<n||-2===o?0:(o=r(t[a]))>=0?(o>0&&(e.lastNeed=o-2),o):--a<n||-2===o?0:(o=r(t[a]))>=0?(o>0&&(2===o?o=0:e.lastNeed=o-3),o):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=n;var a=e.length-(n-this.lastNeed);return e.copy(this.lastChar,0,a),e.toString("utf8",t,a)},d.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},259:e=>{e.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}},8799:(e,t,n)=>{function a(e){var t=this;if(t instanceof a||(t=new a),t.tail=null,t.head=null,t.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){t.push(e)}));else if(arguments.length>0)for(var n=0,o=arguments.length;n<o;n++)t.push(arguments[n]);return t}function o(e,t,n){var a=t===e.head?new i(n,null,t,e):new i(n,t,t.next,e);return null===a.next&&(e.tail=a),null===a.prev&&(e.head=a),e.length++,a}function d(e,t){e.tail=new i(t,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function r(e,t){e.head=new i(t,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function i(e,t,n,a){if(!(this instanceof i))return new i(e,t,n,a);this.list=a,this.value=e,t?(t.next=this,this.prev=t):this.prev=null,n?(n.prev=this,this.next=n):this.next=null}e.exports=a,a.Node=i,a.create=a,a.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var t=e.next,n=e.prev;return t&&(t.prev=n),n&&(n.next=t),e===this.head&&(this.head=t),e===this.tail&&(this.tail=n),e.list.length--,e.next=null,e.prev=null,e.list=null,t},a.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var t=this.head;e.list=this,e.next=t,t&&(t.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},a.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var t=this.tail;e.list=this,e.prev=t,t&&(t.next=e),this.tail=e,this.head||(this.head=e),this.length++}},a.prototype.push=function(){for(var e=0,t=arguments.length;e<t;e++)d(this,arguments[e]);return this.length},a.prototype.unshift=function(){for(var e=0,t=arguments.length;e<t;e++)r(this,arguments[e]);return this.length},a.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},a.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},a.prototype.forEach=function(e,t){t=t||this;for(var n=this.head,a=0;null!==n;a++)e.call(t,n.value,a,this),n=n.next},a.prototype.forEachReverse=function(e,t){t=t||this;for(var n=this.tail,a=this.length-1;null!==n;a--)e.call(t,n.value,a,this),n=n.prev},a.prototype.get=function(e){for(var t=0,n=this.head;null!==n&&t<e;t++)n=n.next;if(t===e&&null!==n)return n.value},a.prototype.getReverse=function(e){for(var t=0,n=this.tail;null!==n&&t<e;t++)n=n.prev;if(t===e&&null!==n)return n.value},a.prototype.map=function(e,t){t=t||this;for(var n=new a,o=this.head;null!==o;)n.push(e.call(t,o.value,this)),o=o.next;return n},a.prototype.mapReverse=function(e,t){t=t||this;for(var n=new a,o=this.tail;null!==o;)n.push(e.call(t,o.value,this)),o=o.prev;return n},a.prototype.reduce=function(e,t){var n,a=this.head;if(arguments.length>1)n=t;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");a=this.head.next,n=this.head.value}for(var o=0;null!==a;o++)n=e(n,a.value,o),a=a.next;return n},a.prototype.reduceReverse=function(e,t){var n,a=this.tail;if(arguments.length>1)n=t;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");a=this.tail.prev,n=this.tail.value}for(var o=this.length-1;null!==a;o--)n=e(n,a.value,o),a=a.prev;return n},a.prototype.toArray=function(){for(var e=new Array(this.length),t=0,n=this.head;null!==n;t++)e[t]=n.value,n=n.next;return e},a.prototype.toArrayReverse=function(){for(var e=new Array(this.length),t=0,n=this.tail;null!==n;t++)e[t]=n.value,n=n.prev;return e},a.prototype.slice=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var n=new a;if(t<e||t<0)return n;e<0&&(e=0),t>this.length&&(t=this.length);for(var o=0,d=this.head;null!==d&&o<e;o++)d=d.next;for(;null!==d&&o<t;o++,d=d.next)n.push(d.value);return n},a.prototype.sliceReverse=function(e,t){(t=t||this.length)<0&&(t+=this.length),(e=e||0)<0&&(e+=this.length);var n=new a;if(t<e||t<0)return n;e<0&&(e=0),t>this.length&&(t=this.length);for(var o=this.length,d=this.tail;null!==d&&o>t;o--)d=d.prev;for(;null!==d&&o>e;o--,d=d.prev)n.push(d.value);return n},a.prototype.splice=function(e,t,...n){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var a=0,d=this.head;null!==d&&a<e;a++)d=d.next;var r=[];for(a=0;d&&a<t;a++)r.push(d.value),d=this.removeNode(d);for(null===d&&(d=this.tail),d!==this.head&&d!==this.tail&&(d=d.prev),a=0;a<n.length;a++)d=o(this,d,n[a]);return r},a.prototype.reverse=function(){for(var e=this.head,t=this.tail,n=e;null!==n;n=n.prev){var a=n.prev;n.prev=n.next,n.next=a}return this.head=t,this.tail=e,this};try{n(259)(a)}catch(e){}},7789:()=>{}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var d=t[a]={exports:{}};return e[a].call(d.exports,d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var a={};(()=>{n.d(a,{TS:()=>Fe,aH:()=>Me,k_:()=>ie,a6:()=>la,nt:()=>U,Sx:()=>G,E7:()=>k,F3:()=>re});const e="http://www.w3.org/1999/02/22-rdf-syntax-ns#",t="http://www.w3.org/2001/XMLSchema#",o="http://www.w3.org/2000/10/swap/",d={xsd:{decimal:`${t}decimal`,boolean:`${t}boolean`,double:`${t}double`,integer:`${t}integer`,string:`${t}string`},rdf:{type:`${e}type`,nil:`${e}nil`,first:`${e}first`,rest:`${e}rest`,langString:`${e}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${o}reify#forSome`,forAll:`${o}reify#forAll`},log:{implies:`${o}log#implies`}},{rdf:r,xsd:i}=d;let s,l=0;const u={namedNode:function(e){return new p(e)},blankNode:function(e){return new f(e||"n3-"+l++)},variable:function(e){return new N(e)},literal:function(e,t){if("string"==typeof t)return new h(`"${e}"@${t.toLowerCase()}`);let n=t?t.value:"";return""===n&&("boolean"==typeof e?n=i.boolean:"number"==typeof e&&(Number.isFinite(e)?n=Number.isInteger(e)?i.integer:i.double:(n=i.double,Number.isNaN(e)||(e=e>0?"INF":"-INF")))),""===n||n===i.string?new h(`"${e}"`):new h(`"${e}"^^${n}`)},defaultGraph:function(){return s},quad:b,triple:b},m=u;class c{constructor(e){this.id=e}get value(){return this.id}equals(e){return e instanceof c?this.id===e.id:!!e&&this.termType===e.termType&&this.value===e.value}hashCode(){return 0}toJSON(){return{termType:this.termType,value:this.value}}}class p extends c{get termType(){return"NamedNode"}}class h extends c{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){const e=this.id;let t=e.lastIndexOf('"')+1;return t<e.length&&"@"===e[t++]?e.substr(t).toLowerCase():""}get datatype(){return new p(this.datatypeString)}get datatypeString(){const e=this.id,t=e.lastIndexOf('"')+1,n=t<e.length?e[t]:"";return"^"===n?e.substr(t+2):"@"!==n?i.string:r.langString}equals(e){return e instanceof h?this.id===e.id:!!e&&!!e.datatype&&this.termType===e.termType&&this.value===e.value&&this.language===e.language&&this.datatype.value===e.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}}class f extends c{constructor(e){super(`_:${e}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}}class N extends c{constructor(e){super(`?${e}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}}function g(e,t,n){if(t=t||u,!e)return t.defaultGraph();switch(e[0]){case"?":return t.variable(e.substr(1));case"_":return t.blankNode(e.substr(2));case'"':if(t===u)return new h(e);if('"'===e[e.length-1])return t.literal(e.substr(1,e.length-2));const a=e.lastIndexOf('"',e.length-1);return t.literal(e.substr(1,a-1),"@"===e[a+1]?e.substr(a+2):t.namedNode(e.substr(a+3)));case"[":e=JSON.parse(e);break;default:if(!n||!Array.isArray(e))return t.namedNode(e)}return t.quad(g(e[0],t,!0),g(e[1],t,!0),g(e[2],t,!0),e[3]&&g(e[3],t,!0))}function y(e,t){if("string"==typeof e)return e;if(e instanceof c&&"Quad"!==e.termType)return e.id;if(!e)return s.id;switch(e.termType){case"NamedNode":return e.value;case"BlankNode":return`_:${e.value}`;case"Variable":return`?${e.value}`;case"DefaultGraph":return"";case"Literal":return`"${e.value}"${e.language?`@${e.language}`:e.datatype&&e.datatype.value!==i.string?`^^${e.datatype.value}`:""}`;case"Quad":const n=[y(e.subject,!0),y(e.predicate,!0),y(e.object,!0)];return e.graph&&"DefaultGraph"!==e.graph.termType&&n.push(y(e.graph,!0)),t?n:JSON.stringify(n);default:throw new Error(`Unexpected termType: ${e.termType}`)}}s=new class extends c{constructor(){return super(""),s||this}get termType(){return"DefaultGraph"}equals(e){return this===e||!!e&&this.termType===e.termType}};class $ extends c{constructor(e,t,n,a){super(""),this._subject=e,this._predicate=t,this._object=n,this._graph=a||s}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(e){return!!e&&this._subject.equals(e.subject)&&this._predicate.equals(e.predicate)&&this._object.equals(e.object)&&this._graph.equals(e.graph)}}function b(e,t,n,a){return new $(e,t,n,a)}const v="http://www.w3.org/ns/shacl#",w="http://www.w3.org/2001/XMLSchema#",x="http://www.w3.org/1999/02/22-rdf-syntax-ns#",_="http://www.w3.org/2000/01/rdf-schema#",C="http://www.w3.org/2004/02/skos/core#",q="http://www.w3.org/2002/07/owl#",S=m.namedNode("shapes"),E=m.namedNode(q+"imports"),I=m.namedNode(x+"type"),R=m.namedNode(_+"subClassOf"),j=m.namedNode(C+"broader"),L=m.namedNode(q+"NamedIndividual"),T=m.namedNode(v+"NodeShape"),A=m.namedNode(v+"class"),P=m.namedNode(v+"targetClass");function O(e,t,n=v,a){let o="";const d=function(e,t,n=v,a){let o;const d=n+t;for(const t of e)if(t.predicate.value===d){if(!a)return t.object;if(t.object.id.endsWith(`@${a}`))return t.object;t.object.id.indexOf("@")<0?o=t.object:o||(o=t.object)}return o}(e,t,n,a);return d&&(o=d.value),o}function k(e,t){return O(e,"prefLabel",C,t)||O(e,"label",_,t)}function D(e,t,n){const a=[];for(const o of e)a.push({value:o,label:k(t.getQuads(o,null,null,null),n)});return a}function M(e,t){for(const n in t)e=e.replace(t[n],"");return e}function B(e,t){const n=D(t.shapesGraph.getSubjects(I,e,null),t.shapesGraph,t.attributes.language);for(const a of t.shapesGraph.getSubjects(R,e,null))n.push(...B(a,t));if(t.shapesGraph.has(new $(e,I,L,S))){n.push(...D([e],t.shapesGraph,t.attributes.language));for(const a of t.shapesGraph.getSubjects(j,e,null))n.push(...B(a,t))}return n}function F(e){let t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}function V(e,t,n){const a=document.createElement("div");a.classList.add("shacl-or-constraint");const o=[];if(o.push({label:"--- please choose ---",value:""}),t instanceof ye){const d=[];for(let a=0;a<e.length;a++){const r=new se(e[a],n,t.nodeId);d.push(r),o.push({label:r.template.label,value:a.toString()})}const r=n.theme.createListEditor("Please choose",null,!1,o),i=r.querySelector(".editor");i.onchange=()=>{i.value&&a.replaceWith(d[parseInt(i.value)])},a.appendChild(r)}else{const d=[];for(let t=0;t<e.length;t++){const a=n.shapesGraph.getQuads(e[t],null,null,S);a.length&&(d.push(a),o.push({label:k(a,n.attributes.language)||M(a[0].predicate.value,n.prefixes)+" = "+M(a[0].object.value,n.prefixes),value:t.toString()}))}const r=n.theme.createListEditor(t.template.label+"?",null,!1,o,t.template),i=r.querySelector(".editor");i.onchange=()=>{i.value&&a.replaceWith(le(t.template.clone().merge(d[parseInt(i.value)]),void 0,!0))},a.appendChild(r)}return a}const Q={[`${v}name`]:(e,t)=>{const n=t;e.name&&n.language!==e.config.attributes.language||(e.name=n)},[`${v}description`]:(e,t)=>{const n=t;e.description&&n.language!==e.config.attributes.language||(e.description=n)},[`${v}path`]:(e,t)=>{e.path=t.value},[`${v}node`]:(e,t)=>{e.node=t},[`${v}datatype`]:(e,t)=>{e.datatype=t},[`${v}nodeKind`]:(e,t)=>{e.nodeKind=t},[`${v}minCount`]:(e,t)=>{e.minCount=parseInt(t.value)},[`${v}maxCount`]:(e,t)=>{e.maxCount=parseInt(t.value)},[`${v}minLength`]:(e,t)=>{e.minLength=parseInt(t.value)},[`${v}maxLength`]:(e,t)=>{e.maxLength=parseInt(t.value)},[`${v}minInclusive`]:(e,t)=>{e.minInclusive=parseInt(t.value)},[`${v}maxInclusive`]:(e,t)=>{e.maxInclusive=parseInt(t.value)},[`${v}minExclusive`]:(e,t)=>{e.minExclusive=parseInt(t.value)},[`${v}maxExclusive`]:(e,t)=>{e.maxExclusive=parseInt(t.value)},[`${v}pattern`]:(e,t)=>{e.pattern=t.value},[`${v}order`]:(e,t)=>{e.order=parseInt(t.value)},"http://datashapes.org/dash#singleLine":(e,t)=>{e.singleLine="true"===t.value},"http://www.w3.org/ns/oa#styleClass":(e,t)=>{e.cssClass=t.value},[`${v}and`]:(e,t)=>{e.shaclAnd=t.value},[`${v}in`]:(e,t)=>{e.shaclIn=t.value},[`${v}languageIn`]:(e,t)=>{e.languageIn=e.config.lists[t.value],e.datatype=m.namedNode(x+"langString")},[`${v}defaultValue`]:(e,t)=>{e.defaultValue=t},[`${v}hasValue`]:(e,t)=>{e.hasValue=t},[A.value]:(e,t)=>{e.class=t;const n=e.config.shapesGraph.getSubjects(P,t,S);n.length>0&&(e.node=n[0])},[`${v}or`]:(e,t)=>{const n=e.config.lists[t.value];(null==n?void 0:n.length)?e.shaclOr=n:console.error("list not found:",t.value,"existing lists:",e.config.lists)}};class U{constructor(e,t,n){this.label="",this.config=n,this.nodeId=t,this.merge(e)}merge(e){var t,n;for(const n of e)null===(t=Q[n.predicate.id])||void 0===t||t.call(this,this,n.object);if(this.label=(null===(n=this.name)||void 0===n?void 0:n.value)||k(e,this.config.attributes.language),this.label||this.node||this.shaclAnd||(this.label=this.path?M(this.path,this.config.prefixes):"unknown"),(this.node||this.shaclAnd)&&(this.extendedShapes=[],this.node&&this.extendedShapes.push(this.node),this.shaclAnd)){const e=this.config.lists[this.shaclAnd];if(null==e?void 0:e.length)for(const t of e)this.extendedShapes.push(t)}return this}clone(){const e=Object.assign({},this);return e.merge=this.merge.bind(e),e.clone=this.clone.bind(e),e}}class G{constructor(e){let t="form { box-sizing: border-box; display:block; --label-width: 8em; --caret-size: 10px; }\nform.mode-edit { padding-left: 1em;  }\nform *, form ::after, form ::before { box-sizing: inherit; }\nshacl-node, .shacl-group { display: flex; flex-direction: column; width: 100%; position: relative; }\nshacl-node .control-button { text-decoration: none; cursor: pointer; border: 1px solid transparent; border-radius: 4px; padding: 2px 4px; }\nshacl-node .control-button:hover { border-color: inherit; }\nshacl-node .remove-button { margin-left: 4px; }\nshacl-node .add-button { font-size: 0.8rem; color: #555; margin: 4px 24px 0 0; }\nshacl-node .add-button:before { content: '+'; margin-right: 0.2em; }\nshacl-node .add-button:hover { color: inherit; }\nshacl-node h1 { font-size: 1.1rem; border-bottom: 1px solid; margin-top: 4px; color: #555; }\nshacl-property { display: flex; flex-direction: column; align-items: end; position: relative; }\nshacl-property:not(.may-add) > .add-button { display: none; }\nshacl-property:not(.may-remove) > .property-instance > .remove-button:not(.persistent) { visibility: hidden; }\nshacl-property:not(.may-remove) > .shacl-or-constraint > .remove-button:not(.persistent) { visibility: hidden; }\n.shacl-group { margin-bottom: 1em; padding-bottom: 1em; }\n.mode-view .shacl-group:not(:has(shacl-property)) { display: none; }\n.property-instance, .shacl-or-constraint { display: flex; align-items: flex-start; padding: 4px 0; width: 100%; position: relative; }\n.shacl-or-constraint label { display: inline-block; word-break: break-word; width: var(--label-width); line-height: 1em; padding-top: 0.15em; padding-right: 1em; flex-shrink: 0; position: relative; }\n.property-instance label[title] { cursor: help; text-decoration: underline dashed #AAA; }\n.mode-edit .property-instance label.required::before { color: red; content: '\\2736'; font-size: 0.6rem; position: absolute; left: -1.4em; top: 0.15rem; }\n.property-instance.valid::before { position: absolute; left: calc(var(--label-width) - 1em); top: 6px; color: green; content: '\\2713'; }\n.editor:not([type='checkbox']), .shacl-or-constraint select { flex-grow: 1; }\n.shacl-or-constraint select { border: 1px solid #DDD; padding: 2px 4px; }\ntextarea.editor { resize: vertical; }\n.lang-chooser { position: absolute; top: 5px; right: 28px; border: 0; background-color: #e9e9ed; padding: 2px 4px; max-width: 40px; width: 40px; box-sizing: content-box; }\n.lang-chooser+.editor { padding-right: 55px; }\n.validation-error { position: absolute; left: calc(var(--label-width) - 1em); top: 6px; color: red; cursor: help; }\n.validation-error::before { content: '\\26a0' }\n.validation-error.node { left: -1em; }\n.invalid > .editor { border-color: red !important; }\n.ml-0  { margin-left: 0 !important; }\n.pr-0  { padding-right: 0 !important; }\n.mode-view .property-instance:not(:first-child) > label { visibility: hidden; }\n.mode-view .property-instance label { width: var(--label-width); }\n\n.d-flex { display: flex; }\n.lang { opacity: 0.65; font-size: 0.6em; }\na, a:visited { color: inherit; }\n\n.fadeIn, .fadeOut { animation: fadeIn 0.2s ease-out; }\n.fadeOut { animation-direction: reverse; animation-timing-function: ease-out;}\n@keyframes fadeIn {\n    0% { opacity: 0; transform: scaleY(0.8); }\n    100% { opacity: 1; transform: scaleY(1); }\n}\n  \n.collapsible > .activator { display: flex; justify-content: space-between; align-items: center; cursor: pointer; width: 100%; border: 0; padding: 8px 0; transition: 0.2s; }\n.collapsible > .activator:hover, .collapsible.open > .activator { background-color: #F5F5F5; }\n.collapsible > .activator::after { content:''; width: var(--caret-size); height: var(--caret-size); border-style: none solid solid none; border-width: calc(0.3 * var(--caret-size)); transform: rotate(45deg); transition: transform .15s ease-out; margin-right: calc(0.5 * var(--caret-size)); }\n.collapsible.open > .activator::after { transform: rotate(225deg); }\n.collapsible > *:not(.activator) { transition: all 0.2s ease-out; opacity: 1; }\n.collapsible:not(.open) > *:not(.activator) { max-height: 0; padding: 0; opacity: 0; overflow: hidden; }\n.collapsible shacl-node > h1 { display: none; }\n.collapsible.open > .property-instance:nth-child(odd) { background-color: #F5F5F5; }";e&&(t+="\n"+e),this.stylesheet=new CSSStyleSheet,this.stylesheet.replaceSync(t)}apply(e){}createViewer(e,t,n){const a=document.createElement("div"),o=document.createElement("label");o.innerHTML=e+":",n.description&&o.setAttribute("title",n.description.value),a.appendChild(o);let d,r=t.value,i=null;if(t instanceof p){const e=n.config.shapesGraph.getQuads(r,null,null,S);if(e.length){const t=k(e,n.config.attributes.language);t&&(r=t)}}else t instanceof h&&(t.language?(i=document.createElement("span"),i.classList.add("lang"),i.innerText=`@${t.language}`):t.datatype.value===`${w}date`?r=new Date(Date.parse(t.value)).toDateString():t.datatype.value===`${w}dateTime`&&(r=new Date(Date.parse(t.value)).toLocaleString()));return F(t.value)?(d=document.createElement("a"),d.setAttribute("href",t.value)):d=document.createElement("div"),d.classList.add("d-flex"),d.innerText=r,i&&d.appendChild(i),a.appendChild(d),a}}function J(e,t){var n,a,o;if(e.config.editMode){const d=void 0!==e.minCount&&e.minCount>0;if(e.class)return e.config.theme.createListEditor(e.label,t,d,B(e.class,e.config),e);if(e.shaclIn){const n=e.config.lists[e.shaclIn];if(null==n?void 0:n.length){const a=D(n,e.config.shapesGraph,e.config.attributes.language);return e.config.theme.createListEditor(e.label,t,d,a,e)}console.error("list not found:",e.shaclIn,"existing lists:",e.config.lists)}if((null===(n=e.datatype)||void 0===n?void 0:n.value)===`${x}langString`||(null===(a=e.languageIn)||void 0===a?void 0:a.length))return e.config.theme.createLangStringEditor(e.label,t,d,e);switch(null===(o=e.datatype)||void 0===o?void 0:o.value.replace(w,"")){case"integer":case"float":case"double":case"decimal":return e.config.theme.createNumberEditor(e.label,t,d,e);case"date":case"dateTime":return e.config.theme.createDateEditor(e.label,t,d,e);case"boolean":return e.config.theme.createBooleanEditor(e.label,t,d,e);case"base64Binary":return e.config.theme.createFileEditor(e.label,t,d,e)}return e.config.theme.createTextEditor(e.label,t,d,e)}{if(t)return e.config.theme.createViewer(e.label,t,e);const n=document.createElement("div");return n.innerHTML="No value",n}}function H(e){return!!e&&"DefaultGraph"===e.termType}const z=m.defaultGraph(),{rdf:W,xsd:K}=d,X=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,Y=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,Z={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};class ee extends c{equals(e){return e===this}}class te{constructor(e,t){if(this._prefixRegex=/$0^/,e&&"function"!=typeof e.write&&(t=e,e=null),t=t||{},this._lists=t.lists,e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write(t,n,a){e+=t,a&&a()},end:t=>{t&&t(null,e)}},this._endStream=!0}this._subject=null,/triple|quad/i.test(t.format)?(this._lineMode=!0,this._writeQuad=this._writeQuadLine):(this._lineMode=!1,this._graph=z,this._prefixIRIs=Object.create(null),t.prefixes&&this.addPrefixes(t.prefixes),t.baseIRI&&(this._baseMatcher=new RegExp(`^${ae(t.baseIRI)}${t.baseIRI.endsWith("/")?"":"[#?]"}`),this._baseLength=t.baseIRI.length))}get _inDefaultGraph(){return z.equals(this._graph)}_write(e,t){this._outputStream.write(e,"utf8",t)}_writeQuad(e,t,n,a,o){try{a.equals(this._graph)||(this._write((null===this._subject?"":this._inDefaultGraph?".\n":"\n}\n")+(z.equals(a)?"":`${this._encodeIriOrBlank(a)} {\n`)),this._graph=a,this._subject=null),e.equals(this._subject)?t.equals(this._predicate)?this._write(`, ${this._encodeObject(n)}`,o):this._write(`;\n    ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(n)}`,o):this._write(`${(null===this._subject?"":".\n")+this._encodeSubject(this._subject=e)} ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(n)}`,o)}catch(e){o&&o(e)}}_writeQuadLine(e,t,n,a,o){delete this._prefixMatch,this._write(this.quadToString(e,t,n,a),o)}quadToString(e,t,n,a){return`${this._encodeSubject(e)} ${this._encodeIriOrBlank(t)} ${this._encodeObject(n)}${a&&a.value?` ${this._encodeIriOrBlank(a)} .\n`:" .\n"}`}quadsToString(e){return e.map((e=>this.quadToString(e.subject,e.predicate,e.object,e.graph))).join("")}_encodeSubject(e){return"Quad"===e.termType?this._encodeQuad(e):this._encodeIriOrBlank(e)}_encodeIriOrBlank(e){if("NamedNode"!==e.termType)return this._lists&&e.value in this._lists&&(e=this.list(this._lists[e.value])),"id"in e?e.id:`_:${e.value}`;let t=e.value;this._baseMatcher&&this._baseMatcher.test(t)&&(t=t.substr(this._baseLength)),X.test(t)&&(t=t.replace(Y,ne));const n=this._prefixRegex.exec(t);return n?n[1]?this._prefixIRIs[n[1]]+n[2]:t:`<${t}>`}_encodeLiteral(e){let t=e.value;if(X.test(t)&&(t=t.replace(Y,ne)),e.language)return`"${t}"@${e.language}`;if(this._lineMode){if(e.datatype.value===K.string)return`"${t}"`}else switch(e.datatype.value){case K.string:return`"${t}"`;case K.boolean:if("true"===t||"false"===t)return t;break;case K.integer:if(/^[+-]?\d+$/.test(t))return t;break;case K.decimal:if(/^[+-]?\d*\.\d+$/.test(t))return t;break;case K.double:if(/^[+-]?(?:\d+\.\d*|\.?\d+)[eE][+-]?\d+$/.test(t))return t}return`"${t}"^^${this._encodeIriOrBlank(e.datatype)}`}_encodePredicate(e){return e.value===W.type?"a":this._encodeIriOrBlank(e)}_encodeObject(e){switch(e.termType){case"Quad":return this._encodeQuad(e);case"Literal":return this._encodeLiteral(e);default:return this._encodeIriOrBlank(e)}}_encodeQuad({subject:e,predicate:t,object:n,graph:a}){return`<<${this._encodeSubject(e)} ${this._encodePredicate(t)} ${this._encodeObject(n)}${H(a)?"":` ${this._encodeIriOrBlank(a)}`}>>`}_blockedWrite(){throw new Error("Cannot write because the writer has been closed.")}addQuad(e,t,n,a,o){void 0===n?this._writeQuad(e.subject,e.predicate,e.object,e.graph,t):"function"==typeof a?this._writeQuad(e,t,n,z,a):this._writeQuad(e,t,n,a||z,o)}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}addPrefix(e,t,n){const a={};a[e]=t,this.addPrefixes(a,n)}addPrefixes(e,t){if(!this._prefixIRIs)return t&&t();let n=!1;for(let t in e){let a=e[t];"string"!=typeof a&&(a=a.value),n=!0,null!==this._subject&&(this._write(this._inDefaultGraph?".\n":"\n}\n"),this._subject=null,this._graph=""),this._prefixIRIs[a]=t+=":",this._write(`@prefix ${t} <${a}>.\n`)}if(n){let e="",t="";for(const n in this._prefixIRIs)e+=e?`|${n}`:n,t+=(t?"|":"")+this._prefixIRIs[n];e=ae(e),this._prefixRegex=new RegExp(`^(?:${t})[^/]*$|^(${e})([_a-zA-Z][\\-_a-zA-Z0-9]*)$`)}this._write(n?"\n":"",t)}blank(e,t){let n,a,o=e;switch(void 0===e?o=[]:e.termType?o=[{predicate:e,object:t}]:"length"in e||(o=[e]),a=o.length){case 0:return new ee("[]");case 1:if(n=o[0],!(n.object instanceof ee))return new ee(`[ ${this._encodePredicate(n.predicate)} ${this._encodeObject(n.object)} ]`);default:let t="[";for(let d=0;d<a;d++)n=o[d],n.predicate.equals(e)?t+=`, ${this._encodeObject(n.object)}`:(t+=`${(d?";\n  ":"\n  ")+this._encodePredicate(n.predicate)} ${this._encodeObject(n.object)}`,e=n.predicate);return new ee(`${t}\n]`)}}list(e){const t=e&&e.length||0,n=new Array(t);for(let a=0;a<t;a++)n[a]=this._encodeObject(e[a]);return new ee(`(${n.join(" ")})`)}end(e){null!==this._subject&&(this._write(this._inDefaultGraph?".\n":"\n}\n"),this._subject=null),this._write=this._blockedWrite;let t=e&&((n,a)=>{t=null,e(n,a)});if(this._endStream)try{return this._outputStream.end(t)}catch(e){}t&&t()}}function ne(e){let t=Z[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function ae(e){return e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&")}function oe(e){let t=e.shaclDatatype,n=e.value;return n?e.dataset.class||e.dataset.nodeKind===v+"IRI"?m.namedNode(n):(e.dataset.lang?t=e.dataset.lang:"number"===e.type?n=parseFloat(n):"file"===e.type&&e.binaryData&&(n=e.binaryData),m.literal(n,t)):"checkbox"!==e.type&&"checkbox"!==e.getAttribute("type")||!(e.checked||parseInt(e.dataset.minCount||"0")>0)?void 0:m.literal(e.checked?"true":"false",t)}const de={};function re(e){void 0===e.predicate&&void 0===e.datatype?console.warn('not registering plugin because it does neither define "predicate" nor "datatype"',e):de[`${e.predicate}^${e.datatype}`]=e}class ie{constructor(e,t){this.predicate=e.predicate,this.datatype=e.datatype,t&&(this.stylesheet=new CSSStyleSheet,this.stylesheet.replaceSync(t))}createViewer(e,t){return e.config.theme.createViewer(e.label,t,e)}}class se extends HTMLElement{constructor(e,t,n,a){var o;if(super(),this.template=new U(t.shapesGraph.getQuads(e,null,null,S),n,t),this.dataset.nodeId=this.template.nodeId.id,void 0!==this.template.order&&(this.style.order=`${this.template.order}`),this.template.cssClass&&this.classList.add(this.template.cssClass),t.editMode&&(this.addButton=document.createElement("a"),this.addButton.innerText=this.template.label,this.addButton.title="Add "+this.template.label,this.addButton.classList.add("control-button","add-button"),this.addButton.addEventListener("click",(e=>{const t=this.addPropertyInstance();t.classList.add("fadeIn"),this.updateControls(),function(e){var t;null===(t=e.querySelector("input,select,textarea"))||void 0===t||t.focus()}(t),setTimeout((()=>{t.classList.remove("fadeIn")}),200)})),this.appendChild(this.addButton)),this.template.path){const e=a?t.dataGraph.getQuads(a,this.template.path,null,null):[];let n=!1;for(const t of e)this.addPropertyInstance(t.object),this.template.hasValue&&t.object.equals(this.template.hasValue)&&(n=!0);t.editMode&&this.template.hasValue&&!n&&this.addPropertyInstance(this.template.hasValue)}if(t.editMode&&(this.addEventListener("change",(()=>{this.updateControls()})),this.updateControls()),(null===(o=this.template.extendedShapes)||void 0===o?void 0:o.length)&&null!==this.template.config.attributes.collapse&&(!this.template.maxCount||this.template.maxCount>1)&&(t.editMode||this.childElementCount>0)){const e=this;e.classList.add("collapsible"),"open"===this.template.config.attributes.collapse&&e.classList.add("open");const t=document.createElement("h1");t.classList.add("activator"),t.innerText=this.template.label,t.addEventListener("click",(()=>{e.classList.toggle("open")})),this.prepend(t)}}addPropertyInstance(e){var t;let n;return(null===(t=this.template.shaclOr)||void 0===t?void 0:t.length)?e?n=le(function(e,t){if(!e.shaclOr)return console.warn("can't resolve sh:or because template has no options",e),e;if(t instanceof h){const n=t.datatype;for(const t of e.shaclOr){const a=e.config.shapesGraph.getQuads(t,null,null,S);for(const t of a)if(t.predicate.value===`${v}datatype`&&t.object.equals(n))return e.clone().merge(a)}}else{let n=e.config.dataGraph.getObjects(t,I,null);if(n.push(...e.config.shapesGraph.getObjects(t,I,S)),n.length>0)for(const t of e.shaclOr){const a=e.config.shapesGraph.getQuads(t,null,null,S);for(const t of a){if(t.predicate.value===`${v}node`)for(const o of n)if(e.config.shapesGraph.has(new $(t.object,P,o,S)))return e.clone().merge(a);if(t.predicate.equals(A))for(const o of n)if(t.object.equals(o))return e.clone().merge(a)}}}return console.error("couldn't resolve sh:or for value",t),e}(this.template,e),e,!0):(n=V(this.template.shaclOr,this,this.template.config),ue(n,"")):n=le(this.template,e),this.template.config.editMode?this.insertBefore(n,this.addButton):this.appendChild(n),n}updateControls(){var e;let t,n=this.querySelectorAll(":scope > .property-instance, :scope > .shacl-or-constraint, :scope > shacl-node").length;0===n&&(!(null===(e=this.template.extendedShapes)||void 0===e?void 0:e.length)||void 0!==this.template.minCount&&this.template.minCount>0)&&(this.addPropertyInstance(),n=this.querySelectorAll(":scope > .property-instance, :scope > .shacl-or-constraint, :scope > shacl-node").length),t=void 0!==this.template.minCount?n>this.template.minCount:this.template.extendedShapes&&this.template.extendedShapes.length>0||n>1;const a=void 0===this.template.maxCount||n<this.template.maxCount;this.classList.toggle("may-remove",t),this.classList.toggle("may-add",a)}toRDF(e,t){for(const n of this.querySelectorAll(":scope > .property-instance")){const a=m.namedNode(n.dataset.path);if(n.firstChild instanceof ye){const o=e.size,d=n.firstChild.toRDF(e);e.size>o&&e.addQuad(t,a,d)}else{const o=oe(n.querySelector(".editor"));o&&e.addQuad(t,a,o)}}}}function le(e,t,n=!1){var a,o;let d;if(null===(a=e.extendedShapes)||void 0===a?void 0:a.length){d=document.createElement("div"),d.classList.add("property-instance");for(const n of e.extendedShapes)d.appendChild(new ye(n,e.config,t,e.nodeKind,e.label))}else{const n=function(e,t){let n=de[`${e}^${t}`];return n||(n=de[`${e}^undefined`],n||de[`undefined^${t}`])}(e.path,null===(o=e.datatype)||void 0===o?void 0:o.value);d=n?e.config.editMode?n.createEditor(e,t):n.createViewer(e,t):J(e,t||null),d.classList.add("property-instance")}return e.config.editMode&&ue(d,e.label,n),d.dataset.path=e.path,d}function ue(e,t,n=!1){const a=document.createElement("a");a.innerText="×",a.classList.add("control-button","btn","remove-button"),a.title="Remove "+t,a.addEventListener("click",(t=>{e.classList.remove("fadeIn"),e.classList.add("fadeOut"),setTimeout((()=>{const t=e.parentElement;e.remove(),null==t||t.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!0}))}),200)})),n&&a.classList.add("persistent"),e.appendChild(a)}function me(e,t){const n=document.createElement("div");n.dataset.subject=e,n.classList.add("shacl-group");let a=e;const o=t.shapesGraph.getQuads(e,null,null,S),d=O(o,"label",_,t.attributes.language);d&&(a=d);const r=O(o,"order");r&&(n.style.order=r);const i=document.createElement("h1");return i.innerText=a,n.appendChild(i),null!==t.attributes.collapse&&(n.classList.add("collapsible"),"open"===t.attributes.collapse&&n.classList.add("open"),i.classList.add("activator"),i.addEventListener("click",(()=>{n.classList.toggle("open")}))),n}window.customElements.define("shacl-property",se);const ce={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let pe;const he=new Uint8Array(16);function fe(){if(!pe&&(pe="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!pe))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return pe(he)}const Ne=[];for(let e=0;e<256;++e)Ne.push((e+256).toString(16).slice(1));const ge=function(e,t,n){if(ce.randomUUID&&!t&&!e)return ce.randomUUID();const a=(e=e||{}).random||(e.rng||fe)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return function(e,t=0){return Ne[e[t+0]]+Ne[e[t+1]]+Ne[e[t+2]]+Ne[e[t+3]]+"-"+Ne[e[t+4]]+Ne[e[t+5]]+"-"+Ne[e[t+6]]+Ne[e[t+7]]+"-"+Ne[e[t+8]]+Ne[e[t+9]]+"-"+Ne[e[t+10]]+Ne[e[t+11]]+Ne[e[t+12]]+Ne[e[t+13]]+Ne[e[t+14]]+Ne[e[t+15]]}(a)};class ye extends HTMLElement{constructor(e,t,n,a,o){super(),this.config=t,this.shaclSubject=e;let d=n;if(!d){if(!a){const n=t.shapesGraph.getObjects(e,`${v}nodeKind`,S);n.length&&(a=n[0])}d=void 0===a&&t.attributes.valuesNamespace||(null==a?void 0:a.id)===`${v}IRI`?m.namedNode(t.attributes.valuesNamespace+ge()):m.blankNode(ge())}this.nodeId=d,this.dataset.nodeId=this.nodeId.id;const r=t.shapesGraph.getQuads(e,null,null,S);let i;for(const e of r)switch(e.predicate.id){case`${v}property`:let a=this;const o=t.shapesGraph.getQuads(e.object,`${v}group`,null,S);if(o.length>0){const e=o[0].object.value;if(t.groups.indexOf(e)>-1){let n=this.querySelector(`:scope > .shacl-group[data-subject='${e}']`);n||(n=me(e,t),this.appendChild(n)),a=n}else console.warn("ignoring unknown group reference",o[0])}const d=new se(e.object,t,this.nodeId,n);d.childElementCount>0&&a.appendChild(d);break;case`${v}and`:if(i=t.lists[e.object.value],null==i?void 0:i.length)for(const e of i)this.prepend(new ye(e,t,n));else console.error("list not found:",e.object.value,"existing lists:",t.lists);break;case`${v}node`:this.prepend(new ye(e.object,t,n));break;case`${v}targetClass`:this.targetClass=e.object;break;case`${v}or`:i=t.lists[e.object.value],(null==i?void 0:i.length)?this.appendChild(V(i,this,t)):console.error("list not found:",e.object.value,"existing lists:",t.lists)}if(o){const e=document.createElement("h1");e.innerText=o,this.prepend(e)}}toRDF(e,t){t||(t=this.nodeId);for(const n of this.querySelectorAll(":scope > shacl-node, :scope > .shacl-group > shacl-node, :scope > shacl-property, :scope > .shacl-group > shacl-property"))n.toRDF(e,t);return this.targetClass&&e.addQuad(t,I,this.targetClass),this.closest("shacl-node shacl-node")||e.addQuad(t,I,this.shaclSubject),t}}window.customElements.define("shacl-node",ye);var $e=n(9198);class be{constructor(e,t){this._size=0,this._graphs=Object.create(null),this._id=0,this._ids=Object.create(null),this._entities=Object.create(null),this._blankNodeIndex=0,t||!e||e[0]||(t=e,e=null),t=t||{},this._factory=t.factory||m,e&&this.addQuads(e)}_termFromId(e,t){if("."===e[0]){const t=this._entities,n=e.split(".");return this._factory.quad(this._termFromId(t[n[1]]),this._termFromId(t[n[2]]),this._termFromId(t[n[3]]),n[4]&&this._termFromId(t[n[4]]))}return g(e,t)}_termToNumericId(e){if("Quad"===e.termType){const t=this._termToNumericId(e.subject),n=this._termToNumericId(e.predicate),a=this._termToNumericId(e.object);let o;return t&&n&&a&&(H(e.graph)||(o=this._termToNumericId(e.graph)))&&this._ids[o?`.${t}.${n}.${a}.${o}`:`.${t}.${n}.${a}`]}return this._ids[y(e)]}_termToNewNumericId(e){const t=e&&"Quad"===e.termType?`.${this._termToNewNumericId(e.subject)}.${this._termToNewNumericId(e.predicate)}.${this._termToNewNumericId(e.object)}${H(e.graph)?"":`.${this._termToNewNumericId(e.graph)}`}`:y(e);return this._ids[t]||(this._ids[this._entities[++this._id]=t]=this._id)}get size(){let e=this._size;if(null!==e)return e;e=0;const t=this._graphs;let n,a;for(const o in t)for(const d in n=t[o].subjects)for(const t in a=n[d])e+=Object.keys(a[t]).length;return this._size=e}_addToIndex(e,t,n,a){const o=e[t]||(e[t]={}),d=o[n]||(o[n]={}),r=a in d;return r||(d[a]=null),!r}_removeFromIndex(e,t,n,a){const o=e[t],d=o[n];delete d[a];for(const e in d)return;delete o[n];for(const e in o)return;delete e[t]}*_findInIndex(e,t,n,a,o,d,r,i){let s,l,u;const m=this._entities,c=this._termFromId(i,this._factory),p={subject:null,predicate:null,object:null};t&&((s=e,e={})[t]=s[t]);for(const t in e)if(l=e[t]){p[o]=this._termFromId(m[t],this._factory),n&&((s=l,l={})[n]=s[n]);for(const e in l)if(u=l[e]){p[d]=this._termFromId(m[e],this._factory);const t=a?a in u?[a]:[]:Object.keys(u);for(let e=0;e<t.length;e++)p[r]=this._termFromId(m[t[e]],this._factory),yield this._factory.quad(p.subject,p.predicate,p.object,c)}}}_loop(e,t){for(const n in e)t(n)}_loopByKey0(e,t,n){let a,o;if(a=e[t])for(o in a)n(o)}_loopByKey1(e,t,n){let a,o;for(a in e)o=e[a],o[t]&&n(a)}_loopBy2Keys(e,t,n,a){let o,d,r;if((o=e[t])&&(d=o[n]))for(r in d)a(r)}_countInIndex(e,t,n,a){let o,d,r,i=0;t&&((o=e,e={})[t]=o[t]);for(const t in e)if(d=e[t]){n&&((o=d,d={})[n]=o[n]);for(const e in d)(r=d[e])&&(a?a in r&&i++:i+=Object.keys(r).length)}return i}_getGraphs(e){if(!("string"==typeof(t=e)||t instanceof String))return this._graphs;var t;const n={};return n[e]=this._graphs[e],n}_uniqueEntities(e){const t=Object.create(null);return n=>{n in t||(t[n]=!0,e(this._termFromId(this._entities[n],this._factory)))}}add(e){return this.addQuad(e),this}addQuad(e,t,n,a){t||(a=e.graph,n=e.object,t=e.predicate,e=e.subject),a=y(a);let o=this._graphs[a];o||(o=this._graphs[a]={subjects:{},predicates:{},objects:{}},Object.freeze(o)),e=this._termToNewNumericId(e),t=this._termToNewNumericId(t),n=this._termToNewNumericId(n);const d=this._addToIndex(o.subjects,e,t,n);return this._addToIndex(o.predicates,t,n,e),this._addToIndex(o.objects,n,e,t),this._size=null,d}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}delete(e){return this.removeQuad(e),this}has(e,t,n,a){return e&&e.subject&&({subject:e,predicate:t,object:n,graph:a}=e),!this.readQuads(e,t,n,a).next().done}import(e){return e.on("data",(e=>{this.addQuad(e)})),e}removeQuad(e,t,n,a){t||(a=e.graph,n=e.object,t=e.predicate,e=e.subject),a=y(a);const o=this._graphs;let d,r,i;if(!((e=e&&this._termToNumericId(e))&&(t=t&&this._termToNumericId(t))&&(n=n&&this._termToNumericId(n))&&(d=o[a])&&(r=d.subjects[e])&&(i=r[t])&&n in i))return!1;for(e in this._removeFromIndex(d.subjects,e,t,n),this._removeFromIndex(d.predicates,t,n,e),this._removeFromIndex(d.objects,n,e,t),null!==this._size&&this._size--,d.subjects)return!0;return delete o[a],!0}removeQuads(e){for(let t=0;t<e.length;t++)this.removeQuad(e[t])}remove(e){return e.on("data",(e=>{this.removeQuad(e)})),e}removeMatches(e,t,n,a){const o=new $e.Readable({objectMode:!0});return o._read=()=>{for(const d of this.readQuads(e,t,n,a))o.push(d);o.push(null)},this.remove(o)}deleteGraph(e){return this.removeMatches(null,null,null,e)}getQuads(e,t,n,a){return[...this.readQuads(e,t,n,a)]}*readQuads(e,t,n,a){a=a&&y(a);const o=this._getGraphs(a);let d,r,i,s;if(!(e&&!(r=this._termToNumericId(e))||t&&!(i=this._termToNumericId(t))||n&&!(s=this._termToNumericId(n))))for(const e in o)(d=o[e])&&(r?s?yield*this._findInIndex(d.objects,s,r,i,"object","subject","predicate",e):yield*this._findInIndex(d.subjects,r,i,null,"subject","predicate","object",e):i?yield*this._findInIndex(d.predicates,i,s,null,"predicate","object","subject",e):s?yield*this._findInIndex(d.objects,s,null,null,"object","subject","predicate",e):yield*this._findInIndex(d.subjects,null,null,null,"subject","predicate","object",e))}match(e,t,n,a){return new ve(this,e,t,n,a)}countQuads(e,t,n,a){a=a&&y(a);const o=this._getGraphs(a);let d,r,i,s,l=0;if(e&&!(r=this._termToNumericId(e))||t&&!(i=this._termToNumericId(t))||n&&!(s=this._termToNumericId(n)))return 0;for(const a in o)(d=o[a])&&(l+=e?n?this._countInIndex(d.objects,s,r,i):this._countInIndex(d.subjects,r,i,s):t?this._countInIndex(d.predicates,i,s,r):this._countInIndex(d.objects,s,r,i));return l}forEach(e,t,n,a,o){this.some((t=>(e(t),!1)),t,n,a,o)}every(e,t,n,a,o){let d=!1;const r=!this.some((t=>(d=!0,!e(t))),t,n,a,o);return d&&r}some(e,t,n,a,o){for(const d of this.readQuads(t,n,a,o))if(e(d))return!0;return!1}getSubjects(e,t,n){const a=[];return this.forSubjects((e=>{a.push(e)}),e,t,n),a}forSubjects(e,t,n,a){a=a&&y(a);const o=this._getGraphs(a);let d,r,i;if(e=this._uniqueEntities(e),!(t&&!(r=this._termToNumericId(t))||n&&!(i=this._termToNumericId(n))))for(a in o)(d=o[a])&&(r?i?this._loopBy2Keys(d.predicates,r,i,e):this._loopByKey1(d.subjects,r,e):i?this._loopByKey0(d.objects,i,e):this._loop(d.subjects,e))}getPredicates(e,t,n){const a=[];return this.forPredicates((e=>{a.push(e)}),e,t,n),a}forPredicates(e,t,n,a){a=a&&y(a);const o=this._getGraphs(a);let d,r,i;if(e=this._uniqueEntities(e),!(t&&!(r=this._termToNumericId(t))||n&&!(i=this._termToNumericId(n))))for(a in o)(d=o[a])&&(r?i?this._loopBy2Keys(d.objects,i,r,e):this._loopByKey0(d.subjects,r,e):i?this._loopByKey1(d.predicates,i,e):this._loop(d.predicates,e))}getObjects(e,t,n){const a=[];return this.forObjects((e=>{a.push(e)}),e,t,n),a}forObjects(e,t,n,a){a=a&&y(a);const o=this._getGraphs(a);let d,r,i;if(e=this._uniqueEntities(e),!(t&&!(r=this._termToNumericId(t))||n&&!(i=this._termToNumericId(n))))for(a in o)(d=o[a])&&(r?i?this._loopBy2Keys(d.subjects,r,i,e):this._loopByKey1(d.objects,r,e):i?this._loopByKey0(d.predicates,i,e):this._loop(d.objects,e))}getGraphs(e,t,n){const a=[];return this.forGraphs((e=>{a.push(e)}),e,t,n),a}forGraphs(e,t,n,a){for(const o in this._graphs)this.some((t=>(e(t.graph),!0)),t,n,a,o)}createBlankNode(e){let t,n;if(e)for(t=e=`_:${e}`,n=1;this._ids[t];)t=e+n++;else do{t="_:b"+this._blankNodeIndex++}while(this._ids[t]);return this._ids[t]=++this._id,this._entities[this._id]=t,this._factory.blankNode(t.substr(2))}extractLists({remove:e=!1,ignoreErrors:t=!1}={}){const n={},a=t?()=>!0:(e,t)=>{throw new Error(`${e.value} ${t}`)},o=this.getQuads(null,d.rdf.rest,d.rdf.nil,null),r=e?[...o]:[];return o.forEach((t=>{const o=[];let i,s,l=!1;const u=t.graph;let m=t.subject;for(;m&&!l;){const e=this.getQuads(null,null,m,null),t=this.getQuads(m,null,null,null);let n,c=null,p=null,h=null;for(let o=0;o<t.length&&!l;o++)n=t[o],n.graph.equals(u)?i?l=a(m,"has non-list arcs out"):n.predicate.value===d.rdf.first?c?l=a(m,"has multiple rdf:first arcs"):r.push(c=n):n.predicate.value===d.rdf.rest?p?l=a(m,"has multiple rdf:rest arcs"):r.push(p=n):e.length?l=a(m,"can't be subject and object"):(i=n,s="subject"):l=a(m,"not confined to single graph");for(let t=0;t<e.length&&!l;++t)n=e[t],i?l=a(m,"can't have coreferences"):n.predicate.value===d.rdf.rest?h?l=a(m,"has incoming rdf:rest arcs"):h=n:(i=n,s="object");c?o.unshift(c.object):l=a(m,"has no list head"),m=h&&h.subject}l?e=!1:i&&(n[i[s].value]=o)})),e&&this.removeQuads(r),n}*[Symbol.iterator](){yield*this.readQuads()}}class ve extends $e.Readable{constructor(e,t,n,a,o){super({objectMode:!0}),Object.assign(this,{n3Store:e,subject:t,predicate:n,object:a,graph:o})}get filtered(){if(!this._filtered){const{n3Store:e,graph:t,object:n,predicate:a,subject:o}=this,d=this._filtered=new be({factory:e._factory});for(const r of e.readQuads(o,a,n,t))d.addQuad(r)}return this._filtered}get size(){return this.filtered.size}_read(){for(const e of this)this.push(e);this.push(null)}add(e){return this.filtered.add(e)}delete(e){return this.filtered.delete(e)}has(e){return this.filtered.has(e)}match(e,t,n,a){return new ve(this.filtered,e,t,n,a)}*[Symbol.iterator](){yield*this._filtered||this.n3Store.readQuads(this.subject,this.predicate,this.object,this.graph)}}var we=n(9596),xe=n.n(we);const{xsd:_e}=d,Ce=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\([^])/g,qe={"\\":"\\","'":"'",'"':'"',n:"\n",r:"\r",t:"\t",f:"\f",b:"\b",_:"_","~":"~",".":".","-":"-","!":"!",$:"$","&":"&","(":"(",")":")","*":"*","+":"+",",":",",";":";","=":"=","/":"/","?":"?","#":"#","@":"@","%":"%"},Se=/[\x00-\x20<>\\"\{\}\|\^\`]/,Ee={_iri:!0,_unescapedIri:!0,_simpleQuotedString:!0,_langcode:!0,_blank:!0,_newline:!0,_comment:!0,_whitespace:!0,_endOfFile:!0},Ie=/$0^/;class Re{constructor(e){if(this._iri=/^<((?:[^ <>{}\\]|\\[uU])+)>[ \t]*/,this._unescapedIri=/^<([^\x00-\x20<>\\"\{\}\|\^\`]*)>[ \t]*/,this._simpleQuotedString=/^"([^"\\\r\n]*)"(?=[^"])/,this._simpleApostropheString=/^'([^'\\\r\n]*)'(?=[^'])/,this._langcode=/^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\-])/i,this._prefix=/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:(?=[#\s<])/,this._prefixed=/^((?:[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)?:((?:(?:[0-:A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])(?:(?:[\.\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~])*(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff]|%[0-9a-fA-F]{2}|\\[!#-\/;=?\-@_~]))?)?)(?:[ \t]+|(?=\.?[,;!\^\s#()\[\]\{\}"'<>]))/,this._variable=/^\?(?:(?:[A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:[\-0-:A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?=[.,;!\^\s#()\[\]\{\}"'<>])/,this._blank=/^_:((?:[0-9A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])(?:\.?[\-0-9A-Z_a-z\xb7\xc0-\xd6\xd8-\xf6\xf8-\u037d\u037f-\u1fff\u200c\u200d\u203f\u2040\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd]|[\ud800-\udb7f][\udc00-\udfff])*)(?:[ \t]+|(?=\.?[,;:\s#()\[\]\{\}"'<>]))/,this._number=/^[\-+]?(?:(\d+\.\d*|\.?\d+)[eE][\-+]?|\d*(\.)?)\d+(?=\.?[,;:\s#()\[\]\{\}"'<>])/,this._boolean=/^(?:true|false)(?=[.,;\s#()\[\]\{\}"'<>])/,this._keyword=/^@[a-z]+(?=[\s#<:])/i,this._sparqlKeyword=/^(?:PREFIX|BASE|GRAPH)(?=[\s#<])/i,this._shortPredicates=/^a(?=[\s#()\[\]\{\}"'<>])/,this._newline=/^[ \t]*(?:#[^\n\r]*)?(?:\r\n|\n|\r)[ \t]*/,this._comment=/#([^\n\r]*)/,this._whitespace=/^[ \t]+/,this._endOfFile=/^(?:#[^\n\r]*)?$/,e=e||{},this._lineMode=!!e.lineMode){this._n3Mode=!1;for(const e in this)!(e in Ee)&&this[e]instanceof RegExp&&(this[e]=Ie)}else this._n3Mode=!1!==e.n3;this._comments=!!e.comments,this._literalClosingPos=0}_tokenizeToEnd(e,t){let n=this._input,a=n.length;for(;;){let e,r;for(;e=this._newline.exec(n);)this._comments&&(r=this._comment.exec(e[0]))&&o("comment",r[1],"",this._line,e[0].length),n=n.substr(e[0].length,n.length),a=n.length,this._line++;if(!e&&(e=this._whitespace.exec(n))&&(n=n.substr(e[0].length,n.length)),this._endOfFile.test(n))return t&&(this._comments&&(r=this._comment.exec(n))&&o("comment",r[1],"",this._line,n.length),n=null,o("eof","","",this._line,0)),this._input=n;const i=this._line,s=n[0];let l="",u="",m="",c=null,p=0,h=!1;switch(s){case"^":if(n.length<3)break;if("^"!==n[1]){this._n3Mode&&(p=1,l="^");break}if(this._previousMarker="^^",n=n.substr(2),"<"!==n[0]){h=!0;break}case"<":if(c=this._unescapedIri.exec(n))l="IRI",u=c[1];else if(c=this._iri.exec(n)){if(u=this._unescape(c[1]),null===u||Se.test(u))return d(this);l="IRI"}else n.length>1&&"<"===n[1]?(l="<<",p=2):this._n3Mode&&n.length>1&&"="===n[1]&&(l="inverse",p=2,u=">");break;case">":n.length>1&&">"===n[1]&&(l=">>",p=2);break;case"_":((c=this._blank.exec(n))||t&&(c=this._blank.exec(`${n} `)))&&(l="blank",m="_",u=c[1]);break;case'"':if(c=this._simpleQuotedString.exec(n))u=c[1];else if(({value:u,matchLength:p}=this._parseLiteral(n)),null===u)return d(this);null===c&&0===p||(l="literal",this._literalClosingPos=0);break;case"'":if(!this._lineMode){if(c=this._simpleApostropheString.exec(n))u=c[1];else if(({value:u,matchLength:p}=this._parseLiteral(n)),null===u)return d(this);null===c&&0===p||(l="literal",this._literalClosingPos=0)}break;case"?":this._n3Mode&&(c=this._variable.exec(n))&&(l="var",u=c[0]);break;case"@":"literal"===this._previousMarker&&(c=this._langcode.exec(n))?(l="langcode",u=c[1]):(c=this._keyword.exec(n))&&(l=c[0]);break;case".":if(1===n.length?t:n[1]<"0"||n[1]>"9"){l=".",p=1;break}case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"+":case"-":(c=this._number.exec(n)||t&&(c=this._number.exec(`${n} `)))&&(l="literal",u=c[0],m="string"==typeof c[1]?_e.double:"string"==typeof c[2]?_e.decimal:_e.integer);break;case"B":case"b":case"p":case"P":case"G":case"g":(c=this._sparqlKeyword.exec(n))?l=c[0].toUpperCase():h=!0;break;case"f":case"t":(c=this._boolean.exec(n))?(l="literal",u=c[0],m=_e.boolean):h=!0;break;case"a":(c=this._shortPredicates.exec(n))?(l="abbreviation",u="a"):h=!0;break;case"=":this._n3Mode&&n.length>1&&(l="abbreviation",">"!==n[1]?(p=1,u="="):(p=2,u=">"));break;case"!":if(!this._n3Mode)break;case",":case";":case"[":case"]":case"(":case")":case"}":this._lineMode||(p=1,l=s);break;case"{":!this._lineMode&&n.length>=2&&("|"===n[1]?(l="{|",p=2):(l=s,p=1));break;case"|":n.length>=2&&"}"===n[1]&&(l="|}",p=2);break;default:h=!0}if(h&&("@prefix"!==this._previousMarker&&"PREFIX"!==this._previousMarker||!(c=this._prefix.exec(n))?((c=this._prefixed.exec(n))||t&&(c=this._prefixed.exec(`${n} `)))&&(l="prefixed",m=c[1]||"",u=this._unescape(c[2])):(l="prefix",u=c[1]||"")),"^^"===this._previousMarker)switch(l){case"prefixed":l="type";break;case"IRI":l="typeIRI";break;default:l=""}if(!l)return t||!/^'''|^"""/.test(n)&&/\n|\r/.test(n)?d(this):this._input=n;const f=p||c[0].length,N=o(l,u,m,i,f);this.previousToken=N,this._previousMarker=l,n=n.substr(f,n.length)}function o(t,o,d,r,i){const s=n?a-n.length:a,l={type:t,value:o,prefix:d,line:r,start:s,end:s+i};return e(null,l),l}function d(t){e(t._syntaxError(/^\S*/.exec(n)[0]))}}_unescape(e){let t=!1;const n=e.replace(Ce,((e,n,a,o)=>{if("string"==typeof n)return String.fromCharCode(Number.parseInt(n,16));if("string"==typeof a){let e=Number.parseInt(a,16);return e<=65535?String.fromCharCode(Number.parseInt(a,16)):String.fromCharCode(55296+((e-=65536)>>10),56320+(1023&e))}return o in qe?qe[o]:(t=!0,"")}));return t?null:n}_parseLiteral(e){if(e.length>=3){const t=e.match(/^(?:"""|"|'''|'|)/)[0],n=t.length;let a=Math.max(this._literalClosingPos,n);for(;(a=e.indexOf(t,a))>0;){let t=0;for(;"\\"===e[a-t-1];)t++;if(t%2==0){const t=e.substring(n,a),o=t.split(/\r\n|\r|\n/).length-1,d=a+n;if(1===n&&0!==o||3===n&&this._lineMode)break;return this._line+=o,{value:this._unescape(t),matchLength:d}}a++}this._literalClosingPos=e.length-n+1}return{value:"",matchLength:0}}_syntaxError(e){this._input=null;const t=new Error(`Unexpected "${e}" on line ${this._line}.`);return t.context={token:void 0,line:this._line,previousToken:this.previousToken},t}_readStartingBom(e){return e.startsWith("\ufeff")?e.substr(1):e}tokenize(e,t){if(this._line=1,"string"==typeof e){if(this._input=this._readStartingBom(e),"function"!=typeof t){const e=[];let t;if(this._tokenizeToEnd(((n,a)=>n?t=n:e.push(a)),!0),t)throw t;return e}xe()((()=>this._tokenizeToEnd(t,!0)))}else this._pendingBuffer=null,"function"==typeof e.setEncoding&&e.setEncoding("utf8"),e.on("data",(e=>{null!==this._input&&0!==e.length&&(this._pendingBuffer&&(e=Buffer.concat([this._pendingBuffer,e]),this._pendingBuffer=null),128&e[e.length-1]?this._pendingBuffer=e:(void 0===this._input?this._input=this._readStartingBom("string"==typeof e?e:e.toString()):this._input+=e,this._tokenizeToEnd(t,!1)))})),e.on("end",(()=>{"string"==typeof this._input&&this._tokenizeToEnd(t,!0)})),e.on("error",t)}}let je=0;class Le{constructor(e){this._contextStack=[],this._graph=null,e=e||{},this._setBase(e.baseIRI),e.factory&&Ae(this,e.factory);const t="string"==typeof e.format?e.format.match(/\w*$/)[0].toLowerCase():"",n=/turtle/.test(t),a=/trig/.test(t),o=/triple/.test(t),d=/quad/.test(t),r=this._n3Mode=/n3/.test(t),i=o||d;(this._supportsNamedGraphs=!(n||r))||(this._readPredicateOrNamedGraph=this._readPredicate),this._supportsQuads=!(n||a||o||r),this._supportsRDFStar=""===t||/star|\*$/.test(t),i&&(this._resolveRelativeIRI=e=>null),this._blankNodePrefix="string"!=typeof e.blankNodePrefix?"":e.blankNodePrefix.replace(/^(?!_:)/,"_:"),this._lexer=e.lexer||new Re({lineMode:i,n3:r}),this._explicitQuantifiers=!!e.explicitQuantifiers}static _resetBlankNodePrefix(){je=0}_setBase(e){if(e){const t=e.indexOf("#");t>=0&&(e=e.substr(0,t)),this._base=e,this._basePath=e.indexOf("/")<0?e:e.replace(/[^\/?]*(?:\?.*)?$/,""),e=e.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\/\/[^\/]*)?/i),this._baseRoot=e[0],this._baseScheme=e[1]}else this._base="",this._basePath=""}_saveContext(e,t,n,a,o){const d=this._n3Mode;this._contextStack.push({type:e,subject:n,predicate:a,object:o,graph:t,inverse:!!d&&this._inversePredicate,blankPrefix:d?this._prefixes._:"",quantified:d?this._quantified:null}),d&&(this._inversePredicate=!1,this._prefixes._=this._graph?`${this._graph.value}.`:".",this._quantified=Object.create(this._quantified))}_restoreContext(e,t){const n=this._contextStack.pop();if(!n||n.type!==e)return this._error(`Unexpected ${t.type}`,t);this._subject=n.subject,this._predicate=n.predicate,this._object=n.object,this._graph=n.graph,this._n3Mode&&(this._inversePredicate=n.inverse,this._prefixes._=n.blankPrefix,this._quantified=n.quantified)}_readInTopContext(e){switch(e.type){case"eof":return null!==this._graph?this._error("Unclosed graph",e):(delete this._prefixes._,this._callback(null,null,this._prefixes));case"PREFIX":this._sparqlStyle=!0;case"@prefix":return this._readPrefix;case"BASE":this._sparqlStyle=!0;case"@base":return this._readBaseIRI;case"{":if(this._supportsNamedGraphs)return this._graph="",this._subject=null,this._readSubject;case"GRAPH":if(this._supportsNamedGraphs)return this._readNamedGraphLabel;default:return this._readSubject(e)}}_readEntity(e,t){let n;switch(e.type){case"IRI":case"typeIRI":const t=this._resolveIRI(e.value);if(null===t)return this._error("Invalid IRI",e);n=this._namedNode(t);break;case"type":case"prefixed":const a=this._prefixes[e.prefix];if(void 0===a)return this._error(`Undefined prefix "${e.prefix}:"`,e);n=this._namedNode(a+e.value);break;case"blank":n=this._blankNode(this._prefixes[e.prefix]+e.value);break;case"var":n=this._variable(e.value.substr(1));break;default:return this._error(`Expected entity but got ${e.type}`,e)}return!t&&this._n3Mode&&n.id in this._quantified&&(n=this._quantified[n.id]),n}_readSubject(e){switch(this._predicate=null,e.type){case"[":return this._saveContext("blank",this._graph,this._subject=this._blankNode(),null,null),this._readBlankNodeHead;case"(":return this._saveContext("list",this._graph,this.RDF_NIL,null,null),this._subject=null,this._readListItem;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._graph=this._blankNode(),null,null),this._readSubject):this._error("Unexpected graph",e);case"}":return this._readPunctuation(e);case"@forSome":return this._n3Mode?(this._subject=null,this._predicate=this.N3_FORSOME,this._quantifier=this._blankNode,this._readQuantifierList):this._error('Unexpected "@forSome"',e);case"@forAll":return this._n3Mode?(this._subject=null,this._predicate=this.N3_FORALL,this._quantifier=this._variable,this._readQuantifierList):this._error('Unexpected "@forAll"',e);case"literal":if(!this._n3Mode)return this._error("Unexpected literal",e);if(0===e.prefix.length)return this._literalValue=e.value,this._completeSubjectLiteral;this._subject=this._literal(e.value,this._namedNode(e.prefix));break;case"<<":return this._supportsRDFStar?(this._saveContext("<<",this._graph,null,null,null),this._graph=null,this._readSubject):this._error("Unexpected RDF* syntax",e);default:if(void 0===(this._subject=this._readEntity(e)))return;if(this._n3Mode)return this._getPathReader(this._readPredicateOrNamedGraph)}return this._readPredicateOrNamedGraph}_readPredicate(e){const t=e.type;switch(t){case"inverse":this._inversePredicate=!0;case"abbreviation":this._predicate=this.ABBREVIATIONS[e.value];break;case".":case"]":case"}":return null===this._predicate?this._error(`Unexpected ${t}`,e):(this._subject=null,"]"===t?this._readBlankNodeTail(e):this._readPunctuation(e));case";":return null!==this._predicate?this._readPredicate:this._error("Expected predicate but got ;",e);case"[":if(this._n3Mode)return this._saveContext("blank",this._graph,this._subject,this._subject=this._blankNode(),null),this._readBlankNodeHead;case"blank":if(!this._n3Mode)return this._error("Disallowed blank node as predicate",e);default:if(void 0===(this._predicate=this._readEntity(e)))return}return this._readObject}_readObject(e){switch(e.type){case"literal":if(0===e.prefix.length)return this._literalValue=e.value,this._readDataTypeOrLang;this._object=this._literal(e.value,this._namedNode(e.prefix));break;case"[":return this._saveContext("blank",this._graph,this._subject,this._predicate,this._subject=this._blankNode()),this._readBlankNodeHead;case"(":return this._saveContext("list",this._graph,this._subject,this._predicate,this.RDF_NIL),this._subject=null,this._readListItem;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._subject,this._predicate,this._graph=this._blankNode()),this._readSubject):this._error("Unexpected graph",e);case"<<":return this._supportsRDFStar?(this._saveContext("<<",this._graph,this._subject,this._predicate,null),this._graph=null,this._readSubject):this._error("Unexpected RDF* syntax",e);default:if(void 0===(this._object=this._readEntity(e)))return;if(this._n3Mode)return this._getPathReader(this._getContextEndReader())}return this._getContextEndReader()}_readPredicateOrNamedGraph(e){return"{"===e.type?this._readGraph(e):this._readPredicate(e)}_readGraph(e){return"{"!==e.type?this._error(`Expected graph but got ${e.type}`,e):(this._graph=this._subject,this._subject=null,this._readSubject)}_readBlankNodeHead(e){return"]"===e.type?(this._subject=null,this._readBlankNodeTail(e)):(this._predicate=null,this._readPredicate(e))}_readBlankNodeTail(e){if("]"!==e.type)return this._readBlankNodePunctuation(e);null!==this._subject&&this._emit(this._subject,this._predicate,this._object,this._graph);const t=null===this._predicate;return this._restoreContext("blank",e),null!==this._object?this._getContextEndReader():null!==this._predicate?this._readObject:t?this._readPredicateOrNamedGraph:this._readPredicateAfterBlank}_readPredicateAfterBlank(e){switch(e.type){case".":case"}":return this._subject=null,this._readPunctuation(e);default:return this._readPredicate(e)}}_readListItem(e){let t=null,n=null,a=this._readListItem;const o=this._subject,d=this._contextStack,r=d[d.length-1];switch(e.type){case"[":this._saveContext("blank",this._graph,n=this._blankNode(),this.RDF_FIRST,this._subject=t=this._blankNode()),a=this._readBlankNodeHead;break;case"(":this._saveContext("list",this._graph,n=this._blankNode(),this.RDF_FIRST,this.RDF_NIL),this._subject=null;break;case")":if(this._restoreContext("list",e),0!==d.length&&"list"===d[d.length-1].type&&this._emit(this._subject,this._predicate,this._object,this._graph),null===this._predicate){if(a=this._readPredicate,this._subject===this.RDF_NIL)return a}else if(a=this._getContextEndReader(),this._object===this.RDF_NIL)return a;n=this.RDF_NIL;break;case"literal":0===e.prefix.length?(this._literalValue=e.value,a=this._readListItemDataTypeOrLang):(t=this._literal(e.value,this._namedNode(e.prefix)),a=this._getContextEndReader());break;case"{":return this._n3Mode?(this._saveContext("formula",this._graph,this._subject,this._predicate,this._graph=this._blankNode()),this._readSubject):this._error("Unexpected graph",e);default:if(void 0===(t=this._readEntity(e)))return}if(null===n&&(this._subject=n=this._blankNode()),null===o?null===r.predicate?r.subject=n:r.object=n:this._emit(o,this.RDF_REST,n,this._graph),null!==t){if(this._n3Mode&&("IRI"===e.type||"prefixed"===e.type))return this._saveContext("item",this._graph,n,this.RDF_FIRST,t),this._subject=t,this._predicate=null,this._getPathReader(this._readListItem);this._emit(n,this.RDF_FIRST,t,this._graph)}return a}_readDataTypeOrLang(e){return this._completeObjectLiteral(e,!1)}_readListItemDataTypeOrLang(e){return this._completeObjectLiteral(e,!0)}_completeLiteral(e){let t=this._literal(this._literalValue);switch(e.type){case"type":case"typeIRI":const n=this._readEntity(e);if(void 0===n)return;t=this._literal(this._literalValue,n),e=null;break;case"langcode":t=this._literal(this._literalValue,e.value),e=null}return{token:e,literal:t}}_completeSubjectLiteral(e){return this._subject=this._completeLiteral(e).literal,this._readPredicateOrNamedGraph}_completeObjectLiteral(e,t){const n=this._completeLiteral(e);if(n)return this._object=n.literal,t&&this._emit(this._subject,this.RDF_FIRST,this._object,this._graph),null===n.token?this._getContextEndReader():(this._readCallback=this._getContextEndReader(),this._readCallback(n.token))}_readFormulaTail(e){return"}"!==e.type?this._readPunctuation(e):(null!==this._subject&&this._emit(this._subject,this._predicate,this._object,this._graph),this._restoreContext("formula",e),null===this._object?this._readPredicate:this._getContextEndReader())}_readPunctuation(e){let t,n=this._graph;const a=this._subject,o=this._inversePredicate;switch(e.type){case"}":if(null===this._graph)return this._error("Unexpected graph closing",e);if(this._n3Mode)return this._readFormulaTail(e);this._graph=null;case".":this._subject=null,t=this._contextStack.length?this._readSubject:this._readInTopContext,o&&(this._inversePredicate=!1);break;case";":t=this._readPredicate;break;case",":t=this._readObject;break;case"{|":if(!this._supportsRDFStar)return this._error("Unexpected RDF* syntax",e);const d=this._predicate,r=this._object;this._subject=this._quad(a,d,r,this.DEFAULTGRAPH),t=this._readPredicate;break;case"|}":if("Quad"!==this._subject.termType)return this._error("Unexpected asserted triple closing",e);this._subject=null,t=this._readPunctuation;break;default:if(this._supportsQuads&&null===this._graph&&void 0!==(n=this._readEntity(e))){t=this._readQuadPunctuation;break}return this._error(`Expected punctuation to follow "${this._object.id}"`,e)}if(null!==a){const e=this._predicate,t=this._object;o?this._emit(t,e,a,n):this._emit(a,e,t,n)}return t}_readBlankNodePunctuation(e){let t;switch(e.type){case";":t=this._readPredicate;break;case",":t=this._readObject;break;default:return this._error(`Expected punctuation to follow "${this._object.id}"`,e)}return this._emit(this._subject,this._predicate,this._object,this._graph),t}_readQuadPunctuation(e){return"."!==e.type?this._error("Expected dot to follow quad",e):this._readInTopContext}_readPrefix(e){return"prefix"!==e.type?this._error("Expected prefix to follow @prefix",e):(this._prefix=e.value,this._readPrefixIRI)}_readPrefixIRI(e){if("IRI"!==e.type)return this._error(`Expected IRI to follow prefix "${this._prefix}:"`,e);const t=this._readEntity(e);return this._prefixes[this._prefix]=t.value,this._prefixCallback(this._prefix,t),this._readDeclarationPunctuation}_readBaseIRI(e){const t="IRI"===e.type&&this._resolveIRI(e.value);return t?(this._setBase(t),this._readDeclarationPunctuation):this._error("Expected valid IRI to follow base declaration",e)}_readNamedGraphLabel(e){switch(e.type){case"IRI":case"blank":case"prefixed":return this._readSubject(e),this._readGraph;case"[":return this._readNamedGraphBlankLabel;default:return this._error("Invalid graph label",e)}}_readNamedGraphBlankLabel(e){return"]"!==e.type?this._error("Invalid graph label",e):(this._subject=this._blankNode(),this._readGraph)}_readDeclarationPunctuation(e){return this._sparqlStyle?(this._sparqlStyle=!1,this._readInTopContext(e)):"."!==e.type?this._error("Expected declaration to end with a dot",e):this._readInTopContext}_readQuantifierList(e){let t;switch(e.type){case"IRI":case"prefixed":if(void 0!==(t=this._readEntity(e,!0)))break;default:return this._error(`Unexpected ${e.type}`,e)}return this._explicitQuantifiers?(null===this._subject?this._emit(this._graph||this.DEFAULTGRAPH,this._predicate,this._subject=this._blankNode(),this.QUANTIFIERS_GRAPH):this._emit(this._subject,this.RDF_REST,this._subject=this._blankNode(),this.QUANTIFIERS_GRAPH),this._emit(this._subject,this.RDF_FIRST,t,this.QUANTIFIERS_GRAPH)):this._quantified[t.id]=this._quantifier(this._blankNode().value),this._readQuantifierPunctuation}_readQuantifierPunctuation(e){return","===e.type?this._readQuantifierList:(this._explicitQuantifiers&&(this._emit(this._subject,this.RDF_REST,this.RDF_NIL,this.QUANTIFIERS_GRAPH),this._subject=null),this._readCallback=this._getContextEndReader(),this._readCallback(e))}_getPathReader(e){return this._afterPath=e,this._readPath}_readPath(e){switch(e.type){case"!":return this._readForwardPath;case"^":return this._readBackwardPath;default:const t=this._contextStack,n=t.length&&t[t.length-1];if(n&&"item"===n.type){const t=this._subject;this._restoreContext("item",e),this._emit(this._subject,this.RDF_FIRST,t,this._graph)}return this._afterPath(e)}}_readForwardPath(e){let t,n;const a=this._blankNode();if(void 0!==(n=this._readEntity(e)))return null===this._predicate?(t=this._subject,this._subject=a):(t=this._object,this._object=a),this._emit(t,n,a,this._graph),this._readPath}_readBackwardPath(e){const t=this._blankNode();let n,a;if(void 0!==(n=this._readEntity(e)))return null===this._predicate?(a=this._subject,this._subject=t):(a=this._object,this._object=t),this._emit(t,n,a,this._graph),this._readPath}_readRDFStarTailOrGraph(e){return">>"!==e.type?this._supportsQuads&&null===this._graph&&void 0!==(this._graph=this._readEntity(e))?this._readRDFStarTail:this._error(`Expected >> to follow "${this._object.id}"`,e):this._readRDFStarTail(e)}_readRDFStarTail(e){if(">>"!==e.type)return this._error(`Expected >> but got ${e.type}`,e);const t=this._quad(this._subject,this._predicate,this._object,this._graph||this.DEFAULTGRAPH);return this._restoreContext("<<",e),null===this._subject?(this._subject=t,this._readPredicate):(this._object=t,this._getContextEndReader())}_getContextEndReader(){const e=this._contextStack;if(!e.length)return this._readPunctuation;switch(e[e.length-1].type){case"blank":return this._readBlankNodeTail;case"list":return this._readListItem;case"formula":return this._readFormulaTail;case"<<":return this._readRDFStarTailOrGraph}}_emit(e,t,n,a){this._callback(null,this._quad(e,t,n,a||this.DEFAULTGRAPH))}_error(e,t){const n=new Error(`${e} on line ${t.line}.`);n.context={token:t,line:t.line,previousToken:this._lexer.previousToken},this._callback(n),this._callback=Te}_resolveIRI(e){return/^[a-z][a-z0-9+.-]*:/i.test(e)?e:this._resolveRelativeIRI(e)}_resolveRelativeIRI(e){if(!e.length)return this._base;switch(e[0]){case"#":return this._base+e;case"?":return this._base.replace(/(?:\?.*)?$/,e);case"/":return("/"===e[1]?this._baseScheme:this._baseRoot)+this._removeDotSegments(e);default:return/^[^/:]*:/.test(e)?null:this._removeDotSegments(this._basePath+e)}}_removeDotSegments(e){if(!/(^|\/)\.\.?($|[/#?])/.test(e))return e;const t=e.length;let n="",a=-1,o=-1,d=0,r="/";for(;a<t;){switch(r){case":":if(o<0&&"/"===e[++a]&&"/"===e[++a])for(;(o=a+1)<t&&"/"!==e[o];)a=o;break;case"?":case"#":a=t;break;case"/":if("."===e[a+1])switch(r=e[1+ ++a],r){case"/":n+=e.substring(d,a-1),d=a+1;break;case void 0:case"?":case"#":return n+e.substring(d,a)+e.substr(a+1);case".":if(r=e[1+ ++a],void 0===r||"/"===r||"?"===r||"#"===r){if(n+=e.substring(d,a-2),(d=n.lastIndexOf("/"))>=o&&(n=n.substr(0,d)),"/"!==r)return`${n}/${e.substr(a+1)}`;d=a+1}}}r=e[++a]}return n+e.substring(d)}parse(e,t,n){if(this._readCallback=this._readInTopContext,this._sparqlStyle=!1,this._prefixes=Object.create(null),this._prefixes._=this._blankNodePrefix?this._blankNodePrefix.substr(2):`b${je++}_`,this._prefixCallback=n||Te,this._inversePredicate=!1,this._quantified=Object.create(null),!t){const t=[];let n;if(this._callback=(e,a)=>{e?n=e:a&&t.push(a)},this._lexer.tokenize(e).every((e=>this._readCallback=this._readCallback(e))),n)throw n;return t}this._callback=t,this._lexer.tokenize(e,((e,t)=>{null!==e?(this._callback(e),this._callback=Te):this._readCallback&&(this._readCallback=this._readCallback(t))}))}}function Te(){}function Ae(e,t){const n=t.namedNode;e._namedNode=n,e._blankNode=t.blankNode,e._literal=t.literal,e._variable=t.variable,e._quad=t.quad,e.DEFAULTGRAPH=t.defaultGraph(),e.RDF_FIRST=n(d.rdf.first),e.RDF_REST=n(d.rdf.rest),e.RDF_NIL=n(d.rdf.nil),e.N3_FORALL=n(d.r.forAll),e.N3_FORSOME=n(d.r.forSome),e.ABBREVIATIONS={a:n(d.rdf.type),"=":n(d.owl.sameAs),">":n(d.log.implies)},e.QUANTIFIERS_GRAPH=n("urn:n3:quantifiers")}Ae(Le.prototype,m);var Pe=n(4841),Oe=function(e,t,n,a){return new(n||(n=Promise))((function(o,d){function r(e){try{s(a.next(e))}catch(e){d(e)}}function i(e){try{s(a.throw(e))}catch(e){d(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,i)}s((a=a.apply(e,t||[])).next())}))};const ke={},De={};class Me{constructor(e){this.loadedOwlImports=[],this.loadedClasses=[],this.config=e}loadGraphs(){return Oe(this,void 0,void 0,(function*(){this.loadedOwlImports=[],this.loadedClasses=[];const e=new be,t=new be;this.config.prefixes={},yield Promise.all([this.importRDF(this.config.attributes.shapes?this.config.attributes.shapes:this.config.attributes.shapesUrl?this.fetchRDF(this.config.attributes.shapesUrl):"",e,S),this.importRDF(this.config.attributes.values?this.config.attributes.values:this.config.attributes.valuesUrl?this.fetchRDF(this.config.attributes.valuesUrl):"",t,void 0,new Le({blankNodePrefix:""}))]),this.config.shapesGraph=e,this.config.dataGraph=t}))}importRDF(e,t,n,a){return Oe(this,void 0,void 0,(function*(){const o=a||new Le,d=e=>Oe(this,void 0,void 0,(function*(){const d=[];yield new Promise(((r,i)=>{o.parse(e,((e,o,s)=>{if(e)return i(e);if(o){if(t.add(new $(o.subject,o.predicate,o.object,n)),null===this.config.attributes.ignoreOwlImports&&E.equals(o.predicate)){const e=this.toURL(o.object.value);e&&this.loadedOwlImports.indexOf(e)<0&&(this.loadedOwlImports.push(e),d.push(this.importRDF(this.fetchRDF(e),t,n,a)))}if(this.config.classInstanceProvider&&A.equals(o.predicate)){const e=o.object.value;if(this.loadedClasses.indexOf(e)<0){let o;e in De?o=De[e]:(o=this.config.classInstanceProvider(e),De[e]=o),this.loadedClasses.push(e),d.push(this.importRDF(o,t,n,a))}}}else s&&this.config.registerPrefixes(s),r(null)}))}));try{yield Promise.all(d)}catch(e){console.warn(e)}}));if(e instanceof Promise&&(e=yield e),e){try{e=yield(0,Pe.toRDF)(JSON.parse(e),{format:"application/n-quads"})}catch(e){}yield d(e)}}))}fetchRDF(e){return Oe(this,void 0,void 0,(function*(){if(e in ke)return ke[e];const t=fetch(e,{headers:{Accept:"text/turtle, application/trig, application/n-triples, application/n-quads, text/n3, application/ld+json"}}).then((e=>e.text()));return ke[e]=t,t}))}toURL(e){if(F(e))return e;if(this.config.prefixes){const t=e.split(":");if(2===t.length){const n=this.config.prefixes[t[0]];if(n&&F(e=e.replace(`${t[0]}:`,n)))return e}}return null}}class Be{constructor(){this.shapes=null,this.shapesUrl=null,this.shapeSubject=null,this.values=null,this.valuesUrl=null,this.valueSubject=null,this.valuesNamespace="",this.view=null,this.language=navigator.language,this.loading="Loading…",this.ignoreOwlImports=null,this.collapse=null,this.submitButton=null}}class Fe{constructor(e,t){this.attributes=new Be,this.loader=new Me(this),this.prefixes={},this.editMode=!0,this.dataGraph=new be,this.lists={},this.groups=[],this._shapesGraph=new be,this.theme=e,this.form=t}updateAttributes(e){const t=new Be;Object.keys(t).forEach((n=>{const a=e.dataset[n];void 0!==a&&(t[n]=a)})),this.editMode=null===t.view,this.attributes=t}static dataAttributes(){const e=new Be;return Object.keys(e).map((e=>"data-"+e.replace(/[A-Z]/g,(e=>"-"+e.toLowerCase()))))}get shapesGraph(){return this._shapesGraph}set shapesGraph(e){this._shapesGraph=e,this.lists=e.extractLists(),this.groups=[],e.getQuads(null,I,`${v}PropertyGroup`,S).forEach((e=>{this.groups.push(e.subject.value)}))}registerPrefixes(e){for(const t in e)t&&(this.prefixes[t]=e[t])}}const Ve=e=>{const t=e.namespace("http://www.w3.org/2001/XMLSchema#"),n=e.namespace("http://www.w3.org/1999/02/22-rdf-syntax-ns#");return{first:n.first,nil:n.nil,rest:n.rest,langString:n.langString,xsd:t}};function Qe(e,t){return null==e?t:Array.isArray(e)?e:"string"!=typeof e&&e[Symbol.iterator]?[...e]:[e]}class Ue{constructor(e,{bind:t=!1}={}){this._factories=e.slice();for(const e of this._factories){"function"==typeof e.prototype.init&&e.prototype.init.call(this);for(const n of e.exports||[])this[n]=t?e.prototype[n].bind(this):e.prototype[n]}}clone(){const e=new Ue(this._factories);for(const t of e._factories)"function"==typeof t.prototype.clone&&t.prototype.clone.call(e,this);return e}}const Ge=Ue;class Je{constructor(e){this.value=e}equals(e){return!!e&&e.termType===this.termType&&e.value===this.value}}Je.prototype.termType="BlankNode";const He=Je;class ze{equals(e){return!!e&&e.termType===this.termType}}ze.prototype.termType="DefaultGraph",ze.prototype.value="";const We=ze,Ke=function(e,t){if(!t)return null;if("BlankNode"===t.termType)return e.blankNode(t.value);if("DefaultGraph"===t.termType)return e.defaultGraph();if("Literal"===t.termType)return e.literal(t.value,t.language||e.namedNode(t.datatype.value));if("NamedNode"===t.termType)return e.namedNode(t.value);if("Quad"===t.termType){const n=e.fromTerm(t.subject),a=e.fromTerm(t.predicate),o=e.fromTerm(t.object),d=e.fromTerm(t.graph);return e.quad(n,a,o,d)}if("Variable"===t.termType)return e.variable(t.value);throw new Error(`unknown termType ${t.termType}`)};class Xe{constructor(e,t,n){this.value=e,this.language=t,this.datatype=n}equals(e){return!!e&&e.termType===this.termType&&e.value===this.value&&e.language===this.language&&e.datatype.equals(this.datatype)}}Xe.prototype.termType="Literal";const Ye=Xe;class Ze{constructor(e){this.value=e}equals(e){return!!e&&e.termType===this.termType&&e.value===this.value}}Ze.prototype.termType="NamedNode";const et=Ze;class tt{constructor(e,t,n,a){this.subject=e,this.predicate=t,this.object=n,this.graph=a}equals(e){return!!e&&("Quad"===e.termType||!e.termType)&&e.subject.equals(this.subject)&&e.predicate.equals(this.predicate)&&e.object.equals(this.object)&&e.graph.equals(this.graph)}}tt.prototype.termType="Quad",tt.prototype.value="";const nt=tt;class at{constructor(e){this.value=e}equals(e){return!!e&&e.termType===this.termType&&e.value===this.value}}at.prototype.termType="Variable";const ot=at,dt=new et("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),rt=new et("http://www.w3.org/2001/XMLSchema#string");class it{constructor(){this.init()}init(){this._data={blankNodeCounter:0,defaultGraph:new We}}namedNode(e){return new et(e)}blankNode(e){return e=e||"b"+ ++this._data.blankNodeCounter,new He(e)}literal(e,t){return"string"==typeof t?new Ye(e,t,dt):new Ye(e,"",t||rt)}variable(e){return new ot(e)}defaultGraph(){return this._data.defaultGraph}quad(e,t,n,a=this.defaultGraph()){return new nt(e,t,n,a)}fromTerm(e){return Ke(this,e)}fromQuad(e){return Ke(this,e)}}it.exports=["blankNode","defaultGraph","fromQuad","fromTerm","literal","namedNode","quad","variable"];const st=it,lt=new st,ut={apply:(e,t,n)=>e(n[0]),get:(e,t)=>e(t)},mt=function(e,{factory:t=lt}={}){const n=(n="")=>t.namedNode(`${e}${n.raw||n}`);return"undefined"==typeof Proxy?n:new Proxy(n,ut)};class ct{namespace(e){return mt(e,{factory:this})}}ct.exports=["namespace"];const pt=ct,ht=new Ge([pt,st]),{xsd:ft}=Ve(ht);function Nt(e,t){if("string"!=typeof e)throw new Error("Named node must be an IRI string");return t.namedNode(e)}function gt(e,t="Literal",n,a){if(e&&"object"==typeof e&&e.termType)return e;if(e&&"URL"===e.constructor.name)return Nt(e.toString(),a);if("BlankNode"===t)return function(e,t){if(e&&"string"!=typeof e)throw new Error("Blank node identifier must be a string");return t.blankNode(e)}(e,a);if(null!=e){if("Literal"===t)return function(e,t,n){if("string"==typeof e)return(t=t&&(t.value||t.toString()))&&-1!==t.indexOf(":")&&(t=n.namedNode(t)),n.literal(e.toString(),t);const a=function(e,t=ht){return function(e,t=ht){return"boolean"!=typeof e?null:t.literal(e.toString(),ft("boolean"))}(e,t)||function(e,t=ht){return"number"!=typeof e?null:Number.isInteger(e)?t.literal(e.toString(10),ft("integer")):t.literal(e.toString(10),ft("double"))}(e,t)||function(e,t=ht){return"string"!=typeof e?null:t.literal(e)}(e,t)}(e,n);if(!a)throw new Error("The value cannot be converted to a literal node");return a}(e,n,a);if("NamedNode"===t)return Nt(e,a);throw new Error("unknown type")}}const yt=Ve(ht);function $t(e,t){const n="Literal"!==t.termType,a=yt.langString.equals(t.datatype)||yt.xsd.string.equals(t.datatype);if(n||!a)return e;const o=t.language.toLowerCase();return e.has(o)?e.get(o).push(t):e.set(o,[t]),e}class bt{constructor({dataset:e,graph:t,value:n,factory:a,namespace:o}){this.dataset=e,this.graph=t,this.factory=a,this.namespace=o,this.term=gt(n,void 0,void 0,a)}clone({dataset:e=this.dataset,graph:t=this.graph,value:n,factory:a=this.factory,namespace:o=this.namespace}){return new bt({dataset:e,graph:t,value:n,factory:a,namespace:o})}has(e,t){return this.matchProperty(Qe(this.term),e,t,Qe(this.graph),"subject").map((e=>this.clone({value:e})))}in(e){return this.matchProperty(null,e,Qe(this.term),Qe(this.graph),"subject").map((e=>this.clone({value:e})))}out(e,{language:t}={}){let n=this.matchProperty(Qe(this.term),e,null,Qe(this.graph),"object");return void 0!==t&&(n=function(e,{language:t}){const n="string"==typeof t?[t]:t,a=function(e){const t=e.reduce($t,new Map),n=[...t.entries()];return e=>{const a=e.toLowerCase();if("*"===a)return n[0]&&n[0][1];const o=t.get(a);if(o)return o;const d=n.find((([e])=>e.startsWith(a)));return d&&d[1]}}(e);return n.map(a).find(Boolean)||[]}(n,{language:t})),n.map((e=>this.clone({value:e})))}addIn(e,t){const n=[];return this.term&&t.forEach((t=>{e.forEach((e=>{this.dataset.add(this.factory.quad(t,e,this.term,this.graph))})),n.push(this.clone({value:t}))})),n}addOut(e,t){const n=[];return this.term&&t.forEach((t=>{e.forEach((e=>{this.dataset.add(this.factory.quad(this.term,e,t,this.graph))})),n.push(this.clone({value:t}))})),n}addList(e,t){this.term&&e.forEach((e=>{const n=t.map((()=>this.factory.blankNode()));this.dataset.add(this.factory.quad(this.term,e,n[0]||this.namespace.nil,this.graph));for(let e=0;e<n.length;e++)this.dataset.add(this.factory.quad(n[e],this.namespace.first,t[e],this.graph)),this.dataset.add(this.factory.quad(n[e],this.namespace.rest,n[e+1]||this.namespace.nil,this.graph))}))}deleteIn(e,t){this.deleteMatch(t,e,Qe(this.term),Qe(this.graph))}deleteOut(e,t){this.deleteMatch(Qe(this.term),e,t,Qe(this.graph))}deleteList(e){e.forEach((e=>{for(const t of this.dataset.match(this.term,e))this.deleteItems(t)}))}deleteItems(e){let t=[e];for(;!t[t.length-1].object.equals(this.namespace.nil);){const e=t[t.length-1].object;t=t.concat([...this.dataset.match(e)])}t.forEach((e=>{this.dataset.delete(e)}))}match(e,t,n,a){if(!(e||t||n||a))return[...this.dataset];e=e||[null],t=t||[null],n=n||[null],a=a||[null];const o=[];for(const d of a)for(const a of e)for(const e of t)for(const t of n)for(const n of this.dataset.match(a,e,t,d))o.push(n);return o}matchProperty(e,t,n,a,o){return this.match(e,t,n,a).map((e=>e[o]))}deleteMatch(e,t,n,a){this.match(e,t,n,a).forEach((e=>{this.dataset.delete(e)}))}}class vt{constructor({dataset:e,graph:t,term:n,value:a,factory:o,_context:d}){if(this.factory=o,this.namespace=Ve(o),d)return void(this._context=d);const r=n&&Qe(n)||a&&Qe(a)||[null];this._context=r.map((n=>new bt({dataset:e,graph:t,value:n,factory:this.factory,namespace:this.namespace})))}get term(){const e=this.terms;if(1===e.length)return e[0]}get terms(){return this._context.map((e=>e.term)).filter(Boolean)}get value(){const e=this.term;return e&&e.value}get values(){return this.terms.map((e=>e.value))}get dataset(){const e=this.datasets;if(1===e.length)return e[0]}get datasets(){return this._context.map((e=>e.dataset)).filter(Boolean)}any(){return vt.fromContext(this._context.map((e=>e.clone({}))),this)}isList(){return!(!this.term||!this.term.equals(this.namespace.nil)&&!this.out(this.namespace.first).term)}list(){if(this.terms.length>1)throw new Error("iterator over multiple terms is not supported");if(this.term){if("NamedNode"!==this.term.termType&&"BlankNode"!==this.term.termType)return null;if(!this.term.equals(this.namespace.nil)&&!this.out(this.namespace.first).term)return null}let e=this;return{[Symbol.iterator]:()=>({next:()=>{if(!e.term||e.term.equals(this.namespace.nil))return{done:!0};const t=e.out(this.namespace.first);if(t.terms.length>1)throw new Error(`Invalid list: multiple values for rdf:first on ${e.value}`);const n=e.out(this.namespace.rest);if(n.terms.length>1)throw new Error(`Invalid list: multiple values for rdf:rest on ${e.value}`);return e=n,{done:!1,value:t}}})}}toArray(){return this._context.map((e=>vt.fromContext(e,this))).filter((e=>e.terms.some(Boolean)))}filter(e){const t=this._context.map((e=>vt.fromContext(e,this)));return vt.fromContext(this._context.filter(((n,a)=>e(vt.fromContext(n,this),a,t))),this)}forEach(e){return this.toArray().forEach(e),this}map(e){return this.toArray().map(e)}toString(){return this.values.join()}node(e,{type:t,datatype:n,language:a}={}){const o=(e=this._toTermArray(e,t,n||a)||[null]).reduce(((e,t)=>e.concat(this._context.reduce(((e,n)=>e.concat([n.clone({value:t})])),[]))),[]);return vt.fromContext(o,{factory:this.factory})}blankNode(e){return this.node(e,{type:"BlankNode"})}literal(e,t){return this.node(e,{type:"Literal",datatype:t})}namedNode(e){return this.node(e,{type:"NamedNode"})}in(e){e=this._toTermArray(e);const t=this._context.reduce(((t,n)=>t.concat(n.in(e))),[]);return vt.fromContext(t,this)}out(e,t={}){e=this._toTermArray(e);const n=this._context.reduce(((n,a)=>n.concat(a.out(e,t))),[]);return vt.fromContext(n,this)}has(e,t){e=this._toTermArray(e),t=this._toTermArray(t);const n=this._context.reduce(((n,a)=>n.concat(a.has(e,t))),[]);return vt.fromContext(n,this)}addIn(e,t,n){if(!e)throw new Error("predicate parameter is required");"function"==typeof t&&(n=t,t=null),e=this._toTermArray(e),t=this._toTermArray(t)||[this.factory.blankNode()];const a=this._context.map((n=>n.addIn(e,t)));return n&&vt.fromContext(a,this).forEach(n),this}addOut(e,t,n){if(!e)throw new Error("predicate parameter is required");"function"==typeof t&&(n=t,t=null),e=this._toTermArray(e),t=this._toTermArray(t)||[this.factory.blankNode()];const a=this._context.map((n=>n.addOut(e,t)));return n&&vt.fromContext(a,this).forEach(n),this}addList(e,t){if(!e||!t)throw new Error("predicate and items parameter is required");return e=this._toTermArray(e),t=this._toTermArray(t),this._context.forEach((n=>n.addList(e,t))),this}deleteIn(e,t){return e=this._toTermArray(e),t=this._toTermArray(t),this._context.forEach((n=>n.deleteIn(e,t))),this}deleteOut(e,t){return e=this._toTermArray(e),t=this._toTermArray(t),this._context.forEach((n=>n.deleteOut(e,t))),this}deleteList(e){if(!e)throw new Error("predicate parameter is required");return e=this._toTermArray(e),this._context.forEach((t=>t.deleteList(e))),this}_toTermArray(e,t,n){return function(e,t,n,a){return null!=e||t?(Qe(e)||[void 0]).reduce(((e,o)=>"object"==typeof o&&o.terms?e.concat(o.terms):(e.push(gt(o,t,n,a)),e)),[]):e}(e,t,n,this.factory)}static fromContext(e,{factory:t}){return new vt({_context:Qe(e),factory:t})}}function wt({dataset:e,graph:t,term:n,value:a,factory:o=ht,_context:d}){return new vt({dataset:e,graph:t,term:n,value:a,factory:o,_context:d})}class xt{constructor(e,{bind:t=!1}={}){this._factories=e.slice();for(const e of this._factories){"function"==typeof e.prototype.init&&e.prototype.init.call(this);for(const n of e.exports||[])this[n]=t?e.prototype[n].bind(this):e.prototype[n]}}clone(){const e=new xt(this._factories);for(const t of e._factories)"function"==typeof t.prototype.clone&&t.prototype.clone.call(e,this);return e}}const _t=xt;function Ct(e){return"string"==typeof e||e instanceof String}function qt(e){if("string"==typeof e)return e;if(!e)return"";if(void 0!==e.id&&"Quad"!==e.termType)return e.id;let t,n,a,o;switch(e.termType){case"NamedNode":return e.value;case"BlankNode":return`_:${e.value}`;case"Variable":return`?${e.value}`;case"DefaultGraph":return"";case"Literal":return e.language?`"${e.value}"@${e.language}`:`"${e.value}"${e.datatype&&"http://www.w3.org/2001/XMLSchema#string"!==e.datatype.value?`^^${e.datatype.value}`:""}`;case"Quad":return t=Et(qt(e.subject)),n=Et(qt(e.predicate)),a=Et(qt(e.object)),o="DefaultGraph"===e.graph.termType?"":` ${qt(e.graph)}`,`<<${t} ${n} ${a}${o}>>`;default:throw new Error(`Unexpected termType: ${e.termType}`)}}const St=/^"(.*".*)(?="[^"]*$)/;function Et(e){return e.replace(St,((e,t)=>`"${t.replace(/"/g,'""')}`))}class It{constructor(e){if(this._size=0,this._graphs=Object.create(null),this._id=0,this._ids=Object.create(null),this._ids["><"]=0,this._entities=Object.create(null),this._quads=new Map,e)for(const t of e)this.add(t)}get size(){let e=this._size;if(null!==e)return e;e=0;const t=this._graphs;let n,a;for(const o in t)for(const d in n=t[o].subjects)for(const t in a=n[d])e+=Object.keys(a[t]).length;return this._size=e,this._size}add(e){let t=qt(e.subject),n=qt(e.predicate),a=qt(e.object);const o=qt(e.graph);let d=this._graphs[o];d||(d=this._graphs[o]={subjects:{},predicates:{},objects:{}},Object.freeze(d));const r=this._ids,i=this._entities;return t=r[t]||(r[i[++this._id]=t]=this._id),n=r[n]||(r[i[++this._id]=n]=this._id),a=r[a]||(r[i[++this._id]=a]=this._id),this._addToIndex(d.subjects,t,n,a),this._addToIndex(d.predicates,n,a,t),this._addToIndex(d.objects,a,t,n),this._setQuad(t,n,a,o,e),this._size=null,this}delete(e){let t=qt(e.subject),n=qt(e.predicate),a=qt(e.object);const o=qt(e.graph),d=this._ids,r=this._graphs;let i,s,l;if(!((t=d[t])&&(n=d[n])&&(a=d[a])&&(i=r[o])&&(s=i.subjects[t])&&(l=s[n])&&a in l))return this;for(t in this._removeFromIndex(i.subjects,t,n,a),this._removeFromIndex(i.predicates,n,a,t),this._removeFromIndex(i.objects,a,t,n),null!==this._size&&this._size--,this._deleteQuad(t,n,a,o),i.subjects)return this;return delete r[o],this}has(e){const t=qt(e.subject),n=qt(e.predicate),a=qt(e.object),o=qt(e.graph),d=this._graphs[o];if(!d)return!1;const r=this._ids;let i,s,l;return!(Ct(t)&&!(i=r[t])||Ct(n)&&!(s=r[n])||Ct(a)&&!(l=r[a]))&&1===this._countInIndex(d.objects,l,i,s)}match(e,t,n,a){return this._createDataset(this._match(e,t,n,a))}[Symbol.iterator](){return this._match()[Symbol.iterator]()}_addToIndex(e,t,n,a){const o=e[t]||(e[t]={}),d=o[n]||(o[n]={}),r=a in d;return r||(d[a]=null),!r}_removeFromIndex(e,t,n,a){const o=e[t],d=o[n];delete d[a];for(const e in d)return;delete o[n];for(const e in o)return;delete e[t]}_findInIndex(e,t,n,a,o,d,r,i,s,l){let u,m,c;t&&((u=e,e={})[t]=u[t]);for(const t in e)if(m=e[t],m){n&&((u=m,m={})[n]=u[n]);for(const e in m)if(c=m[e],c){const n=a?a in c?[a]:[]:Object.keys(c);for(let a=0;a<n.length;a++){const u={[o]:t,[d]:e,[r]:n[a]},m=this._getQuad(u.subject,u.predicate,u.object,i);if(l)l.push(m);else if(s(m))return!0}}}return l}_countInIndex(e,t,n,a){let o,d,r,i=0;t&&((o=e,e={})[t]=o[t]);for(const t in e)if(d=e[t],d){n&&((o=d,d={})[n]=o[n]);for(const e in d)r=d[e],r&&(a?a in r&&i++:i+=Object.keys(r).length)}return i}_getGraphs(e){return Ct(e)?{[e]:this._graphs[e]}:this._graphs}_match(e,t,n,a){e=e&&qt(e),t=t&&qt(t),n=n&&qt(n),a=a&&qt(a);const o=[],d=this._getGraphs(a),r=this._ids;let i,s,l,u;if(Ct(e)&&!(s=r[e])||Ct(t)&&!(l=r[t])||Ct(n)&&!(u=r[n]))return o;for(const e in d)i=d[e],i&&(s?u?this._findInIndex(i.objects,u,s,l,"object","subject","predicate",e,null,o):this._findInIndex(i.subjects,s,l,null,"subject","predicate","object",e,null,o):l?this._findInIndex(i.predicates,l,u,null,"predicate","object","subject",e,null,o):u?this._findInIndex(i.objects,u,null,null,"object","subject","predicate",e,null,o):this._findInIndex(i.subjects,null,null,null,"subject","predicate","object",e,null,o));return o}_getQuad(e,t,n,a){return this._quads.get(this._toId(e,t,n,a))}_setQuad(e,t,n,a,o){this._quads.set(this._toId(e,t,n,a),o)}_deleteQuad(e,t,n,a){this._quads.delete(this._toId(e,t,n,a))}_createDataset(e){return new this.constructor(e)}_toId(e,t,n,a){return`${e}:${t}:${n}:${a}`}}const Rt=It;class jt{dataset(e){return new Rt(e)}}jt.exports=["dataset"];const Lt=new _t([st,jt,pt]);function Tt(e){return{sh:mt("http://www.w3.org/ns/shacl#",{factory:e}),xsd:mt("http://www.w3.org/2001/XMLSchema#",{factory:e}),rdf:mt("http://www.w3.org/1999/02/22-rdf-syntax-ns#",{factory:e}),rdfs:mt("http://www.w3.org/2000/01/rdf-schema#",{factory:e})}}const At=Tt();var Pt=n(5250);function Ot(e){try{return Pt(e)}catch(e){return null}}class kt{constructor(e){if(this.index=new Map,e)for(const t of e)this.add(t)}get size(){return this.index.size}add(e){const t=Pt(e);return this.index.has(t)||this.index.set(t,e),this}clear(){this.index.clear()}delete(e){return!!e&&this.index.delete(Ot(e))}entries(){return this.values().entries()}forEach(e,t){return this.values().forEach(e,t)}has(e){return!!e&&this.index.has(Ot(e))}values(){return new Set(this.index.values())}keys(){return this.values()}[Symbol.iterator](){return this.values()[Symbol.iterator]()}}const Dt=kt,Mt=class extends Dt{addAll(e){for(const t of e)this.add(t)}},Bt="undefined"!=typeof window?window:global,Ft=class{constructor(e,t,n){this.context=e,this.funcName=t,this.func=n}execute(e,t,n){return this.func.apply(Bt,[this.context,e,t,n])}};mt("http://www.w3.org/ns/auth/acl#"),mt("https://www.w3.org/ns/activitystreams#"),mt("http://purl.org/ontology/bibo/"),mt("http://creativecommons.org/ns#"),mt("http://www.w3.org/ns/auth/cert#"),mt("http://www.w3.org/2011/content#"),mt("http://qudt.org/vocab/constant/"),mt("http://www.cidoc-crm.org/cidoc-crm/");const Vt=mt("http://www.w3.org/ns/csvw#"),Qt=(mt("http://commontag.org/ns#"),mt("http://datashapes.org/sparql#"),mt("http://datashapes.org/dash#"),mt("http://dbpedia.org/ontology/"),mt("http://purl.org/dc/elements/1.1/"),mt("http://purl.org/dc/dcam/"),mt("http://www.w3.org/ns/dcat#"),mt("http://purl.org/dc/dcmitype/"),mt("http://purl.org/dc/terms/"),mt("http://www.ics.forth.gr/isl/CRMdig/"),mt("http://qudt.org/vocab/discipline/"),mt("http://usefulinc.com/ns/doap#"),mt("http://www.w3.org/ns/dpv#"),mt("http://www.w3.org/ns/dqv#"),mt("http://www.linkedmodel.org/schema/dtype#"),mt("http://www.w3.org/ns/duv#"),mt("http://www.w3.org/ns/earl#"),mt("http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#"),mt("http://www.w3.org/2003/12/exif/ns#"),mt("http://xmlns.com/foaf/0.1/"),mt("http://purl.org/vocab/frbr/core#"),mt("http://www.opengis.net/ont/geosparql#"),mt("http://www.opengis.net/def/function/geosparql/"),mt("http://www.opengis.net/def/rule/geosparql/"),mt("http://www.opengis.net/ont/gml#"),mt("http://www.geonames.org/ontology#"),mt("http://purl.org/goodrelations/v1#"),mt("http://www.w3.org/2003/g/data-view#"),mt("https://gs1.org/voc/"),mt("http://vocab.gtfs.org/terms#"),mt("http://www.w3.org/2011/http#"),mt("http://www.w3.org/ns/hydra/core#"),mt("http://www.w3.org/2002/12/cal/icaltzd#"),mt("https://linked.art/ns/terms/"),mt("http://www.w3.org/ns/ldp#"),mt("http://www.w3.org/2000/10/swap/list#"),mt("http://www.w3.org/ns/locn#"),mt("http://www.w3.org/2000/10/swap/log#"),mt("http://lexvo.org/ontology#"),mt("http://w3id.org/nfdi4ing/metadata4ing#"),mt("http://www.w3.org/ns/ma-ont#"),mt("http://www.loc.gov/mads/rdf/v1#"),mt("http://www.w3.org/2000/10/swap/math#"),mt("http://www.w3.org/ns/oa#"),mt("http://ogp.me/ns#"),mt("http://www.w3.org/ns/solid/oidc#"),mt("http://www.w3.org/ns/org#"),mt("http://www.w3.org/2002/07/owl#"),mt("http://www.w3.org/ns/pim/space#"),mt("http://qudt.org/vocab/prefix/"),mt("http://www.w3.org/ns/prov#"),mt("http://purl.org/linked-data/cube#"),mt("http://qudt.org/vocab/dimensionvector/"),mt("http://qudt.org/vocab/quantitykind/"),mt("http://qudt.org/schema/qudt/"),mt("http://rdaregistry.info/Elements/u/"),mt("http://www.w3.org/1999/02/22-rdf-syntax-ns#")),Ut=(mt("http://www.w3.org/ns/rdfa#"),mt("http://www.w3.org/2000/01/rdf-schema#"),mt("http://purl.org/stuff/rev#"),mt("https://www.ica.org/standards/RiC/ontology#"),mt("http://www.w3.org/ns/r2rml#"),mt("http://purl.org/rss/1.0/"),mt("http://schema.org/"),mt("http://www.w3.org/ns/sparql-service-description#"),mt("http://purl.org/linked-data/sdmx#"),mt("http://semanticweb.cs.vu.nl/2009/11/sem/"),mt("http://www.w3.org/2000/10/swap/set#"),mt("http://www.opengis.net/ont/sf#"),mt("http://www.w3.org/ns/shacl#"),mt("http://www.w3.org/ns/shex#"),mt("https://www.w3.org/ns/shacl-shacl#"),mt("http://rdfs.org/sioc/ns#"),mt("http://www.w3.org/2004/02/skos/core#"),mt("http://www.w3.org/2008/05/skos-xl#"),mt("http://www.w3.org/ns/solid/terms#"),mt("http://www.w3.org/ns/sosa/"),mt("http://qudt.org/vocab/sou/"),mt("http://www.w3.org/ns/ssn/"),mt("http://www.w3.org/ns/posix/stat#"),mt("http://www.w3.org/2000/10/swap/string#"),mt("http://www.w3.org/2006/03/test-description#"),mt("http://www.w3.org/2006/time#"),mt("http://qudt.org/vocab/unit/"),mt("http://www.linkedmodel.org/schema/vaem#"),mt("http://purl.org/vocab/vann/"),mt("http://www.w3.org/2006/vcard/ns#"),mt("http://rdfs.org/ns/void#"),mt("http://www.w3.org/2003/06/sw-vocab-status/ns#"),mt("http://www.w3.org/2007/05/powder-s#"),mt("http://www.w3.org/2003/01/geo/wgs84_pos#"),mt("http://www.w3.org/1999/xhtml/vocab#"),mt("http://rdf-vocabulary.ddialliance.org/xkos#"),mt("http://www.w3.org/2001/XMLSchema#"));mt("http://www.w3.org/2007/rif#"),mt("http://rdf.data-vocabulary.org/#"),mt("http://www.w3.org/2007/05/powder#"),mt("http://www.w3.org/XML/1998/namespace/");class Gt{constructor(e){if(this.index=new Map,e)for(const[t,n]of e)this.set(t,n)}get size(){return this.index.size}clear(){this.index.clear()}delete(e){return this.index.delete(Pt(e))}*entries(){for(const[,{term:e,value:t}]of this.index)yield[e,t]}forEach(e,t){for(const n of this.entries())e.call(t,n[1],n[0],this)}get(e){const t=this.index.get(Pt(e));return t&&t.value}has(e){return this.index.has(Pt(e))}*keys(){for(const[,{term:e}]of this.index)yield e}set(e,t){const n=Pt(e);return this.index.set(n,{term:e,value:t}),this}*values(){for(const[,{value:e}]of this.index)yield e}[Symbol.iterator](){return this.entries()[Symbol.iterator]()}}const Jt=Gt,Ht=new class{validators;constructor(){this.validators=new Jt}register(e,t){this.validators.set(e,t)}find(e){return e?this.validators.get(e):null}};function zt(e){return!["\n","\r","\t"].some((t=>e.includes(t)))}Ht.register(Ut.anySimpleType,(()=>!0)),Ht.register(Ut.anyAtomicType,(()=>!0)),Ht.register(Ut.string,(()=>!0)),Ht.register(Ut.normalizedString,(e=>zt(e))),Ht.register(Ut.token,(e=>zt(e)&&!e.startsWith(" ")&&!e.endsWith(" ")&&!e.includes("  ")));const Wt=/^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;Ht.register(Ut.language,(e=>Wt.test(e)));const Kt=/^[^\ufffe\uffff]*$/;Ht.register(Ut.anyURI,(e=>Kt.test(e)));const Xt="(\\+|-)?",Yt=new RegExp(`^${Xt}\\d+$`);Ht.register(Ut.integer,(e=>Yt.test(e))),Ht.register(Ut.nonNegativeInteger,(e=>Yt.test(e)&&BigInt(e)>=BigInt("0"))),Ht.register(Ut.positiveInteger,(e=>Yt.test(e)&&BigInt(e)>BigInt("0"))),Ht.register(Ut.nonPositiveInteger,(e=>Yt.test(e)&&BigInt(e)<=BigInt("0"))),Ht.register(Ut.negativeInteger,(e=>Yt.test(e)&&BigInt(e)<BigInt("0"))),Ht.register(Ut.int,(e=>Yt.test(e)&&BigInt(e)>=BigInt("-2147483647")&&BigInt(e)<=BigInt("2147483648"))),Ht.register(Ut.unsignedInt,(e=>Yt.test(e)&&BigInt(e)>=BigInt("0")&&BigInt(e)<=BigInt("4294967295"))),Ht.register(Ut.long,(e=>Yt.test(e)&&BigInt(e)>=BigInt("-9223372036854775808")&&BigInt(e)<=BigInt("9223372036854775807"))),Ht.register(Ut.unsignedLong,(e=>Yt.test(e)&&BigInt(e)>=BigInt("0")&&BigInt(e)<=BigInt("18446744073709551615"))),Ht.register(Ut.short,(e=>Yt.test(e)&&BigInt(e)>=BigInt("-32768")&&BigInt(e)<=BigInt("32767"))),Ht.register(Ut.unsignedShort,(e=>Yt.test(e)&&BigInt(e)>=BigInt("0")&&BigInt(e)<=BigInt("65535"))),Ht.register(Ut.byte,(e=>Yt.test(e)&&BigInt(e)>=BigInt("-128")&&BigInt(e)<=BigInt("127"))),Ht.register(Ut.unsignedByte,(e=>Yt.test(e)&&BigInt(e)>=BigInt("0")&&BigInt(e)<=BigInt("255"))),Ht.register(Ut.boolean,(e=>"1"===e||"true"===e||"0"===e||"false"===e));const Zt=`${Xt}\\d+(\\.\\d+)?`,en=new RegExp(`^${Xt}${Zt}$`);Ht.register(Ut.decimal,(e=>en.test(e))),Ht.register(Ut.float,nn),Ht.register(Ut.double,nn);const tn=new RegExp(`^${Xt}${Zt}((E|e)(\\+|-)?\\d+)?$`);function nn(e){return"INF"===e||"-INF"===e||"NaN"===e||tn.test(e)}const an="-?",on="\\d+M",dn="\\d+M",rn="\\d+(\\.\\d+)?S",sn=`(\\d+Y(${on})?|${on})`,ln=`T((\\d+H(${dn})?(${rn})?)|(${dn}(${rn})?)|${rn})`,un=`(\\d+D(${ln})?|${ln})`,mn=new RegExp(`^${an}P((${sn}(${un})?)|${un})$`);Ht.register(Ut.duration,(e=>mn.test(e)));const cn=new RegExp(`^${an}P${un}$`);Ht.register(Ut.dayTimeDuration,(e=>cn.test(e)));const pn=new RegExp(`^${an}P${sn}$`);Ht.register(Ut.yearMonthDuration,(e=>pn.test(e)));const hn=`${an}(([1-9]\\d{3,})|(0\\d{3}))`,fn="(((\\+|-)\\d{2}:\\d{2})|Z)",Nn="\\d{2}",gn="\\d{2}",yn=`${hn}-${Nn}-${gn}`,$n="\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?",bn=new RegExp(`^${yn}T${$n}${fn}?$`);Ht.register(Ut.dateTime,(e=>bn.test(e)));const vn=new RegExp(`^${yn}T${$n}${fn}$`);Ht.register(Ut.dateTimeStamp,(e=>vn.test(e)));const wn=new RegExp(`^${yn}${fn}?$`);Ht.register(Ut.date,(e=>wn.test(e)));const xn=new RegExp(`^${gn}${fn}?$`);Ht.register(Ut.gDay,(e=>xn.test(e)));const _n=new RegExp(`^--${Nn}${fn}?$`);Ht.register(Ut.gMonth,(e=>_n.test(e)));const Cn=new RegExp(`^${Nn}-${gn}${fn}?$`);Ht.register(Ut.gMonthDay,(e=>Cn.test(e)));const qn=new RegExp(`^${hn}${fn}?$`);Ht.register(Ut.gYear,(e=>qn.test(e)));const Sn=new RegExp(`^${hn}-${Nn}${fn}?$`);Ht.register(Ut.gYearMonth,(e=>Sn.test(e)));const En=new RegExp(`^${$n}${fn}?$`);Ht.register(Ut.time,(e=>En.test(e)));const In=/^([0-9a-fA-F]{2})*$/;Ht.register(Ut.hexBinary,(e=>In.test(e)));const Rn="[A-Za-z0-9+/]",jn=`(${Rn} ?)`,Ln=new RegExp(`^((${jn}{4})*((${jn}{3}${Rn})|(${jn}{2}([AEIMQUYcgkosw048] ?)=)|(${jn}([AQgw] ?)= ?=)))?$`);Ht.register(Ut.base64Binary,(e=>Ln.test(e))),Ht.register(Vt.JSON,(e=>{try{return JSON.parse(e),!0}catch(e){return!1}})),Ht.register(Ut.NOTATION,(()=>!0)),Ht.register(Ut.QName,(()=>!0)),Ht.register(Ut.Name,(()=>!0)),Ht.register(Ut.NCName,(()=>!0)),Ht.register(Ut.ENTITY,(()=>!0)),Ht.register(Ut.ID,(()=>!0)),Ht.register(Ut.IDREF,(()=>!0)),Ht.register(Ut.NMTOKEN,(()=>!0)),Ht.register(Ut.ENTITIES,(()=>!0)),Ht.register(Ut.IDREFS,(()=>!0)),Ht.register(Ut.NMTOKENS,(()=>!0)),Ht.register(Qt.XMLLiteral,(()=>!0)),Ht.register(Qt.HTML,(()=>!0));var Tn=n(9349);function An(e,t,n){if("NamedNode"===e.term.termType&&!n)return e.term;if("BlankNode"===e.term.termType||"NamedNode"===e.term.termType){if(e.out(t.rdf.first).term)return[...e.list()].map((e=>An(e,t,n)));const a=e.out(t.sh.alternativePath);if(a.term)return{or:[...a.list()].map((e=>An(e,t,n)))};const o=e.out(t.sh.zeroOrMorePath);if(o.term)return{zeroOrMore:An(o,t,n)};const d=e.out(t.sh.oneOrMorePath);if(d.term)return{oneOrMore:An(d,t,n)};const r=e.out(t.sh.zeroOrOnePath);if(r.term)return{zeroOrOne:An(r,t,n)};const i=e.out(t.sh.inversePath);return i.term?{inverse:An(i,t,n)}:e.term}throw new Error(`Unsupported SHACL path: ${e.term.value}`)}function Pn(e,t,n){return[...On(e,t,n)]}function On(e,t,n){if("NamedNode"===n.termType)return function(e,t,n){return new Mt(e.node(t).out(n).terms)}(e,t,n);if(Array.isArray(n))return function(e,t,n){let a=new Mt([t]);for(const t of n)a=new Mt(Dn(a,(n=>Pn(e,n,t))));return a}(e,t,n);if(n.or)return function(e,t,n){return new Mt(Dn(n.or,(n=>Pn(e,t,n))))}(e,t,n);if(n.inverse)return function(e,t,n){if("NamedNode"!==n.inverse.termType)throw new Error("Unsupported: Inverse paths only work for named nodes");return new Mt(e.node(t).in(n.inverse).terms)}(e,t,n);if(n.zeroOrOne)return function(e,t,n){const a=On(e,t,n.zeroOrOne);return a.add(t),a}(e,t,n);if(n.zeroOrMore)return function(e,t,n){const a=kn(e,t,n.zeroOrMore);return a.add(t),a}(e,t,n);if(n.oneOrMore)return function(e,t,n){return kn(e,t,n.oneOrMore)}(e,t,n);throw new Error(`Unsupported path object: ${n}`)}function kn(e,t,n,a){(a=a||new Mt).add(t);const o=On(e,t,n),d=Dn(o,(t=>a.has(t)?[]:[...kn(e,t,n,a)]));return o.addAll(d),o}function Dn(e,t){return[...e].reduce(((e,n)=>e.concat(t(n))),[])}function Mn(e,t,n=new Dt){if("BlankNode"!==t.termType||n.has(t))return[];n.add(t);const a=[...e.match(t,null,null)],o=a.map((t=>Mn(e,t.object,n)));return a.concat(...o)}function Bn(e,t){const n=Fn(e,t);return n.add(e.term),[...n].reduce(((n,a)=>{const o=e.node(a).in(t.rdf.type).terms;return n.addAll(o),n}),new Mt)}function Fn(e,t){const n=e.in(t.rdfs.subClassOf),a=n.toArray().reduce(((e,n)=>{const a=Fn(n,t);return e.addAll(a),e}),new Mt);return new Mt([...n.terms,...a])}function Vn(e,t,n){const a=Fn(t,n);return a.add(t.term),e.out(n.rdf.type).terms.some((e=>a.has(e)))}function Qn(e){return[...e.list()].map((({term:e})=>e))}function Un(e,t,n){const{sh:a,xsd:o}=e.ns,d=n.shape.shapeNode,r=n.getParameterValue(a.qualifiedValueShapesDisjoint),i=n.getParameterValue(a.qualifiedValueShape),s=e.factory.literal("true",o.boolean),l=new Mt;if(s.equals(r)){const t=e.$shapes.node(d).in(a.property).out(a.property).out(a.qualifiedValueShape).filter((({term:e})=>!e.equals(i))).terms;l.addAll(t)}const u=n.shape.pathObject;return Pn(e.$data,t,u).filter((t=>e.nodeConformsToShape(t,i)&&!function(e,t,n){for(let a=0;a<n.length;a++)if(e.nodeConformsToShape(t,n[a]))return!0;return!1}(e,t,[...l]))).length}function Gn(e,t,n){if(!e||!t||"Literal"!==e.termType||"Literal"!==t.termType)return null;if(Jn(e,n)!==Jn(t,n))return null;const a=(0,Tn.fromRdf)(e),o=(0,Tn.fromRdf)(t);return typeof a!=typeof o?null:"string"==typeof a?a.localeCompare(o):a-o}function Jn(e,t){return t.xsd.dateTime.equals(e.datatype)&&/^.*(((\+|-)\d{2}:\d{2})|Z)$/.test(e.value)}const Hn={validateAnd:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.and);return Qn(e.$shapes.node(d)).every((t=>e.nodeConformsToShape(n,t)))},validateClass:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.class);return Vn(e.$data.node(n),e.$data.node(d),e.ns)},validateClosed:function(e,t,n,a){const{sh:o,xsd:d}=e.ns,r=a.getParameterValue(o.closed),i=a.getParameterValue(o.ignoredProperties),s=a.shape.shapeNode;if(!e.factory.literal("true",d.boolean).equals(r))return;const l=new Mt(e.$shapes.node(s).out(o.property).out(o.path).terms.filter((e=>"NamedNode"===e.termType)));i&&l.addAll(Qn(e.$shapes.node(i)));const u=[];return[...e.$data.dataset.match(n,null,null)].filter((({predicate:e})=>!l.has(e))).forEach((({predicate:e,object:t})=>{u.push({path:e,value:t})})),u},validateDatatype:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.datatype);return"Literal"===n.termType&&d.equals(n.datatype)&&function(e){if("Literal"!==e.termType)throw new Error("Cannot validate non-literal terms");const t=Ht.find(e.datatype);return!t||t(e.value)}(n)},validateDisjoint:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.disjoint);return 0===e.$data.dataset.match(t,d,n).size},validateEqualsNode:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.equals),r=[];let i=0;return Pn(e.$data,t,d).forEach((e=>{i++,e.equals(t)||r.push({value:e})})),0===r.length&&0===i&&r.push({value:t}),r},validateEqualsProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=a.getParameterValue(o.equals),i=[];return Pn(e.$data,t,d).forEach((n=>{0===e.$data.dataset.match(t,r,n).size&&i.push({value:n})})),[...e.$data.dataset.match(t,r,null)].forEach((({object:n})=>{const a=n;Pn(e.$data,t,d).some((e=>e.equals(a)))||i.push({value:a})})),i},validateHasValueNode:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.hasValue);return t.equals(d)},validateHasValueProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=a.getParameterValue(o.hasValue);return Pn(e.$data,t,d).some((e=>e.equals(r)))},validateIn:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.in);return new Mt(Qn(e.$shapes.node(d))).has(n)},validateLanguageIn:function(e,t,n,a){const{sh:o}=e.ns;if("Literal"!==n.termType)return!1;const d=n.language;if(!d||""===d)return!1;const r=a.getParameterValue(o.languageIn);return Qn(e.$shapes.node(r)).some((e=>d.startsWith(e.value)))},validateLessThanProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=Pn(e.$data,t,d),i=a.getParameterValue(o.lessThan),s=e.$data.node(t).out(i).terms,l=[];for(const t of r)for(const n of s){const a=Gn(t,n,e.ns);(null===a||a>=0)&&l.push({value:t})}return l},validateLessThanOrEqualsProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=Pn(e.$data,t,d),i=a.getParameterValue(o.lessThanOrEquals),s=e.$data.node(t).out(i).terms,l=[];for(const t of r)for(const n of s){const a=Gn(t,n,e.ns);(null===a||a>0)&&l.push({value:t})}return l},validateMaxCountProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=Pn(e.$data,t,d).length,i=a.getParameterValue(o.maxCount);return r<=Number(i.value)},validateMaxExclusive:function(e,t,n,a){const{sh:o}=e.ns,d=Gn(n,a.getParameterValue(o.maxExclusive),e.ns);return null!==d&&d<0},validateMaxInclusive:function(e,t,n,a){const{sh:o}=e.ns,d=Gn(n,a.getParameterValue(o.maxInclusive),e.ns);return null!==d&&d<=0},validateMaxLength:function(e,t,n,a){if("BlankNode"===n.termType)return!1;const{sh:o}=e.ns,d=a.getParameterValue(o.maxLength);return n.value.length<=Number(d.value)},validateMinCountProperty:function(e,t,n,a){const{sh:o}=e.ns,d=a.shape.pathObject,r=Pn(e.$data,t,d).length,i=a.getParameterValue(o.minCount);return r>=Number(i.value)},validateMinExclusive:function(e,t,n,a){const{sh:o}=e.ns,d=Gn(n,a.getParameterValue(o.minExclusive),e.ns);return null!==d&&d>0},validateMinInclusive:function(e,t,n,a){const{sh:o}=e.ns,d=Gn(n,a.getParameterValue(o.minInclusive),e.ns);return null!==d&&d>=0},validateMinLength:function(e,t,n,a){if("BlankNode"===n.termType)return!1;const{sh:o}=e.ns,d=a.getParameterValue(o.minLength);return n.value.length>=Number(d.value)},validateNode:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.node);return e.nodeConformsToShape(n,d)},validateNodeKind:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.nodeKind);return"BlankNode"===n.termType?o.BlankNode.equals(d)||o.BlankNodeOrIRI.equals(d)||o.BlankNodeOrLiteral.equals(d):"NamedNode"===n.termType?o.IRI.equals(d)||o.BlankNodeOrIRI.equals(d)||o.IRIOrLiteral.equals(d):"Literal"===n.termType?o.Literal.equals(d)||o.BlankNodeOrLiteral.equals(d)||o.IRIOrLiteral.equals(d):void 0},validateNot:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.not);return!e.nodeConformsToShape(n,d)},validateOr:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.or);return Qn(e.$shapes.node(d)).some((t=>e.nodeConformsToShape(n,t)))},validatePattern:function(e,t,n,a){if("BlankNode"===n.termType)return!1;const{sh:o}=e.ns,d=a.getParameterValue(o.flags),r=a.getParameterValue(o.pattern);return(d?new RegExp(r.value,d.value):new RegExp(r.value)).test(n.value)},validateQualifiedMaxCountProperty:function(e,t,n,a){const{sh:o}=e.ns,d=Un(e,t,a),r=a.getParameterValue(o.qualifiedMaxCount);return"Literal"===r.termType&&d<=Number(r.value)},validateQualifiedMinCountProperty:function(e,t,n,a){const{sh:o}=e.ns,d=Un(e,t,a),r=a.getParameterValue(o.qualifiedMinCount);return"Literal"===r.termType&&d>=Number(r.value)},validateUniqueLangProperty:function(e,t,n,a){const{sh:o,xsd:d}=e.ns,r=a.getParameterValue(o.uniqueLang);if(!e.factory.literal("true",d.boolean).equals(r))return;const i=a.shape.pathObject,s={};Pn(e.$data,t,i).forEach((e=>{const t=e.language;if(t&&""!==t){const e=s[t];s[t]=e?e+1:1}}));const l=[];for(const e in s)if(Object.prototype.hasOwnProperty.call(s,e)){const t=s[e];t>1&&l.push('Language "'+e+'" has been used by '+t+" values")}return l},validateXone:function(e,t,n,a){const{sh:o}=e.ns,d=a.getParameterValue(o.xone);return 1===Qn(e.$shapes.node(d)).map((t=>e.nodeConformsToShape(n,t))).filter(Boolean).length}},zn={[At.sh.AndConstraintComponent.value]:{validator:{func:Hn.validateAnd}},[At.sh.ClassConstraintComponent.value]:{validator:{func:Hn.validateClass}},[At.sh.ClosedConstraintComponent.value]:{validator:{func:Hn.validateClosed,message:"Predicate is not allowed (closed shape)"}},[At.sh.DatatypeConstraintComponent.value]:{validator:{func:Hn.validateDatatype,message:"Value does not have datatype {$datatype}"}},[At.sh.DisjointConstraintComponent.value]:{validator:{func:Hn.validateDisjoint,message:"Value node must not also be one of the values of {$disjoint}"}},[At.sh.EqualsConstraintComponent.value]:{nodeValidator:{func:Hn.validateEqualsNode,message:"Must have same values as {$equals}"},propertyValidator:{func:Hn.validateEqualsProperty,message:"Must have same values as {$equals}"}},[At.sh.HasValueConstraintComponent.value]:{nodeValidator:{func:Hn.validateHasValueNode,message:"Value must be {$hasValue}"},propertyValidator:{func:Hn.validateHasValueProperty,message:"Missing expected value {$hasValue}"}},[At.sh.InConstraintComponent.value]:{validator:{func:Hn.validateIn,message:"Value is not in {$in}"}},[At.sh.LanguageInConstraintComponent.value]:{validator:{func:Hn.validateLanguageIn,message:"Language does not match any of {$languageIn}"}},[At.sh.LessThanConstraintComponent.value]:{propertyValidator:{func:Hn.validateLessThanProperty,message:"Value is not less than value of {$lessThan}"}},[At.sh.LessThanOrEqualsConstraintComponent.value]:{propertyValidator:{func:Hn.validateLessThanOrEqualsProperty,message:"Value is not less than or equal to value of {$lessThanOrEquals}"}},[At.sh.MaxCountConstraintComponent.value]:{propertyValidator:{func:Hn.validateMaxCountProperty,message:"More than {$maxCount} values"}},[At.sh.MaxExclusiveConstraintComponent.value]:{validator:{func:Hn.validateMaxExclusive,message:"Value is not less than {$maxExclusive}"}},[At.sh.MaxInclusiveConstraintComponent.value]:{validator:{func:Hn.validateMaxInclusive,message:"Value is not less than or equal to {$maxInclusive}"}},[At.sh.MaxLengthConstraintComponent.value]:{validator:{func:Hn.validateMaxLength,message:"Value has more than {$maxLength} characters"}},[At.sh.MinCountConstraintComponent.value]:{propertyValidator:{func:Hn.validateMinCountProperty,message:"Less than {$minCount} values"}},[At.sh.MinExclusiveConstraintComponent.value]:{validator:{func:Hn.validateMinExclusive,message:"Value is not greater than {$minExclusive}"}},[At.sh.MinInclusiveConstraintComponent.value]:{validator:{func:Hn.validateMinInclusive,message:"Value is not greater than or equal to {$minInclusive}"}},[At.sh.MinLengthConstraintComponent.value]:{validator:{func:Hn.validateMinLength,message:"Value has less than {$minLength} characters"}},[At.sh.NodeConstraintComponent.value]:{validator:{func:Hn.validateNode,message:"Value does not have shape {$node}"}},[At.sh.NodeKindConstraintComponent.value]:{validator:{func:Hn.validateNodeKind,message:"Value does not have node kind {$nodeKind}"}},[At.sh.NotConstraintComponent.value]:{validator:{func:Hn.validateNot,message:"Value does have shape {$not}"}},[At.sh.OrConstraintComponent.value]:{validator:{func:Hn.validateOr}},[At.sh.PatternConstraintComponent.value]:{validator:{func:Hn.validatePattern,message:'Value does not match pattern "{$pattern}"'}},[At.sh.QualifiedMaxCountConstraintComponent.value]:{propertyValidator:{func:Hn.validateQualifiedMaxCountProperty,message:"More than {$qualifiedMaxCount} values have shape {$qualifiedValueShape}"}},[At.sh.QualifiedMinCountConstraintComponent.value]:{propertyValidator:{func:Hn.validateQualifiedMinCountProperty,message:"Less than {$qualifiedMinCount} values have shape {$qualifiedValueShape}"}},[At.sh.UniqueLangConstraintComponent.value]:{propertyValidator:{func:Hn.validateUniqueLangProperty,message:'Language "{?lang}" used more than once'}},[At.sh.XoneConstraintComponent.value]:{validator:{func:Hn.validateXone}}};class Wn{constructor(e,t,n,a){this.shape=e,this.component=t,this.paramValue=n,this.shapeNodePointer=a.node(e.shapeNode)}getParameterValue(e){return this.paramValue||this.shapeNodePointer.out(e).term}get validationFunction(){return this.shape.isPropertyShape?this.component.propertyValidationFunction:this.component.nodeValidationFunction}get isValidationFunctionGeneric(){return this.shape.isPropertyShape?this.component.propertyValidationFunctionGeneric:this.component.nodeValidationFunctionGeneric}get componentMessages(){return this.component.getMessages(this.shape)}}class Kn{constructor(e,t){const{$shapes:n,factory:a,ns:o}=t,{sh:d,xsd:r}=o;this.context=t,this.node=e,this.nodePointer=n.node(e),this.parameters=[],this.parameterNodes=[],this.requiredParameters=[],this.optionals={};const i=a.literal("true",r.boolean);this.nodePointer.out(d.parameter).forEach((e=>{const t=e.term;e.out(d.path).forEach((({term:e})=>{this.parameters.push(e),this.parameterNodes.push(t),n.dataset.match(t,d.optional,i).size>0?this.optionals[e.value]=!0:this.requiredParameters.push(e)}))})),this.nodeValidationFunction=this.findValidationFunction(d.nodeValidator),this.nodeValidationFunction||(this.nodeValidationFunction=this.findValidationFunction(d.validator),this.nodeValidationFunctionGeneric=!0),this.propertyValidationFunction=this.findValidationFunction(d.propertyValidator),this.propertyValidationFunction||(this.propertyValidationFunction=this.findValidationFunction(d.validator),this.propertyValidationFunctionGeneric=!0)}findValidationFunction(e){const t=e.value.split("#").slice(-1)[0],n=this.findValidator(t);return n?new Ft(this.context,n.func.name,n.func):null}getMessages(e){const t=(e.isPropertyShape?this.propertyValidationFunctionGeneric:this.nodeValidationFunctionGeneric)?"validator":e.isPropertyShape?"propertyValidator":"nodeValidator",n=this.findValidator(t);if(!n)return[];const a=n.message;return a?[a]:[]}findValidator(e){const t=zn[this.node.value];return t&&t[e]||null}isComplete(e){return!this.parameters.some((t=>this.isRequired(t.value)&&0===this.context.$shapes.dataset.match(e,t,null).size))}isRequired(e){return!this.optionals[e]}}class Xn{constructor(e,t){const{$shapes:n,ns:a,shapesGraph:o}=e,{sh:d}=a;this.context=e,this.shapeNode=t,this.shapeNodePointer=n.node(t),this.severity=this.shapeNodePointer.out(d.severity).term||d.Violation,this.deactivated="true"===this.shapeNodePointer.out(d.deactivated).value,this.path=this.shapeNodePointer.out(d.path).term,this.isPropertyShape=null!=this.path,this._pathObject=void 0,this.constraints=[];const r=new Mt;[...n.dataset.match(t,null,null)].forEach((e=>{const a=o.getComponentWithParameter(e.predicate);a&&!r.has(a.node)&&(1===a.parameters.length?this.constraints.push(new Wn(this,a,e.object,n)):a.isComplete(t)&&(this.constraints.push(new Wn(this,a,void 0,n)),r.add(a.node)))}))}get pathObject(){const{$shapes:e,ns:t,allowNamedNodeInList:n}=this.context;return void 0===this._pathObject&&(this._pathObject=this.path?An(e.node(this.path),t,n):null),this._pathObject}getTargetNodes(e){const{$shapes:t,ns:n}=this.context,{rdfs:a,sh:o}=n,d=new Mt;Vn(t.node(this.shapeNode),t.node(a.Class),n)&&d.addAll(Bn(e.node(this.shapeNode),n)),[...t.dataset.match(this.shapeNode,o.targetClass,null)].forEach((({object:t})=>{d.addAll(Bn(e.node(t),n))}));const r=this.shapeNodePointer.out(o.targetNode).terms.filter((t=>e.dataset.match(t).size>0||e.dataset.match(null,t).size>0||e.dataset.match(null,null,t).size>0));return d.addAll(r),this.shapeNodePointer.out(o.targetSubjectsOf).terms.forEach((t=>{const n=[...e.dataset.match(null,t,null)].map((({subject:e})=>e));d.addAll(n)})),this.shapeNodePointer.out(o.targetObjectsOf).terms.forEach((t=>{const n=[...e.dataset.match(null,t,null)].map((({object:e})=>e));d.addAll(n)})),[...d]}getValueNodes(e,t){return this.path?Pn(t,e,this.pathObject):[e]}}const Yn=class{constructor(e){this.context=e;const{sh:t}=e.ns,n=Bn(e.$shapes.node(t.ConstraintComponent),e.ns);this._components=[...n].map((t=>new Kn(t,e))),this._parametersMap=new Map;for(const e of this._components)for(const t of e.parameters)this._parametersMap.set(t.value,e);this._shapes=new Map}getComponentWithParameter(e){return this._parametersMap.get(e.value)}getShape(e){if(!this._shapes.has(e.value)){const t=new Xn(this.context,e);this._shapes.set(e.value,t)}return this._shapes.get(e.value)}get shapeNodesWithConstraints(){if(!this._shapeNodesWithConstraints){const e=new Mt;for(const t of this._components){const n=t.requiredParameters;for(const t of n){const n=[...this.context.$shapes.dataset.match(null,t,null)].map((({subject:e})=>e));e.addAll(n)}}this._shapeNodesWithConstraints=[...e]}return this._shapeNodesWithConstraints}get shapesWithTarget(){const{$shapes:e,ns:t}=this.context,{rdfs:n,sh:a}=t;return this._shapesWithTarget||(this._shapesWithTarget=this.shapeNodesWithConstraints.filter((o=>Vn(e.node(o),e.node(n.Class),t)||e.node(o).out([a.targetClass,a.targetNode,a.targetSubjectsOf,a.targetObjectsOf,a.target]).terms.length>0)).map((e=>this.getShape(e)))),this._shapesWithTarget}};var Zn=n(7833);class ea{constructor(e,t){this.pointer=e,this.term=e.term,this.dataset=e.dataset,this.ns=t}get message(){return this.pointer.out(this.ns.sh.resultMessage).terms||[]}get path(){return this.pointer.out(this.ns.sh.resultPath).term||null}get focusNode(){return this.pointer.out(this.ns.sh.focusNode).term||null}get severity(){return this.pointer.out(this.ns.sh.resultSeverity).term||null}get sourceConstraintComponent(){return this.pointer.out(this.ns.sh.sourceConstraintComponent).term||null}get sourceShape(){return this.pointer.out(this.ns.sh.sourceShape).term||null}get value(){return this.pointer.out(this.ns.sh.value).term||null}get detail(){return this.pointer.out(this.ns.sh.detail).map((e=>new ea(e,this.ns)))}}const ta=class{constructor(e,t){t=t||{},this.factory=t.factory||Lt,this.ns=t.ns||Tt(this.factory);const{sh:n,xsd:a}=this.ns;this.pointer=e,this.term=e.term,this.dataset=e.dataset;const o=e.out(n.result),d=0===o.terms.length;e.addOut(n.conforms,this.factory.literal(d.toString(),a.boolean)),this.conforms=d,this.results=o.toArray().map((e=>new ea(e,this.ns)))}},na=Zn("validation-enging::error");function aa(e,t,n){for(const n of e.dataset)t.dataset.add(n);t.addOut(n,e)}const oa=class{constructor(e,t){this.context=e,this.factory=e.factory,this.maxErrors=t.maxErrors,this.initReport(),this.recordErrorsLevel=0,this.violationsCount=0,this.validationError=null,this.nestedResults={}}initReport(){const{rdf:e,sh:t}=this.context.ns;this.reportPointer=wt({dataset:this.factory.dataset(),factory:this.factory,term:this.factory.blankNode("report")}).addOut(e.type,t.ValidationReport)}validateAll(e){if(this.maxErrorsReached())return!0;this.validationError=null;try{this.initReport();let t=!1;const n=this.context.shapesGraph.shapesWithTarget;for(const a of n){const n=a.getTargetNodes(e);for(const o of n)this.validateNodeAgainstShape(o,a,e)&&(t=!0)}return t}catch(e){return this.validationError=e,!0}}validateNodeAgainstShape(e,t,n){if(this.maxErrorsReached())return!0;if(t.deactivated)return!1;const a=t.getValueNodes(e,n);let o=!1;for(const d of t.constraints)this.validateNodeAgainstConstraint(e,a,d,n)&&(o=!0);return o}validateNodeAgainstConstraint(e,t,n,a){const{sh:o}=this.context.ns;if(this.maxErrorsReached())return!0;if(o.PropertyConstraintComponent.equals(n.component.node)){let e=!1;for(const o of t)this.validateNodeAgainstShape(o,this.context.shapesGraph.getShape(n.paramValue),a)&&(e=!0);return e}if(!n.validationFunction)throw new Error("Cannot find validator for constraint component "+n.component.node.value);if(n.isValidationFunctionGeneric){let a=!1;for(const o of t){if(this.maxErrorsReached())break;const t=this.validateValueNodeAgainstConstraint(e,o,n);t&&this.violationsCount++,a=a||t}return a}return this.validateValueNodeAgainstConstraint(e,null,n)}validateValueNodeAgainstConstraint(e,t,n){const{sh:a}=this.context.ns;this.recordErrorsLevel++;const o=n.validationFunction.execute(e,t,n),d=(Array.isArray(o)?o:[o]).map((a=>this.createResultFromObject(a,n,e,t))).filter(Boolean);if(1===this.recordErrorsLevel)for(const e of d)aa(e,this.reportPointer,a.result);else this.nestedResults[this.recordErrorsLevel]=(this.nestedResults[this.recordErrorsLevel]||[]).concat(d);return this.recordErrorsLevel--,d.length>0}maxErrorsReached(){return!!this.maxErrors&&this.violationsCount>=this.maxErrors}getReport(){if(this.validationError)throw na("Validation Failure: "+this.validationError),this.validationError;return new ta(this.reportPointer,{factory:this.factory,ns:this.context.ns})}createResultFromObject(e,t,n,a){const{sh:o}=this.context.ns,d=this.normalizeValidationResult(e,a);if(!d)return null;const r=this.createResult(t,n);d.path?(r.addOut(o.resultPath,d.path),this.copyNestedStructure(d.path,r)):t.shape.isPropertyShape&&(r.addOut(o.resultPath,t.shape.path),this.copyNestedStructure(t.shape.path,r)),d.value?(r.addOut(o.value,d.value),this.copyNestedStructure(d.value,r)):a&&(r.addOut(o.value,a),this.copyNestedStructure(a,r));const i=this.createResultMessages(d,t);for(const e of i)r.addOut(o.resultMessage,e);return r}normalizeValidationResult(e,t){return!1===e?{value:t}:"string"==typeof e?{message:e,value:t}:"object"==typeof e?e:null}createResult(e,t){const{rdf:n,sh:a}=this.context.ns,o=e.shape.severity,d=e.component.node,r=e.shape.shapeNode,i=this.factory.blankNode(),s=wt({dataset:this.factory.dataset(),term:i});s.addOut(n.type,a.ValidationResult).addOut(a.resultSeverity,o).addOut(a.sourceConstraintComponent,d).addOut(a.sourceShape,r).addOut(a.focusNode,t),this.copyNestedStructure(r,s),this.copyNestedStructure(t,s);const l=this.nestedResults[this.recordErrorsLevel+1];if(l){if(d.equals(a.NodeConstraintComponent))for(const e of l)aa(e,s,a.detail);this.nestedResults[this.recordErrorsLevel+1]=[]}return s}copyNestedStructure(e,t){const n=Mn(this.context.$shapes.dataset,e);for(const e of n)t.dataset.add(e)}createResultMessages(e,t){const{$shapes:n,ns:a}=this.context,{sh:o}=a;let d=[];return e.message&&(d=[this.factory.literal(e.message)]),0===d.length&&(d=n.node(t.shape.shapeNode).out(o.message).terms),0===d.length&&(d=t.componentMessages.map((e=>this.factory.literal(e)))),0===d.length&&(d=n.node(t.component.node).out(o.message).terms),d.map((e=>function(e,t,n){const a=t.component.parameters.reduce(((e,n)=>{const a=function(e){let t=e.lastIndexOf("#");if(t<0&&(t=e.lastIndexOf("/")),t<0)throw new Error(`Cannot get local name of ${e}`);return e.substring(t+1)}(n.value),o=(d=t.getParameterValue(n))?"NamedNode"===d.termType?"<"+d.value+">":"BlankNode"===d.termType?"Blank node "+d.value:d.value:"NULL";var d;return e.replace(`{$${a}}`,o).replace(`{?${a}}`,o)}),e.value);return n.literal(a,e.language||e.datatype)}(e,t,this.factory)))}},da=class{constructor(e,t){t=t||{},this.factory=t.factory||Lt,this.ns=Tt(this.factory),this.allowNamedNodeInList=void 0!==t.allowNamedNodeInList&&t.allowNamedNodeInList,this.loadShapes(e),this.validationEngine=new oa(this,t),this.depth=0}validate(e){return this.$data=wt({dataset:e,factory:this.factory}),this.validationEngine.validateAll(this.$data),this.validationEngine.getReport()}validateNode(e,t,n){return this.$data=wt({dataset:e,factory:this.factory}),this.nodeConformsToShape(t,n),this.validationEngine.getReport()}loadShapes(e){const t=(({factory:e})=>{const t=e,n="http://www.w3.org/ns/shacl#",a="http://www.w3.org/1999/02/22-rdf-syntax-ns#",o="http://www.w3.org/2002/07/owl#",d="http://www.w3.org/2000/01/rdf-schema#",r="http://www.w3.org/ns/shacl-shacl#",i="http://www.w3.org/2001/XMLSchema#",s="http://datashapes.org/dash#",l=[];for(let e=0;e<76;e++)l.push(t.blankNode());return[t.quad(t.namedNode(n),t.namedNode(`${a}type`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(n),t.namedNode(`${d}comment`),t.literal("This vocabulary defines terms used in SHACL, the W3C Shapes Constraint Language.","en"),t.namedNode(n)),t.quad(t.namedNode(n),t.namedNode(`${d}label`),t.literal("W3C Shapes Constraint Language (SHACL) Vocabulary","en"),t.namedNode(n)),t.quad(t.namedNode(n),t.namedNode(`${n}declare`),l[0],t.namedNode(n)),t.quad(t.namedNode(n),t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(r),t.namedNode(n)),t.quad(t.namedNode(`${n}AbstractResult`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}AbstractResult`),t.namedNode(`${d}comment`),t.literal("The base class of validation results, typically not instantiated directly.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}AbstractResult`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}AbstractResult`),t.namedNode(`${d}label`),t.literal("Abstract result","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}AbstractResult`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent-and`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent-and`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent-and`),t.namedNode(`${n}path`),t.namedNode(`${n}and`),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to test whether a value node conforms to all members of a provided list of shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent`),t.namedNode(`${d}label`),t.literal("And constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}AndConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}AndConstraintComponent-and`),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNode`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNode`),t.namedNode(`${d}comment`),t.literal("The node kind of all blank nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNode`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNode`),t.namedNode(`${d}label`),t.literal("Blank node","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(`${d}comment`),t.literal("The node kind of all blank nodes or IRIs.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(`${d}label`),t.literal("Blank node or IRI","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrLiteral`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrLiteral`),t.namedNode(`${d}comment`),t.literal("The node kind of all blank nodes or literals.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrLiteral`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}BlankNodeOrLiteral`),t.namedNode(`${d}label`),t.literal("Blank node or literal","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent-class`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent-class`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent-class`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent-class`),t.namedNode(`${n}path`),t.namedNode(`${n}class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that each value node is an instance of a given type.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent`),t.namedNode(`${d}label`),t.literal("Class constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ClassConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}ClassConstraintComponent-class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-closed`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-closed`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-closed`),t.namedNode(`${n}datatype`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-closed`),t.namedNode(`${n}path`),t.namedNode(`${n}closed`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-ignoredProperties`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-ignoredProperties`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-ignoredProperties`),t.namedNode(`${n}optional`),t.literal("true",t.namedNode(`${i}boolean`)),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent-ignoredProperties`),t.namedNode(`${n}path`),t.namedNode(`${n}ignoredProperties`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to indicate that focus nodes must only have values for those properties that have been explicitly enumerated via sh:property/sh:path.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${d}label`),t.literal("Closed constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}ClosedConstraintComponent-closed`),t.namedNode(n)),t.quad(t.namedNode(`${n}ClosedConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}ClosedConstraintComponent-ignoredProperties`),t.namedNode(n)),t.quad(t.namedNode(`${n}ConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ConstraintComponent`),t.namedNode(`${d}comment`),t.literal("The class of constraint components.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ConstraintComponent`),t.namedNode(`${d}label`),t.literal("Constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ConstraintComponent`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Parameterizable`),t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${d}comment`),t.literal("A count expression is a blank node with exactly one value for the property sh:count which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${d}label`),t.literal("Count Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${n}property`),l[1],t.namedNode(n)),t.quad(t.namedNode(`${n}CountExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}count`),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(`${n}path`),t.namedNode(`${n}datatype`),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the datatype of all value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent`),t.namedNode(`${d}label`),t.literal("Datatype constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}DatatypeConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}DatatypeConstraintComponent-datatype`),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent-disjoint`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent-disjoint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent-disjoint`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent-disjoint`),t.namedNode(`${n}path`),t.namedNode(`${n}disjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that the set of value nodes is disjoint with the the set of nodes that have the focus node as subject and the value of a given property as predicate.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent`),t.namedNode(`${d}label`),t.literal("Disjoint constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}DisjointConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}DisjointConstraintComponent-disjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${d}comment`),t.literal("A distinct expression is a blank node with exactly one value for the property sh:distinct which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${d}label`),t.literal("Distinct Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${n}property`),l[2],t.namedNode(n)),t.quad(t.namedNode(`${n}DistinctExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}distinct`),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent-equals`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent-equals`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent-equals`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent-equals`),t.namedNode(`${n}path`),t.namedNode(`${n}equals`),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that the set of value nodes is equal to the set of nodes that have the focus node as subject and the value of a given property as predicate.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent`),t.namedNode(`${d}label`),t.literal("Equals constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}EqualsConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}EqualsConstraintComponent-equals`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${d}comment`),t.literal("An exists expression is a blank node with exactly one value for sh:exists (which is a well-formed shape)."),t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${d}label`),t.literal("Exists Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${n}property`),l[3],t.namedNode(n)),t.quad(t.namedNode(`${n}ExistsExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}exists`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent-expression`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent-expression`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent-expression`),t.namedNode(`${n}path`),t.namedNode(`${n}expression`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that a given node expression produces true for all value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent`),t.namedNode(`${d}label`),t.literal("Expression constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ExpressionConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}ExpressionConstraintComponent-expression`),t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${d}comment`),t.literal("A filter shape expression is a blank node with exactly one value for sh:filterShape (which is a well-formed shape) and at most one value for sh:nodes (which is a well-formed node expression)."),t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${d}label`),t.literal("Filter Shape Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${n}property`),l[4],t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${n}property`),l[5],t.namedNode(n)),t.quad(t.namedNode(`${n}FilterShapeExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}filterShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}FocusNodeOrConstantTermExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}FocusNodeOrConstantTermExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRIOrLiteral`),t.namedNode(n)),t.quad(t.namedNode(`${n}Function`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Function`),t.namedNode(`${d}comment`),t.literal("The class of SHACL functions.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Function`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Function`),t.namedNode(`${d}label`),t.literal("Function","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Function`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Parameterizable`),t.namedNode(n)),t.quad(t.namedNode(`${n}FunctionExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}FunctionExpression`),t.namedNode(`${d}comment`),t.literal("A function expression is a blank node that does not fulfill any of the syntax rules of the other node expression types and which is the subject of exactly one triple T where the object is a well-formed SHACL list, and each member of that list is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}FunctionExpression`),t.namedNode(`${d}label`),t.literal("Function Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}FunctionExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${d}comment`),t.literal("A group concat expression is a blank node with exactly one value for the property sh:groupConcat which is a well-formed node expression. A group concat expression can have a single value for the property sh:separator which is literal with datatype xsd:string."),t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${d}label`),t.literal("Group Concat Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${n}property`),l[6],t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${n}property`),l[7],t.namedNode(n)),t.quad(t.namedNode(`${n}GroupConcatExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}groupConcat`),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent-hasValue`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent-hasValue`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent-hasValue`),t.namedNode(`${n}path`),t.namedNode(`${n}hasValue`),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that one of the value nodes is a given RDF node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent`),t.namedNode(`${d}label`),t.literal("Has-value constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}HasValueConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}HasValueConstraintComponent-hasValue`),t.namedNode(n)),t.quad(t.namedNode(`${n}IRI`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}IRI`),t.namedNode(`${d}comment`),t.literal("The node kind of all IRIs.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}IRI`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}IRI`),t.namedNode(`${d}label`),t.literal("IRI","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}IRIOrLiteral`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}IRIOrLiteral`),t.namedNode(`${d}comment`),t.literal("The node kind of all IRIs or literals.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}IRIOrLiteral`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}IRIOrLiteral`),t.namedNode(`${d}label`),t.literal("IRI or literal","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${d}comment`),t.literal("An if expression is a blank node with exactly one value for sh:if (which is a well-formed node expression), at most one value for sh:then (which is a well-formed node expression) and at most one value for sh:else (which is a well-formed node expression)."),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${d}label`),t.literal("If Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}property`),l[8],t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}property`),l[9],t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}property`),l[10],t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}else`),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}if`),t.namedNode(n)),t.quad(t.namedNode(`${n}IfExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}then`),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent-in`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent-in`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent-in`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent-in`),t.namedNode(`${n}path`),t.namedNode(`${n}in`),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to exclusively enumerate the permitted value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent`),t.namedNode(`${d}label`),t.literal("In constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}InConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}InConstraintComponent-in`),t.namedNode(n)),t.quad(t.namedNode(`${n}Info`),t.namedNode(`${a}type`),t.namedNode(`${n}Severity`),t.namedNode(n)),t.quad(t.namedNode(`${n}Info`),t.namedNode(`${d}comment`),t.literal("The severity for an informational validation result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Info`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Info`),t.namedNode(`${d}label`),t.literal("Info","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${d}comment`),t.literal("An intersection expression is a blank node with exactly one value for the property sh:intersection which is a well-formed SHACL list with at least two members (which are well-formed node expressions)."),t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${d}label`),t.literal("Intersection Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${n}property`),l[11],t.namedNode(n)),t.quad(t.namedNode(`${n}IntersectionExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}intersection`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint-js`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint-js`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint-js`),t.namedNode(`${n}path`),t.namedNode(`${n}js`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint`),t.namedNode(`${d}comment`),t.literal("The class of constraints backed by a JavaScript function.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint`),t.namedNode(`${d}label`),t.literal("JavaScript-based constraint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraint`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component with the parameter sh:js linking to a sh:JSConstraint containing a sh:script.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraintComponent`),t.namedNode(`${d}label`),t.literal("JavaScript constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}JSConstraint-js`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSExecutable`),t.namedNode(`${d}comment`),t.literal("Abstract base class of resources that declare an executable JavaScript.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSExecutable`),t.namedNode(`${d}label`),t.literal("JavaScript executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${d}comment`),t.literal("The class of SHACL functions that execute a JavaScript function when called.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${d}label`),t.literal("JavaScript function","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Function`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSFunction`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSLibrary`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSLibrary`),t.namedNode(`${d}comment`),t.literal("Represents a JavaScript library, typically identified by one or more URLs of files to include.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSLibrary`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSLibrary`),t.namedNode(`${d}label`),t.literal("JavaScript library","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSLibrary`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${d}comment`),t.literal("The class of SHACL rules expressed using JavaScript.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${d}label`),t.literal("JavaScript rule","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSRule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Rule`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${d}comment`),t.literal("The class of targets that are based on JavaScript functions.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${d}label`),t.literal("JavaScript target","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTarget`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Target`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${d}comment`),t.literal("The (meta) class for parameterizable targets that are based on JavaScript functions.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${d}label`),t.literal("JavaScript target type","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSTargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}TargetType`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${d}comment`),t.literal("A SHACL validator based on JavaScript. This can be used to declare SHACL constraint components that perform JavaScript-based validation when used.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${d}label`),t.literal("JavaScript validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}JSValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent-languageIn`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent-languageIn`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent-languageIn`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent-languageIn`),t.namedNode(`${n}path`),t.namedNode(`${n}languageIn`),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to enumerate language tags that all value nodes must have.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent`),t.namedNode(`${d}label`),t.literal("Language-in constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LanguageInConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}LanguageInConstraintComponent-languageIn`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent-lessThan`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent-lessThan`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent-lessThan`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent-lessThan`),t.namedNode(`${n}path`),t.namedNode(`${n}lessThan`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that each value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent`),t.namedNode(`${d}label`),t.literal("Less-than constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}LessThanConstraintComponent-lessThan`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),t.namedNode(`${n}path`),t.namedNode(`${n}lessThanOrEquals`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that every value node is smaller than all the nodes that have the focus node as subject and the value of a given property as predicate.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent`),t.namedNode(`${d}label`),t.literal("less-than-or-equals constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}LessThanOrEqualsConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}LessThanOrEqualsConstraintComponent-lessThanOrEquals`),t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${d}comment`),t.literal("A limit expression is a blank node with exactly one value for the property sh:limit which is a literal with datatype xsd:integer and with exactly one value for the property sh:nodes which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${d}label`),t.literal("Limit Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${n}property`),l[12],t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${n}property`),l[13],t.namedNode(n)),t.quad(t.namedNode(`${n}LimitExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}limit`),t.namedNode(n)),t.quad(t.namedNode(`${n}Literal`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}Literal`),t.namedNode(`${d}comment`),t.literal("The node kind of all literals.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Literal`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Literal`),t.namedNode(`${d}label`),t.literal("Literal","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(`${n}path`),t.namedNode(`${n}maxCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the maximum number of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent`),t.namedNode(`${d}label`),t.literal("Max-count constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MaxCountConstraintComponent-maxCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}Literal`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(`${n}path`),t.namedNode(`${n}maxExclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the range of value nodes with a maximum exclusive value.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent`),t.namedNode(`${d}label`),t.literal("Max-exclusive constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExclusiveConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MaxExclusiveConstraintComponent-maxExclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${d}comment`),t.literal("A max expression is a blank node with exactly one value for the property sh:max which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${d}label`),t.literal("Max Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${n}property`),l[14],t.namedNode(n)),t.quad(t.namedNode(`${n}MaxExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}max`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}Literal`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(`${n}path`),t.namedNode(`${n}maxInclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the range of value nodes with a maximum inclusive value.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent`),t.namedNode(`${d}label`),t.literal("Max-inclusive constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxInclusiveConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MaxInclusiveConstraintComponent-maxInclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(`${n}path`),t.namedNode(`${n}maxLength`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the maximum string length of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent`),t.namedNode(`${d}label`),t.literal("Max-length constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MaxLengthConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MaxLengthConstraintComponent-maxLength`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(`${n}path`),t.namedNode(`${n}minCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the minimum number of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent`),t.namedNode(`${d}label`),t.literal("Min-count constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MinCountConstraintComponent-minCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}Literal`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(`${n}path`),t.namedNode(`${n}minExclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the range of value nodes with a minimum exclusive value.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent`),t.namedNode(`${d}label`),t.literal("Min-exclusive constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExclusiveConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MinExclusiveConstraintComponent-minExclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${d}comment`),t.literal("A min expression is a blank node with exactly one value for the property sh:min which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${d}label`),t.literal("Min Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${n}property`),l[15],t.namedNode(n)),t.quad(t.namedNode(`${n}MinExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}min`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}Literal`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(`${n}path`),t.namedNode(`${n}minInclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the range of value nodes with a minimum inclusive value.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent`),t.namedNode(`${d}label`),t.literal("Min-inclusive constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinInclusiveConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MinInclusiveConstraintComponent-minInclusive`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(`${n}path`),t.namedNode(`${n}minLength`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the minimum string length of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent`),t.namedNode(`${d}label`),t.literal("Min-length constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinLengthConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}MinLengthConstraintComponent-minLength`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${d}comment`),t.literal("A minus expression is a blank node with exactly one value for the property sh:minus which is a well-formed node expression and exactly one value for the property sh:nodes which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${d}label`),t.literal("Minus Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${n}property`),l[16],t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${n}property`),l[17],t.namedNode(n)),t.quad(t.namedNode(`${n}MinusExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}minus`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent-node`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent-node`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent-node`),t.namedNode(`${n}path`),t.namedNode(`${n}node`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that all value nodes conform to the given node shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent`),t.namedNode(`${d}label`),t.literal("Node constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}NodeConstraintComponent-node`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeExpression`),t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${n}expression`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeExpression`),t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${n}values`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeExpression`),t.namedNode(`${n}xone`),l[18],t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKind`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKind`),t.namedNode(`${d}comment`),t.literal("The class of all node kinds, including sh:BlankNode, sh:IRI, sh:Literal or the combinations of these: sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral, sh:IRIOrLiteral.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKind`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKind`),t.namedNode(`${d}label`),t.literal("Node kind","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKind`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(`${n}in`),l[19],t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(`${n}path`),t.namedNode(`${n}nodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the RDF node kind of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent`),t.namedNode(`${d}label`),t.literal("Node-kind constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeKindConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}NodeKindConstraintComponent-nodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeShape`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeShape`),t.namedNode(`${d}comment`),t.literal("A node shape is a shape that specifies constraint that need to be met with respect to focus nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeShape`),t.namedNode(`${d}label`),t.literal("Node shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NodeShape`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent-not`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent-not`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent-not`),t.namedNode(`${n}path`),t.namedNode(`${n}not`),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that value nodes do not conform to a given shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent`),t.namedNode(`${d}label`),t.literal("Not constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}NotConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}NotConstraintComponent-not`),t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${d}comment`),t.literal("An offset expression is a blank node with exactly one value for the property sh:offset which is a literal with datatype xsd:integer and with exactly one value for the property sh:nodes which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${d}label`),t.literal("Offset Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${n}property`),l[20],t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${n}property`),l[21],t.namedNode(n)),t.quad(t.namedNode(`${n}OffsetExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}offset`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent-or`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent-or`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent-or`),t.namedNode(`${n}path`),t.namedNode(`${n}or`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the value nodes so that they conform to at least one out of several provided shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent`),t.namedNode(`${d}label`),t.literal("Or constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}OrConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}OrConstraintComponent-or`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${d}comment`),t.literal("An orderBy expression is a blank node with exactly one value for the property sh:orderBy which is a well-formed node expression and with exactly one value for the property sh:nodes which is a well-formed node expression. An orderBy expression can have one value for the property sh:desc which is either true or false."),t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${d}label`),t.literal("OrderBy Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${n}property`),l[22],t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${n}property`),l[23],t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${n}property`),l[24],t.namedNode(n)),t.quad(t.namedNode(`${n}OrderByExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}orderBy`),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameter`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameter`),t.namedNode(`${d}comment`),t.literal("The class of parameter declarations, consisting of a path predicate and (possibly) information about allowed value type, cardinality and other characteristics.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameter`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameter`),t.namedNode(`${d}label`),t.literal("Parameter","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameter`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameterizable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameterizable`),t.namedNode(`${d}comment`),t.literal("Superclass of components that can take parameters, especially functions and constraint components.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameterizable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameterizable`),t.namedNode(`${d}label`),t.literal("Parameterizable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Parameterizable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${d}comment`),t.literal("A path expression is a blank node with exactly one value of the property sh:path (which are well-formed property paths) and at most one value for sh:nodes (which is a well-formed node expression)."),t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${d}label`),t.literal("Path Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${n}property`),l[25],t.namedNode(n)),t.quad(t.namedNode(`${n}PathExpression`),t.namedNode(`${n}property`),l[26],t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(`${n}optional`),t.literal("true",t.namedNode(`${i}boolean`)),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(`${n}path`),t.namedNode(`${n}flags`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-pattern`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-pattern`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-pattern`),t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent-pattern`),t.namedNode(`${n}path`),t.namedNode(`${n}pattern`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that every value node matches a given regular expression.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${d}label`),t.literal("Pattern constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}PatternConstraintComponent-flags`),t.namedNode(n)),t.quad(t.namedNode(`${n}PatternConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}PatternConstraintComponent-pattern`),t.namedNode(n)),t.quad(t.namedNode(`${n}PrefixDeclaration`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}PrefixDeclaration`),t.namedNode(`${d}comment`),t.literal("The class of prefix declarations, consisting of pairs of a prefix with a namespace.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PrefixDeclaration`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PrefixDeclaration`),t.namedNode(`${d}label`),t.literal("Prefix declaration","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PrefixDeclaration`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent-property`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent-property`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent-property`),t.namedNode(`${n}path`),t.namedNode(`${n}property`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that all value nodes conform to the given property shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent`),t.namedNode(`${d}label`),t.literal("Property constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}PropertyConstraintComponent-property`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyGroup`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyGroup`),t.namedNode(`${d}comment`),t.literal("Instances of this class represent groups of property shapes that belong together.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyGroup`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyGroup`),t.namedNode(`${d}label`),t.literal("Property group","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyGroup`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyShape`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyShape`),t.namedNode(`${d}comment`),t.literal("A property shape is a shape that specifies constraints on the values of a focus node for a given property or path.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyShape`),t.namedNode(`${d}label`),t.literal("Property shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}PropertyShape`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedValueShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}datatype`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}optional`),t.literal("true",t.namedNode(`${i}boolean`)),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that a specified maximum number of value nodes conforms to a given shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${d}label`),t.literal("Qualified-max-count constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedMaxCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMaxCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMaxCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedMinCount`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedMinCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedMinCount`),t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedMinCount`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedMinCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShape`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedValueShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}datatype`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}optional`),t.literal("true",t.namedNode(`${i}boolean`)),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(`${n}path`),t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to verify that a specified minimum number of value nodes conforms to a given shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${d}label`),t.literal("Qualified-min-count constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedMinCount`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}QualifiedMinCountConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}QualifiedMinCountConstraintComponent-qualifiedValueShapesDisjoint`),t.namedNode(n)),t.quad(t.namedNode(`${n}ResultAnnotation`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ResultAnnotation`),t.namedNode(`${d}comment`),t.literal("A class of result annotations, which define the rules to derive the values of a given annotation property as extra values for a validation result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ResultAnnotation`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ResultAnnotation`),t.namedNode(`${d}label`),t.literal("Result annotation","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ResultAnnotation`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}Rule`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Rule`),t.namedNode(`${d}comment`),t.literal("The class of SHACL rules. Never instantiated directly.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Rule`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Rule`),t.namedNode(`${d}label`),t.literal("Rule","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Rule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(`${d}comment`),t.literal("The class of SPARQL executables that are based on an ASK query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(`${d}label`),t.literal("SPARQL ASK executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${d}comment`),t.literal("A SPARQL ASK expression is a blank node with exactly one value for the property sh:ask which is string literal. The blank node may have values for the property sh:prefixes and these values are IRIs or blank nodes. Using the values of sh:prefixes as defined by 5.2.1 Prefix Declarations for SPARQL Queries, the value of sh:ask must be valid SPARQL 1.1 ASK query. The blank node may also have exactly one value for the property sh:nodes which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${d}label`),t.literal("SPARQL ASK Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${n}property`),l[27],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${n}property`),l[28],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${n}property`),l[29],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}ask`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${d}comment`),t.literal("The class of validators based on SPARQL ASK queries. The queries are evaluated for each value node and are supposed to return true if the given node conforms.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${d}label`),t.literal("SPARQL ASK validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLAskValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraint`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraint`),t.namedNode(`${d}comment`),t.literal("The class of constraints based on SPARQL SELECT queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraint`),t.namedNode(`${d}label`),t.literal("SPARQL constraint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraint`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent-sparql`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent-sparql`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent-sparql`),t.namedNode(`${n}path`),t.namedNode(`${n}sparql`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to define constraints based on SPARQL queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent`),t.namedNode(`${d}label`),t.literal("SPARQL constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}SPARQLConstraintComponent-sparql`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(`${d}comment`),t.literal("The class of SPARQL executables that are based on a CONSTRUCT query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(`${d}label`),t.literal("SPARQL CONSTRUCT executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLExecutable`),t.namedNode(`${d}comment`),t.literal("The class of resources that encapsulate a SPARQL query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLExecutable`),t.namedNode(`${d}label`),t.literal("SPARQL executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}comment`),t.literal("A function backed by a SPARQL query - either ASK or SELECT.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}label`),t.literal("SPARQL function","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Function`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLFunction`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${d}comment`),t.literal("The class of SHACL rules based on SPARQL CONSTRUCT queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${d}label`),t.literal("SPARQL CONSTRUCT rule","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Rule`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${n}property`),l[30],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLRule`),t.namedNode(`${n}property`),l[31],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(`${d}comment`),t.literal("The class of SPARQL executables based on a SELECT query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(`${d}label`),t.literal("SPARQL SELECT executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${d}comment`),t.literal("A SPARQL SELECT expression is a blank node with exactly one value for the property sh:select which is string literal. The blank node may have values for the property sh:prefixes and these values are IRIs or blank nodes. Using the values of sh:prefixes as defined by 5.2.1 Prefix Declarations for SPARQL Queries, the value of sh:select must be valid SPARQL 1.1 SELECT query with exactly one result variable. The blank node may also have exactly one value for the property sh:nodes which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${d}label`),t.literal("SPARQL SELECT Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${n}property`),l[32],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${n}property`),l[33],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${n}property`),l[34],t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}select`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${d}comment`),t.literal("The class of validators based on SPARQL SELECT queries. The queries are evaluated for each focus node and are supposed to produce bindings for all focus nodes that do not conform.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${d}label`),t.literal("SPARQL SELECT validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}comment`),t.literal("The class of targets that are based on SPARQL queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}label`),t.literal("SPARQL target","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTarget`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Target`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}comment`),t.literal("The (meta) class for parameterizable targets that are based on SPARQL queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}label`),t.literal("SPARQL target type","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLTargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}TargetType`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(`${d}comment`),t.literal("The class of SPARQL executables based on a SPARQL UPDATE.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(`${d}label`),t.literal("SPARQL UPDATE executable","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}SPARQLExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}Severity`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Severity`),t.namedNode(`${d}comment`),t.literal("The class of validation result severity levels, including violation and warning levels.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Severity`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Severity`),t.namedNode(`${d}label`),t.literal("Severity","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Severity`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}Shape`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Shape`),t.namedNode(`${d}comment`),t.literal("A shape is a collection of constraints that may be targeted for certain nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Shape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Shape`),t.namedNode(`${d}label`),t.literal("Shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Shape`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${d}comment`),t.literal("A sum expression is a blank node with exactly one value for the property sh:sum which is a well-formed node expression."),t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${d}label`),t.literal("Sum Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${n}property`),l[35],t.namedNode(n)),t.quad(t.namedNode(`${n}SumExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}sum`),t.namedNode(n)),t.quad(t.namedNode(`${n}Target`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Target`),t.namedNode(`${d}comment`),t.literal("The base class of targets such as those based on SPARQL queries.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Target`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Target`),t.namedNode(`${d}label`),t.literal("Target","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Target`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${d}comment`),t.literal("The (meta) class for parameterizable targets.\tInstances of this are instantiated as values of the sh:target property.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${d}label`),t.literal("Target type","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}TargetType`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Parameterizable`),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${d}label`),t.literal("A rule based on triple (subject, predicate, object) pattern.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}Rule`),t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${n}property`),l[36],t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${n}property`),l[37],t.namedNode(n)),t.quad(t.namedNode(`${n}TripleRule`),t.namedNode(`${n}property`),l[38],t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${a}type`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${d}comment`),t.literal("A union expression is a blank node with exactly one value for the property sh:union which is a well-formed SHACL list with at least two members (which are well-formed node expressions)."),t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${d}label`),t.literal("Union Expression"),t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${n}property`),l[39],t.namedNode(n)),t.quad(t.namedNode(`${n}UnionExpression`),t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${n}union`),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(`${n}datatype`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(`${n}path`),t.namedNode(`${n}uniqueLang`),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to specify that no pair of value nodes may use the same language tag.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent`),t.namedNode(`${d}label`),t.literal("Unique-languages constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}UniqueLangConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}UniqueLangConstraintComponent-uniqueLang`),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationReport`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationReport`),t.namedNode(`${d}comment`),t.literal("The class of SHACL validation reports.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationReport`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationReport`),t.namedNode(`${d}label`),t.literal("Validation report","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationReport`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationResult`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationResult`),t.namedNode(`${d}comment`),t.literal("The class of validation results.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationResult`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationResult`),t.namedNode(`${d}label`),t.literal("Validation result","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ValidationResult`),t.namedNode(`${d}subClassOf`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}Validator`),t.namedNode(`${a}type`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}Validator`),t.namedNode(`${d}comment`),t.literal("The class of validators, which provide instructions on how to process a constraint definition. This class serves as base class for the SPARQL-based validators and other possible implementations.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Validator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Validator`),t.namedNode(`${d}label`),t.literal("Validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Validator`),t.namedNode(`${d}subClassOf`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}Violation`),t.namedNode(`${a}type`),t.namedNode(`${n}Severity`),t.namedNode(n)),t.quad(t.namedNode(`${n}Violation`),t.namedNode(`${d}comment`),t.literal("The severity for a violation validation result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Violation`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Violation`),t.namedNode(`${d}label`),t.literal("Violation","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Warning`),t.namedNode(`${a}type`),t.namedNode(`${n}Severity`),t.namedNode(n)),t.quad(t.namedNode(`${n}Warning`),t.namedNode(`${d}comment`),t.literal("The severity for a warning validation result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}Warning`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}Warning`),t.namedNode(`${d}label`),t.literal("Warning","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent-xone`),t.namedNode(`${a}type`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent-xone`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent-xone`),t.namedNode(`${n}path`),t.namedNode(`${n}xone`),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent`),t.namedNode(`${d}comment`),t.literal("A constraint component that can be used to restrict the value nodes so that they conform to exactly one out of several provided shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent`),t.namedNode(`${d}label`),t.literal("Exactly one constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}XoneConstraintComponent`),t.namedNode(`${n}parameter`),t.namedNode(`${n}XoneConstraintComponent-xone`),t.namedNode(n)),t.quad(t.namedNode(`${n}alternativePath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}alternativePath`),t.namedNode(`${d}comment`),t.literal("The (single) value of this property must be a list of path elements, representing the elements of alternative paths.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}alternativePath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}alternativePath`),t.namedNode(`${d}label`),t.literal("alternative path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}alternativePath`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}and`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}and`),t.namedNode(`${d}comment`),t.literal("RDF list of shapes to validate the value nodes against.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}and`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}and`),t.namedNode(`${d}label`),t.literal("and","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}and`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${d}comment`),t.literal("The annotation property that shall be set.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${d}domain`),t.namedNode(`${n}ResultAnnotation`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${d}label`),t.literal("annotation property","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationProperty`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationValue`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationValue`),t.namedNode(`${d}comment`),t.literal("The (default) values of the annotation property.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationValue`),t.namedNode(`${d}domain`),t.namedNode(`${n}ResultAnnotation`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationValue`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationValue`),t.namedNode(`${d}label`),t.literal("annotation value","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${d}comment`),t.literal("The name of the SPARQL variable from the SELECT clause that shall be used for the values.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${d}domain`),t.namedNode(`${n}ResultAnnotation`),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${d}label`),t.literal("annotation variable name","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}annotationVarName`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${d}comment`),t.literal("The SPARQL ASK query to execute.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLAskExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${d}label`),t.literal("ask","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ask`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}class`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}class`),t.namedNode(`${d}comment`),t.literal("The type that all value nodes must have.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}class`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}class`),t.namedNode(`${d}label`),t.literal("class","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}class`),t.namedNode(`${d}range`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}closed`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}closed`),t.namedNode(`${d}comment`),t.literal("If set to true then the shape is closed.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}closed`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}closed`),t.namedNode(`${d}label`),t.literal("closed","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}closed`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${d}comment`),t.literal("The shapes that the focus nodes need to conform to before a rule is executed on them.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${d}domain`),t.namedNode(`${n}Rule`),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${d}label`),t.literal("condition","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}condition`),t.namedNode(`${d}range`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${d}comment`),t.literal("True if the validation did not produce any validation results, and false otherwise.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${d}domain`),t.namedNode(`${n}ValidationReport`),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${d}label`),t.literal("conforms","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}conforms`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${d}comment`),t.literal("The SPARQL CONSTRUCT query to execute.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLConstructExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${d}label`),t.literal("construct","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}construct`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}count`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}datatype`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}datatype`),t.namedNode(`${d}comment`),t.literal("Specifies an RDF datatype that all value nodes must have.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}datatype`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}datatype`),t.namedNode(`${d}label`),t.literal("datatype","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}datatype`),t.namedNode(`${d}range`),t.namedNode(`${d}Datatype`),t.namedNode(n)),t.quad(t.namedNode(`${n}deactivated`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}deactivated`),t.namedNode(`${d}comment`),t.literal("If set to true then all nodes conform to this.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}deactivated`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}deactivated`),t.namedNode(`${d}label`),t.literal("deactivated","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}deactivated`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${d}comment`),t.literal("Links a resource with its namespace prefix declarations.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${d}domain`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${d}label`),t.literal("declare","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}declare`),t.namedNode(`${d}range`),t.namedNode(`${n}PrefixDeclaration`),t.namedNode(n)),t.quad(t.namedNode(`${n}defaultValue`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}defaultValue`),t.namedNode(`${d}comment`),t.literal("A default value for a property, for example for user interface tools to pre-populate input fields.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}defaultValue`),t.namedNode(`${d}domain`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}defaultValue`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}defaultValue`),t.namedNode(`${d}label`),t.literal("default value","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}desc`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}description`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}description`),t.namedNode(`${d}comment`),t.literal("Human-readable descriptions for the property in the context of the surrounding shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}description`),t.namedNode(`${d}domain`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}description`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}description`),t.namedNode(`${d}label`),t.literal("description","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${d}comment`),t.literal("Links a result with other results that provide more details, for example to describe violations against nested shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${d}label`),t.literal("detail","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}detail`),t.namedNode(`${d}range`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}disjoint`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}disjoint`),t.namedNode(`${d}comment`),t.literal("Specifies a property where the set of values must be disjoint with the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}disjoint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}disjoint`),t.namedNode(`${d}label`),t.literal("disjoint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}disjoint`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}distinct`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}else`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${d}comment`),t.literal("An entailment regime that indicates what kind of inferencing is required by a shapes graph.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${d}domain`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${d}label`),t.literal("entailment","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}entailment`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}equals`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}equals`),t.namedNode(`${d}comment`),t.literal("Specifies a property that must have the same values as the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}equals`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}equals`),t.namedNode(`${d}label`),t.literal("equals","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}equals`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}exists`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}expression`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}expression`),t.namedNode(`${d}comment`),t.literal("The node expression that must return true for the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}expression`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}expression`),t.namedNode(`${d}label`),t.literal("expression","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}filterShape`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}filterShape`),t.namedNode(`${d}comment`),t.literal("The shape that all input nodes of the expression need to conform to.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}filterShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}filterShape`),t.namedNode(`${d}label`),t.literal("filter shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}filterShape`),t.namedNode(`${d}range`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}flags`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}flags`),t.namedNode(`${d}comment`),t.literal("An optional flag to be used with regular expression pattern matching.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}flags`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}flags`),t.namedNode(`${d}label`),t.literal("flags","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}flags`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}focusNode`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}focusNode`),t.namedNode(`${d}comment`),t.literal("The focus node that was validated when the result was produced.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}focusNode`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}focusNode`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}focusNode`),t.namedNode(`${d}label`),t.literal("focus node","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${d}comment`),t.literal("Can be used to link to a property group to indicate that a property shape belongs to a group of related property shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${d}domain`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${d}label`),t.literal("group","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}group`),t.namedNode(`${d}range`),t.namedNode(`${n}PropertyGroup`),t.namedNode(n)),t.quad(t.namedNode(`${n}groupConcat`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}hasValue`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}hasValue`),t.namedNode(`${d}comment`),t.literal("Specifies a value that must be among the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}hasValue`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}hasValue`),t.namedNode(`${d}label`),t.literal("has value","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}if`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}ignoredProperties`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}ignoredProperties`),t.namedNode(`${d}comment`),t.literal("An optional RDF list of properties that are also permitted in addition to those explicitly enumerated via sh:property/sh:path.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ignoredProperties`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}ignoredProperties`),t.namedNode(`${d}label`),t.literal("ignored properties","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}ignoredProperties`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}in`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}in`),t.namedNode(`${d}comment`),t.literal("Specifies a list of allowed values so that each value node must be among the members of the given list.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}in`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}in`),t.namedNode(`${d}label`),t.literal("in","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}in`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}intersection`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}intersection`),t.namedNode(`${d}comment`),t.literal("A list of node expressions that shall be intersected.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}intersection`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}intersection`),t.namedNode(`${d}label`),t.literal("intersection","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}inversePath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}inversePath`),t.namedNode(`${d}comment`),t.literal("The (single) value of this property represents an inverse path (object to subject).","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}inversePath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}inversePath`),t.namedNode(`${d}label`),t.literal("inverse path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}inversePath`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}js`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}js`),t.namedNode(`${d}comment`),t.literal("Constraints expressed in JavaScript."),t.namedNode(n)),t.quad(t.namedNode(`${n}js`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}js`),t.namedNode(`${d}label`),t.literal("JavaScript constraint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}js`),t.namedNode(`${d}range`),t.namedNode(`${n}JSConstraint`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${d}comment`),t.literal("The name of the JavaScript function to execute.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${d}domain`),t.namedNode(`${n}JSExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${d}label`),t.literal("JavaScript function name","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsFunctionName`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibrary`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibrary`),t.namedNode(`${d}comment`),t.literal("Declares which JavaScript libraries are needed to execute this.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibrary`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibrary`),t.namedNode(`${d}label`),t.literal("JavaScript library","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibrary`),t.namedNode(`${d}range`),t.namedNode(`${n}JSLibrary`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${d}comment`),t.literal("Declares the URLs of a JavaScript library. This should be the absolute URL of a JavaScript file. Implementations may redirect those to local files.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${d}domain`),t.namedNode(`${n}JSLibrary`),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${d}label`),t.literal("JavaScript library URL","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}jsLibraryURL`),t.namedNode(`${d}range`),t.namedNode(`${i}anyURI`),t.namedNode(n)),t.quad(t.namedNode(`${n}labelTemplate`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}labelTemplate`),t.namedNode(`${d}comment`),t.literal("Outlines how human-readable labels of instances of the associated Parameterizable shall be produced. The values can contain {?paramName} as placeholders for the actual values of the given parameter.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}labelTemplate`),t.namedNode(`${d}domain`),t.namedNode(`${n}Parameterizable`),t.namedNode(n)),t.quad(t.namedNode(`${n}labelTemplate`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}labelTemplate`),t.namedNode(`${d}label`),t.literal("label template","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}languageIn`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}languageIn`),t.namedNode(`${d}comment`),t.literal("Specifies a list of language tags that all value nodes must have.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}languageIn`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}languageIn`),t.namedNode(`${d}label`),t.literal("language in","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}languageIn`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThan`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThan`),t.namedNode(`${d}comment`),t.literal("Specifies a property that must have smaller values than the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThan`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThan`),t.namedNode(`${d}label`),t.literal("less than","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThan`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThanOrEquals`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThanOrEquals`),t.namedNode(`${d}comment`),t.literal("Specifies a property that must have smaller or equal values than the value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThanOrEquals`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThanOrEquals`),t.namedNode(`${d}label`),t.literal("less than or equals","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}lessThanOrEquals`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}limit`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}max`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxCount`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxCount`),t.namedNode(`${d}comment`),t.literal("Specifies the maximum number of values in the set of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}maxCount`),t.namedNode(`${d}label`),t.literal("max count","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxCount`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxExclusive`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxExclusive`),t.namedNode(`${d}comment`),t.literal("Specifies the maximum exclusive value of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxExclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}maxExclusive`),t.namedNode(`${d}label`),t.literal("max exclusive","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxInclusive`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxInclusive`),t.namedNode(`${d}comment`),t.literal("Specifies the maximum inclusive value of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxInclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}maxInclusive`),t.namedNode(`${d}label`),t.literal("max inclusive","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxLength`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}maxLength`),t.namedNode(`${d}comment`),t.literal("Specifies the maximum string length of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxLength`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}maxLength`),t.namedNode(`${d}label`),t.literal("max length","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}maxLength`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}message`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}message`),t.namedNode(`${d}comment`),t.literal("A human-readable message (possibly with placeholders for variables) explaining the cause of the result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}message`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}message`),t.namedNode(`${d}label`),t.literal("message","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}min`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}minCount`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}minCount`),t.namedNode(`${d}comment`),t.literal("Specifies the minimum number of values in the set of value nodes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}minCount`),t.namedNode(`${d}label`),t.literal("min count","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minCount`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}minExclusive`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}minExclusive`),t.namedNode(`${d}comment`),t.literal("Specifies the minimum exclusive value of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minExclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}minExclusive`),t.namedNode(`${d}label`),t.literal("min exclusive","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minInclusive`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}minInclusive`),t.namedNode(`${d}comment`),t.literal("Specifies the minimum inclusive value of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minInclusive`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}minInclusive`),t.namedNode(`${d}label`),t.literal("min inclusive","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minLength`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}minLength`),t.namedNode(`${d}comment`),t.literal("Specifies the minimum string length of each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minLength`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}minLength`),t.namedNode(`${d}label`),t.literal("min length","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}minLength`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}minus`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}name`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}name`),t.namedNode(`${d}comment`),t.literal("Human-readable labels for the property in the context of the surrounding shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}name`),t.namedNode(`${d}domain`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}name`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}name`),t.namedNode(`${d}label`),t.literal("name","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${d}comment`),t.literal("The namespace associated with a prefix in a prefix declaration.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${d}domain`),t.namedNode(`${n}PrefixDeclaration`),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${d}label`),t.literal("namespace","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}namespace`),t.namedNode(`${d}range`),t.namedNode(`${i}anyURI`),t.namedNode(n)),t.quad(t.namedNode(`${n}node`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}node`),t.namedNode(`${d}comment`),t.literal("Specifies the node shape that all value nodes must conform to.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}node`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}node`),t.namedNode(`${d}label`),t.literal("node","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}node`),t.namedNode(`${d}range`),t.namedNode(`${n}NodeShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeKind`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeKind`),t.namedNode(`${d}comment`),t.literal("Specifies the node kind (e.g. IRI or literal) each value node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeKind`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeKind`),t.namedNode(`${d}label`),t.literal("node kind","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeKind`),t.namedNode(`${d}range`),t.namedNode(`${n}NodeKind`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${d}comment`),t.literal("The validator(s) used to evaluate a constraint in the context of a node shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${d}domain`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${d}label`),t.literal("shape validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}nodeValidator`),t.namedNode(`${d}range`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodes`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}nodes`),t.namedNode(`${d}comment`),t.literal("The node expression producing the input nodes of a filter shape expression.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}nodes`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}nodes`),t.namedNode(`${d}label`),t.literal("nodes","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}not`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}not`),t.namedNode(`${d}comment`),t.literal("Specifies a shape that the value nodes must not conform to.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}not`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}not`),t.namedNode(`${d}label`),t.literal("not","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}not`),t.namedNode(`${d}range`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}object`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}object`),t.namedNode(`${d}comment`),t.literal("An expression producing the nodes that shall be inferred as objects.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}object`),t.namedNode(`${d}domain`),t.namedNode(`${n}TripleRule`),t.namedNode(n)),t.quad(t.namedNode(`${n}object`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}object`),t.namedNode(`${d}label`),t.literal("object","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}offset`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}oneOrMorePath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}oneOrMorePath`),t.namedNode(`${d}comment`),t.literal("The (single) value of this property represents a path that is matched one or more times.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}oneOrMorePath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}oneOrMorePath`),t.namedNode(`${d}label`),t.literal("one or more path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}oneOrMorePath`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${d}comment`),t.literal("Indicates whether a parameter is optional.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${d}domain`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${d}label`),t.literal("optional","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}optional`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}or`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}or`),t.namedNode(`${d}comment`),t.literal("Specifies a list of shapes so that the value nodes must conform to at least one of the shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}or`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}or`),t.namedNode(`${d}label`),t.literal("or","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}or`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}order`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}order`),t.namedNode(`${d}comment`),t.literal("Specifies the relative order of this compared to its siblings. For example use 0 for the first, 1 for the second.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}order`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}order`),t.namedNode(`${d}label`),t.literal("order","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}orderBy`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${d}comment`),t.literal("The parameters of a function or constraint component.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${d}domain`),t.namedNode(`${n}Parameterizable`),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${d}label`),t.literal("parameter","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}parameter`),t.namedNode(`${d}range`),t.namedNode(`${n}Parameter`),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${d}comment`),t.literal("Specifies the property path of a property shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${d}domain`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${d}label`),t.literal("path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}path`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}pattern`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}pattern`),t.namedNode(`${d}comment`),t.literal("Specifies a regular expression pattern that the string representations of the value nodes must match.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}pattern`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}pattern`),t.namedNode(`${d}label`),t.literal("pattern","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}pattern`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}predicate`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}predicate`),t.namedNode(`${d}comment`),t.literal("An expression producing the properties that shall be inferred as predicates.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}predicate`),t.namedNode(`${d}domain`),t.namedNode(`${n}TripleRule`),t.namedNode(n)),t.quad(t.namedNode(`${n}predicate`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}predicate`),t.namedNode(`${d}label`),t.literal("predicate","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${d}comment`),t.literal("The prefix of a prefix declaration.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${d}domain`),t.namedNode(`${n}PrefixDeclaration`),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${d}label`),t.literal("prefix","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}prefix`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${d}comment`),t.literal("The prefixes that shall be applied before parsing the associated SPARQL query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${d}label`),t.literal("prefixes","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}prefixes`),t.namedNode(`${d}range`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${d}comment`),t.literal("Links a shape to its property shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${d}label`),t.literal("property","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}property`),t.namedNode(`${d}range`),t.namedNode(`${n}PropertyShape`),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${d}comment`),t.literal("The validator(s) used to evaluate a constraint in the context of a property shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${d}domain`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${d}label`),t.literal("property validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}propertyValidator`),t.namedNode(`${d}range`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(`${d}comment`),t.literal("The maximum number of value nodes that can conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(`${d}label`),t.literal("qualified max count","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMaxCount`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMinCount`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMinCount`),t.namedNode(`${d}comment`),t.literal("The minimum number of value nodes that must conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMinCount`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMinCount`),t.namedNode(`${d}label`),t.literal("qualified min count","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedMinCount`),t.namedNode(`${d}range`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShape`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShape`),t.namedNode(`${d}comment`),t.literal("The shape that a specified number of values must conform to.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShape`),t.namedNode(`${d}label`),t.literal("qualified value shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShape`),t.namedNode(`${d}range`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(`${d}comment`),t.literal("Can be used to mark the qualified value shape to be disjoint with its sibling shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(`${d}label`),t.literal("qualified value shapes disjoint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}qualifiedValueShapesDisjoint`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${d}comment`),t.literal("The validation results contained in a validation report.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${d}domain`),t.namedNode(`${n}ValidationReport`),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${d}label`),t.literal("result","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}result`),t.namedNode(`${d}range`),t.namedNode(`${n}ValidationResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${d}comment`),t.literal("Links a SPARQL validator with zero or more sh:ResultAnnotation instances, defining how to derive additional result properties based on the variables of the SELECT query.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLSelectValidator`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${d}label`),t.literal("result annotation","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultAnnotation`),t.namedNode(`${d}range`),t.namedNode(`${n}ResultAnnotation`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultMessage`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultMessage`),t.namedNode(`${d}comment`),t.literal("Human-readable messages explaining the cause of the result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultMessage`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultMessage`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}resultMessage`),t.namedNode(`${d}label`),t.literal("result message","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${d}comment`),t.literal("The path of a validation result, based on the path of the validated property shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${d}label`),t.literal("result path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultPath`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${d}comment`),t.literal("The severity of the result, e.g. warning.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${d}label`),t.literal("result severity","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}resultSeverity`),t.namedNode(`${d}range`),t.namedNode(`${n}Severity`),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${d}comment`),t.literal("The expected type of values returned by the associated function.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${d}domain`),t.namedNode(`${n}Function`),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${d}label`),t.literal("return type","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}returnType`),t.namedNode(`${d}range`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${d}comment`),t.literal("The rules linked to a shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${d}label`),t.literal("rule","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}rule`),t.namedNode(`${d}range`),t.namedNode(`${n}Rule`),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${d}comment`),t.literal("The SPARQL SELECT query to execute.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLSelectExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${d}label`),t.literal("select","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}select`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}separator`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${d}comment`),t.literal("Defines the severity that validation results produced by a shape must have. Defaults to sh:Violation.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${d}label`),t.literal("severity","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}severity`),t.namedNode(`${d}range`),t.namedNode(`${n}Severity`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${d}comment`),t.literal("Shapes graphs that should be used when validating this data graph.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${d}domain`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${d}label`),t.literal("shapes graph","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraph`),t.namedNode(`${d}range`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${d}comment`),t.literal("If true then the validation engine was certain that the shapes graph has passed all SHACL syntax requirements during the validation process.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${d}domain`),t.namedNode(`${n}ValidationReport`),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${d}label`),t.literal("shapes graph well-formed","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}shapesGraphWellFormed`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraint`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraint`),t.namedNode(`${d}comment`),t.literal("The constraint that was validated when the result was produced.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraint`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraint`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraint`),t.namedNode(`${d}label`),t.literal("source constraint","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${d}comment`),t.literal("The constraint component that is the source of the result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${d}label`),t.literal("source constraint component","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceConstraintComponent`),t.namedNode(`${d}range`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${d}comment`),t.literal("The shape that is was validated when the result was produced.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${d}label`),t.literal("source shape","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sourceShape`),t.namedNode(`${d}range`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${d}comment`),t.literal("Links a shape with SPARQL constraints.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${d}label`),t.literal("constraint (in SPARQL)","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}sparql`),t.namedNode(`${d}range`),t.namedNode(`${n}SPARQLConstraint`),t.namedNode(n)),t.quad(t.namedNode(`${n}subject`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}subject`),t.namedNode(`${d}comment`),t.literal("An expression producing the resources that shall be inferred as subjects.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}subject`),t.namedNode(`${d}domain`),t.namedNode(`${n}TripleRule`),t.namedNode(n)),t.quad(t.namedNode(`${n}subject`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}subject`),t.namedNode(`${d}label`),t.literal("subject","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${d}comment`),t.literal("Suggested shapes graphs for this ontology. The values of this property may be used in the absence of specific sh:shapesGraph statements.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${d}domain`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${d}label`),t.literal("suggested shapes graph","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}suggestedShapesGraph`),t.namedNode(`${d}range`),t.namedNode(`${o}Ontology`),t.namedNode(n)),t.quad(t.namedNode(`${n}sum`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${d}comment`),t.literal("Links a shape to a target specified by an extension language, for example instances of sh:SPARQLTarget.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${d}label`),t.literal("target","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}target`),t.namedNode(`${d}range`),t.namedNode(`${n}Target`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${d}comment`),t.literal("Links a shape to a class, indicating that all instances of the class must conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${d}label`),t.literal("target class","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetClass`),t.namedNode(`${d}range`),t.namedNode(`${d}Class`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetNode`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetNode`),t.namedNode(`${d}comment`),t.literal("Links a shape to individual nodes, indicating that these nodes must conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetNode`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetNode`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}targetNode`),t.namedNode(`${d}label`),t.literal("target node","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${d}comment`),t.literal("Links a shape to a property, indicating that all all objects of triples that have the given property as their predicate must conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${d}label`),t.literal("target objects of","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetObjectsOf`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${d}comment`),t.literal("Links a shape to a property, indicating that all subjects of triples that have the given property as their predicate must conform to the shape.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${d}domain`),t.namedNode(`${n}Shape`),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${d}label`),t.literal("target subjects of","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}targetSubjectsOf`),t.namedNode(`${d}range`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}then`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}this`),t.namedNode(`${a}type`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}this`),t.namedNode(`${d}comment`),t.literal("A node expression that represents the current focus node.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}this`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}this`),t.namedNode(`${d}label`),t.literal("this","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}union`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}union`),t.namedNode(`${d}comment`),t.literal("A list of node expressions that shall be used together.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}union`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}union`),t.namedNode(`${d}label`),t.literal("union","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}uniqueLang`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}uniqueLang`),t.namedNode(`${d}comment`),t.literal("Specifies whether all node values must have a unique (or no) language tag.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}uniqueLang`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}uniqueLang`),t.namedNode(`${d}label`),t.literal("unique languages","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}uniqueLang`),t.namedNode(`${d}range`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${d}comment`),t.literal("The SPARQL UPDATE to execute.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${d}domain`),t.namedNode(`${n}SPARQLUpdateExecutable`),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${d}label`),t.literal("update","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}update`),t.namedNode(`${d}range`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${d}comment`),t.literal("The validator(s) used to evaluate constraints of either node or property shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${d}domain`),t.namedNode(`${n}ConstraintComponent`),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${d}label`),t.literal("validator","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}validator`),t.namedNode(`${d}range`),t.namedNode(`${n}Validator`),t.namedNode(n)),t.quad(t.namedNode(`${n}value`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}value`),t.namedNode(`${d}comment`),t.literal("An RDF node that has caused the result.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}value`),t.namedNode(`${d}domain`),t.namedNode(`${n}AbstractResult`),t.namedNode(n)),t.quad(t.namedNode(`${n}value`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}value`),t.namedNode(`${d}label`),t.literal("value","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}values`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}xone`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}xone`),t.namedNode(`${d}comment`),t.literal("Specifies a list of shapes so that the value nodes must conform to exactly one of the shapes.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}xone`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}xone`),t.namedNode(`${d}label`),t.literal("exactly one","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}xone`),t.namedNode(`${d}range`),t.namedNode(`${a}List`),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${d}comment`),t.literal("The (single) value of this property represents a path that is matched zero or more times.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${d}label`),t.literal("zero or more path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrOnePath`),t.namedNode(`${a}type`),t.namedNode(`${a}Property`),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrOnePath`),t.namedNode(`${d}comment`),t.literal("The (single) value of this property represents a path that is matched zero or one times.","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrOnePath`),t.namedNode(`${d}isDefinedBy`),t.namedNode(n),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrOnePath`),t.namedNode(`${d}label`),t.literal("zero or one path","en"),t.namedNode(n)),t.quad(t.namedNode(`${n}zeroOrOnePath`),t.namedNode(`${d}range`),t.namedNode(`${d}Resource`),t.namedNode(n)),t.quad(l[4],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[4],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[4],t.namedNode(`${n}node`),t.namedNode(`${r}ShapeShape`),t.namedNode(n)),t.quad(l[4],t.namedNode(`${n}path`),t.namedNode(`${n}filterShape`),t.namedNode(n)),t.quad(l[40],t.namedNode(`${a}first`),t.namedNode(`${n}IfExpression`),t.namedNode(n)),t.quad(l[40],t.namedNode(`${a}rest`),l[41],t.namedNode(n)),t.quad(l[16],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[16],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[16],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[16],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[32],t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(l[32],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[32],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[32],t.namedNode(`${n}path`),t.namedNode(`${n}select`),t.namedNode(n)),t.quad(l[6],t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(l[6],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[6],t.namedNode(`${n}path`),t.namedNode(`${n}separator`),t.namedNode(n)),t.quad(l[42],t.namedNode(`${a}first`),t.namedNode(`${n}BlankNodeOrLiteral`),t.namedNode(n)),t.quad(l[42],t.namedNode(`${a}rest`),l[43],t.namedNode(n)),t.quad(l[19],t.namedNode(`${a}first`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(l[19],t.namedNode(`${a}rest`),l[44],t.namedNode(n)),t.quad(l[45],t.namedNode(`${a}first`),t.namedNode(`${n}MinExpression`),t.namedNode(n)),t.quad(l[45],t.namedNode(`${a}rest`),l[46],t.namedNode(n)),t.quad(l[47],t.namedNode(`${a}first`),t.namedNode(`${n}SPARQLAskExpression`),t.namedNode(n)),t.quad(l[47],t.namedNode(`${a}rest`),l[48],t.namedNode(n)),t.quad(l[25],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[25],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[25],t.namedNode(`${n}node`),t.namedNode(`${r}PathShape`),t.namedNode(n)),t.quad(l[25],t.namedNode(`${n}path`),t.namedNode(`${n}path`),t.namedNode(n)),t.quad(l[49],t.namedNode(`${a}first`),t.namedNode(`${n}MinusExpression`),t.namedNode(n)),t.quad(l[49],t.namedNode(`${a}rest`),l[50],t.namedNode(n)),t.quad(l[46],t.namedNode(`${a}first`),t.namedNode(`${n}MaxExpression`),t.namedNode(n)),t.quad(l[46],t.namedNode(`${a}rest`),l[51],t.namedNode(n)),t.quad(l[52],t.namedNode(`${a}first`),t.namedNode(`${n}LimitExpression`),t.namedNode(n)),t.quad(l[52],t.namedNode(`${a}rest`),l[53],t.namedNode(n)),t.quad(l[8],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[8],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[8],t.namedNode(`${n}path`),t.namedNode(`${n}then`),t.namedNode(n)),t.quad(l[44],t.namedNode(`${a}first`),t.namedNode(`${n}IRI`),t.namedNode(n)),t.quad(l[44],t.namedNode(`${a}rest`),l[54],t.namedNode(n)),t.quad(l[55],t.namedNode(`${n}zeroOrMorePath`),t.namedNode(`${a}rest`),t.namedNode(n)),t.quad(l[5],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[5],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[5],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[56],t.namedNode(`${a}first`),l[57],t.namedNode(n)),t.quad(l[56],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n)),t.quad(l[0],t.namedNode(`${n}namespace`),t.literal("http://www.w3.org/ns/shacl#"),t.namedNode(n)),t.quad(l[0],t.namedNode(`${n}prefix`),t.literal("sh"),t.namedNode(n)),t.quad(l[58],t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNode`),t.namedNode(n)),t.quad(l[58],t.namedNode(`${n}not`),l[59],t.namedNode(n)),t.quad(l[18],t.namedNode(`${a}first`),t.namedNode(`${n}FocusNodeOrConstantTermExpression`),t.namedNode(n)),t.quad(l[18],t.namedNode(`${a}rest`),l[60],t.namedNode(n)),t.quad(l[15],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[15],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[15],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[15],t.namedNode(`${n}path`),t.namedNode(`${n}min`),t.namedNode(n)),t.quad(l[30],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[30],t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(n)),t.quad(l[30],t.namedNode(`${n}path`),t.namedNode(`${n}prefixes`),t.namedNode(n)),t.quad(l[61],t.namedNode(`${a}first`),l[55],t.namedNode(n)),t.quad(l[61],t.namedNode(`${a}rest`),l[62],t.namedNode(n)),t.quad(l[1],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[1],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[1],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[1],t.namedNode(`${n}path`),t.namedNode(`${n}count`),t.namedNode(n)),t.quad(l[12],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[12],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[12],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[12],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[33],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[33],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[33],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[63],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[63],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[63],t.namedNode(`${n}node`),t.namedNode(`${s}ListShape`),t.namedNode(n)),t.quad(l[63],t.namedNode(`${n}path`),t.namedNode(`${n}intersection`),t.namedNode(n)),t.quad(l[63],t.namedNode(`${n}property`),l[64],t.namedNode(n)),t.quad(l[13],t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(l[13],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[13],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[13],t.namedNode(`${n}path`),t.namedNode(`${n}limit`),t.namedNode(n)),t.quad(l[59],t.namedNode(`${a}first`),t.namedNode(`${n}ExistsExpression`),t.namedNode(n)),t.quad(l[59],t.namedNode(`${a}rest`),l[40],t.namedNode(n)),t.quad(l[36],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[36],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[36],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[36],t.namedNode(`${n}path`),t.namedNode(`${n}object`),t.namedNode(n)),t.quad(l[2],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[2],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[2],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[2],t.namedNode(`${n}path`),t.namedNode(`${n}distinct`),t.namedNode(n)),t.quad(l[65],t.namedNode(`${a}first`),t.namedNode(`${n}IntersectionExpression`),t.namedNode(n)),t.quad(l[65],t.namedNode(`${a}rest`),l[66],t.namedNode(n)),t.quad(l[57],t.namedNode(`${n}xone`),l[59],t.namedNode(n)),t.quad(l[34],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[34],t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(n)),t.quad(l[34],t.namedNode(`${n}path`),t.namedNode(`${n}prefixes`),t.namedNode(n)),t.quad(l[67],t.namedNode(`${a}first`),t.namedNode(`${n}GroupConcatExpression`),t.namedNode(n)),t.quad(l[67],t.namedNode(`${a}rest`),l[68],t.namedNode(n)),t.quad(l[20],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[20],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[20],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[20],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[69],t.namedNode(`${n}property`),l[63],t.namedNode(n)),t.quad(l[27],t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(l[27],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[27],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[27],t.namedNode(`${n}path`),t.namedNode(`${n}ask`),t.namedNode(n)),t.quad(l[28],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[28],t.namedNode(`${n}nodeKind`),t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(n)),t.quad(l[28],t.namedNode(`${n}path`),t.namedNode(`${n}prefixes`),t.namedNode(n)),t.quad(l[64],t.namedNode(`${n}minCount`),t.literal("2",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[64],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[64],t.namedNode(`${n}path`),l[61],t.namedNode(n)),t.quad(l[22],t.namedNode(`${n}datatype`),t.namedNode(`${i}boolean`),t.namedNode(n)),t.quad(l[22],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[22],t.namedNode(`${n}path`),t.namedNode(`${n}desc`),t.namedNode(n)),t.quad(l[29],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[29],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[29],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[41],t.namedNode(`${a}first`),t.namedNode(`${n}FilterShapeExpression`),t.namedNode(n)),t.quad(l[41],t.namedNode(`${a}rest`),l[70],t.namedNode(n)),t.quad(l[62],t.namedNode(`${a}first`),t.namedNode(`${a}first`),t.namedNode(n)),t.quad(l[62],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n)),t.quad(l[48],t.namedNode(`${a}first`),t.namedNode(`${n}SPARQLSelectExpression`),t.namedNode(n)),t.quad(l[48],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n)),t.quad(l[26],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[26],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[26],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[71],t.namedNode(`${a}first`),t.namedNode(`${n}CountExpression`),t.namedNode(n)),t.quad(l[71],t.namedNode(`${a}rest`),l[45],t.namedNode(n)),t.quad(l[7],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[7],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[7],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[7],t.namedNode(`${n}path`),t.namedNode(`${n}groupConcat`),t.namedNode(n)),t.quad(l[54],t.namedNode(`${a}first`),t.namedNode(`${n}Literal`),t.namedNode(n)),t.quad(l[54],t.namedNode(`${a}rest`),l[72],t.namedNode(n)),t.quad(l[23],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[23],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[23],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[23],t.namedNode(`${n}path`),t.namedNode(`${n}nodes`),t.namedNode(n)),t.quad(l[21],t.namedNode(`${n}datatype`),t.namedNode(`${i}integer`),t.namedNode(n)),t.quad(l[21],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[21],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[21],t.namedNode(`${n}path`),t.namedNode(`${n}offset`),t.namedNode(n)),t.quad(l[50],t.namedNode(`${a}first`),t.namedNode(`${n}DistinctExpression`),t.namedNode(n)),t.quad(l[50],t.namedNode(`${a}rest`),l[71],t.namedNode(n)),t.quad(l[14],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[14],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[14],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[14],t.namedNode(`${n}path`),t.namedNode(`${n}max`),t.namedNode(n)),t.quad(l[51],t.namedNode(`${a}first`),t.namedNode(`${n}SumExpression`),t.namedNode(n)),t.quad(l[51],t.namedNode(`${a}rest`),l[67],t.namedNode(n)),t.quad(l[68],t.namedNode(`${a}first`),t.namedNode(`${n}OrderByExpression`),t.namedNode(n)),t.quad(l[68],t.namedNode(`${a}rest`),l[52],t.namedNode(n)),t.quad(l[60],t.namedNode(`${a}first`),l[58],t.namedNode(n)),t.quad(l[60],t.namedNode(`${a}rest`),l[56],t.namedNode(n)),t.quad(l[24],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[24],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[24],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[24],t.namedNode(`${n}path`),t.namedNode(`${n}orderBy`),t.namedNode(n)),t.quad(l[35],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[35],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[35],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[35],t.namedNode(`${n}path`),t.namedNode(`${n}sum`),t.namedNode(n)),t.quad(l[3],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[3],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[3],t.namedNode(`${n}node`),t.namedNode(`${r}ShapeShape`),t.namedNode(n)),t.quad(l[3],t.namedNode(`${n}path`),t.namedNode(`${n}exists`),t.namedNode(n)),t.quad(l[37],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[37],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[37],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[37],t.namedNode(`${n}path`),t.namedNode(`${n}subject`),t.namedNode(n)),t.quad(l[11],t.namedNode(`${n}and`),l[73],t.namedNode(n)),t.quad(l[11],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[11],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[11],t.namedNode(`${n}node`),t.namedNode(`${s}ListShape`),t.namedNode(n)),t.quad(l[11],t.namedNode(`${n}path`),t.namedNode(`${n}intersection`),t.namedNode(n)),t.quad(l[9],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[9],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[9],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[9],t.namedNode(`${n}path`),t.namedNode(`${n}if`),t.namedNode(n)),t.quad(l[53],t.namedNode(`${a}first`),t.namedNode(`${n}OffsetExpression`),t.namedNode(n)),t.quad(l[53],t.namedNode(`${a}rest`),l[47],t.namedNode(n)),t.quad(l[72],t.namedNode(`${a}first`),t.namedNode(`${n}BlankNodeOrIRI`),t.namedNode(n)),t.quad(l[72],t.namedNode(`${a}rest`),l[42],t.namedNode(n)),t.quad(l[70],t.namedNode(`${a}first`),t.namedNode(`${n}PathExpression`),t.namedNode(n)),t.quad(l[70],t.namedNode(`${a}rest`),l[65],t.namedNode(n)),t.quad(l[38],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[38],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[38],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[38],t.namedNode(`${n}path`),t.namedNode(`${n}predicate`),t.namedNode(n)),t.quad(l[39],t.namedNode(`${n}and`),l[74],t.namedNode(n)),t.quad(l[39],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[39],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[39],t.namedNode(`${n}node`),t.namedNode(`${s}ListShape`),t.namedNode(n)),t.quad(l[39],t.namedNode(`${n}path`),t.namedNode(`${n}union`),t.namedNode(n)),t.quad(l[66],t.namedNode(`${a}first`),t.namedNode(`${n}UnionExpression`),t.namedNode(n)),t.quad(l[66],t.namedNode(`${a}rest`),l[49],t.namedNode(n)),t.quad(l[10],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[10],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[10],t.namedNode(`${n}path`),t.namedNode(`${n}else`),t.namedNode(n)),t.quad(l[17],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[17],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[17],t.namedNode(`${n}node`),t.namedNode(`${n}NodeExpression`),t.namedNode(n)),t.quad(l[17],t.namedNode(`${n}path`),t.namedNode(`${n}minus`),t.namedNode(n)),t.quad(l[74],t.namedNode(`${a}first`),l[75],t.namedNode(n)),t.quad(l[74],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n)),t.quad(l[73],t.namedNode(`${a}first`),l[75],t.namedNode(n)),t.quad(l[73],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n)),t.quad(l[31],t.namedNode(`${n}datatype`),t.namedNode(`${i}string`),t.namedNode(n)),t.quad(l[31],t.namedNode(`${n}maxCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[31],t.namedNode(`${n}minCount`),t.literal("1",t.namedNode(`${i}integer`)),t.namedNode(n)),t.quad(l[31],t.namedNode(`${n}path`),t.namedNode(`${n}construct`),t.namedNode(n)),t.quad(l[43],t.namedNode(`${a}first`),t.namedNode(`${n}IRIOrLiteral`),t.namedNode(n)),t.quad(l[43],t.namedNode(`${a}rest`),t.namedNode(`${a}nil`),t.namedNode(n))]})({factory:this.factory}),n=this.factory.dataset(t.concat([...e]));this.$shapes=wt({dataset:n,factory:this.factory}),this.shapesGraph=new Yn(this)}nodeConformsToShape(e,t){const n=this.shapesGraph.getShape(t);try{return this.depth++,!this.validationEngine.validateNodeAgainstShape(e,n,this.$data)}finally{this.depth--}}};var ra=function(e,t,n,a){return new(n||(n=Promise))((function(o,d){function r(e){try{s(a.next(e))}catch(e){d(e)}}function i(e){try{s(a.throw(e))}catch(e){d(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,i)}s((a=a.apply(e,t||[])).next())}))};class ia extends HTMLElement{static get observedAttributes(){return Fe.dataAttributes()}constructor(e){super(),this.shape=null,this.attachShadow({mode:"open"}),this.form=document.createElement("form"),this.config=new Fe(e,this.form),this.form.addEventListener("change",(e=>{e.stopPropagation(),this.config.editMode&&this.validate(!0).then((e=>{this.dispatchEvent(new CustomEvent("change",{bubbles:!0,cancelable:!1,composed:!0,detail:{valid:e}}))})).catch((e=>{console.log(e)}))}))}connectedCallback(){this.shadowRoot.prepend(this.form)}attributeChangedCallback(){this.config.updateAttributes(this),this.initialize()}initialize(){clearTimeout(this.initDebounceTimeout),this.initDebounceTimeout=setTimeout((()=>ra(this,void 0,void 0,(function*(){this.form.replaceChildren(document.createTextNode(this.config.attributes.loading));try{yield this.config.loader.loadGraphs(),this.form.replaceChildren();const e=this.findRootShaclShapeSubject();if(e){this.form.classList.forEach((e=>{this.form.classList.remove(e)})),this.form.classList.toggle("mode-edit",this.config.editMode),this.form.classList.toggle("mode-view",!this.config.editMode),this.config.theme.apply(this.form);const t=[this.config.theme.stylesheet];for(const e of Object.entries(de).map((e=>e[1])))e.stylesheet&&t.push(e.stylesheet);if(this.shadowRoot.adoptedStyleSheets=t,this.shape=new ye(e,this.config,this.config.attributes.valueSubject?m.namedNode(this.config.attributes.valueSubject):void 0),this.form.appendChild(this.shape),this.config.editMode){if(null!==this.config.attributes.submitButton){const e=this.config.theme.createButton(this.config.attributes.submitButton||"Submit",!0);e.addEventListener("click",(e=>{e.preventDefault(),this.form.reportValidity()&&this.validate().then((e=>{var t;e?this.dispatchEvent(new Event("submit",{bubbles:!0,cancelable:!0})):null===(t=this.form.querySelector(":scope .invalid > .editor"))||void 0===t||t.focus()}))})),this.form.appendChild(e)}yield this.validate(!0)}}else if(this.config.shapesGraph.size>0)throw new Error("shacl root node shape not found")}catch(e){console.error(e);const t=document.createElement("div");t.innerText=String(e),this.form.replaceChildren(t)}}))),200)}serialize(e="text/turtle",t=this.toRDF()){return function(e,t,n){if("application/ld+json"===t)return function(e){const t=[];for(const n of e){const e={"@id":n.subject.id};if(n.predicate===I)e["@type"]=n.object.id;else{let t=n.object.value;n.object instanceof h?n.object.language?t={"@language":n.object.language,"@value":n.object.value}:n.object.datatype&&n.object.datatype.value!==`${w}#string`&&(t={"@type":n.object.datatype.value,"@value":n.object.value}):t={"@id":n.object.id},e[n.predicate.value]=t}t.push(e)}return JSON.stringify(t)}(e);{const a=new te({format:t,prefixes:n});a.addQuads(e);let o="";return a.end(((e,t)=>{e&&console.error(e),o=t})),o}}(t.getQuads(null,null,null,null),e,this.config.prefixes)}toRDF(e=new be){var t;return null===(t=this.shape)||void 0===t||t.toRDF(e),e}registerPlugin(e){re(e),this.initialize()}setTheme(e){this.config.theme=e,this.initialize()}setClassInstanceProvider(e){this.config.classInstanceProvider=e,this.initialize()}validate(){return ra(this,arguments,void 0,(function*(e=!1){var t,n,a;for(const e of this.form.querySelectorAll(":scope .validation-error"))e.remove();for(const e of this.form.querySelectorAll(":scope .property-instance"))e.classList.remove("invalid"),(null===(t=e.querySelector(":scope > .editor"))||void 0===t?void 0:t.value)?e.classList.add("valid"):e.classList.remove("valid");this.config.shapesGraph.deleteGraph(""),null===(n=this.shape)||void 0===n||n.toRDF(this.config.shapesGraph);const o=yield new da(this.config.shapesGraph).validate(this.config.shapesGraph);for(const t of o.results){const n=t.focusNode;if(t.path){const a=t.path;let o=this.form.querySelectorAll(`:scope [data-node-id='${n.id}'] [data-path='${a.id}'] > .editor`);0===o.length&&(o=this.form.querySelectorAll(`:scope [data-node-id='${n.id}'] [data-path='${a.id}']`));for(const n of o)if(n.classList.contains("editor")){if(!e||n.value){let e=n.parentElement;e.classList.add("invalid"),e.classList.remove("valid"),e.appendChild(this.createValidationErrorDisplay(t));do{e.classList.contains("collapsible")&&e.classList.add("open"),e=e.parentElement}while(e)}}else e||(n.classList.add("invalid"),n.classList.remove("valid"),n.appendChild(this.createValidationErrorDisplay(t,"node")))}else e||null===(a=this.form.querySelector(`:scope [data-node-id='${n.id}']`))||void 0===a||a.prepend(this.createValidationErrorDisplay(t,"node"))}return o.conforms}))}createValidationErrorDisplay(e,t){var n,a;const o=document.createElement("span");if(o.classList.add("validation-error"),t&&o.classList.add(t),e)if((null===(n=e.message)||void 0===n?void 0:n.length)>0)for(const t of e.message)o.title+=t.value+"\n";else o.title=null===(a=e.sourceConstraintComponent)||void 0===a?void 0:a.value;return o}findRootShaclShapeSubject(){let e=null;if(this.config.attributes.shapeSubject){if(e=m.namedNode(this.config.attributes.shapeSubject),!this.config.shapesGraph.has(new $(e,I,T,S)))return void console.warn(`shapes graph does not contain requested root shape ${this.config.attributes.shapeSubject}`)}else if(this.config.attributes.valueSubject&&this.config.dataGraph.size>0){const t=m.namedNode(this.config.attributes.valueSubject),n=this.config.dataGraph.getQuads(t,I,null,null);if(0===n.length)return void console.warn(`value subject '${this.config.attributes.valueSubject}' has no ${I.id} statement`);for(const t of n)if(this.config.shapesGraph.has(new $(t.object,I,T,S))){e=t.object;break}if(!e){const t=this.config.shapesGraph.getQuads(null,P,n[0].object,S);if(0===t.length)return void console.error(`value subject '${this.config.attributes.valueSubject}' has no shacl shape definition in the shapes graph`);if(t.length>1&&console.warn(`value subject '${this.config.attributes.valueSubject}' has multiple shacl shape definitions in the shapes graph, choosing the first found (${t[0].subject})`),0===this.config.shapesGraph.getQuads(t[0].subject,I,T,S).length)return void console.error(`value subject '${this.config.attributes.valueSubject}' references a shape which is not a NodeShape (${t[0].subject})`);e=t[0].subject}}else{const t=this.config.shapesGraph.getQuads(null,I,T,S);if(0==t.length)return void console.warn("shapes graph does not contain any root shapes");t.length>1&&(console.warn("shapes graph contains",t.length,"root shapes. choosing first found which is",t[0].subject.value),console.info('hint: set the shape to use with attribute "data-shape-subject"')),e=t[0].subject}return e}}class sa extends G{constructor(e){super(e||"* {\n    box-sizing: border-box;\n}\n\n.editor:not([type='checkbox']) {\n    border: 1px solid #DDD;\n    padding: 2px 4px;\n}\n\n.property-instance {\n    align-items: center;\n}\n\n.property-instance label {\n    display: inline-block;\n    word-break: break-word;\n    line-height: 1em;\n    padding-top: 0.15em;\n    padding-right: 1em;\n    flex-shrink: 0;\n    position: relative;\n}\n\n.property-instance:not(:first-child)>label {\n    visibility: hidden;\n    max-height: 0;\n}\n\n.mode-edit .property-instance label {\n    width: 200px;\n    line-height: 1.4em;\n}\n\n.mode-edit .property-instance label.required::before {\n    content: '';\n}\n\n.mode-edit .property-instance label.required::after {\n    color: #df9500;\n    content: '*';\n    position: absolute;\n}\n\n.property-instance.valid::before {\n    content: '';\n}\n\n.property-instance.valid::before {\n    position: absolute;\n    color: rgb(59, 214, 59);\n    content: '✓';\n    left: -20px;\n}\n\n.validation-error {\n    position: absolute;\n    left: -20px;\n    margin-top: 2px;\n}\n\n.editor,\n.editor:not([type=\"checkbox\"]) {\n    margin-right: 10px;\n    border-radius: 5px;\n    padding: 5px;\n}\n\nbutton[type=\"button\"] {\n    font-size: 1em;\n    margin-top: 30px;\n    width: 100%;\n}\n\nshacl-node .add-button {\n    color: #fff;\n}"),this.idCtr=0}createDefaultTemplate(e,t,n,a,o){var d;a.id="e"+this.idCtr++,a.classList.add("editor"),(null==o?void 0:o.datatype)&&(a.shaclDatatype=o.datatype),void 0!==(null==o?void 0:o.minCount)&&(a.dataset.minCount=String(o.minCount)),(null==o?void 0:o.class)&&(a.dataset.class=o.class.value),(null==o?void 0:o.nodeKind)&&(a.dataset.nodeKind=o.nodeKind.value),a.value=(null==t?void 0:t.value)||(null===(d=null==o?void 0:o.defaultValue)||void 0===d?void 0:d.value)||"";const r=document.createElement("label");r.htmlFor=a.id,r.innerText=e,(null==o?void 0:o.description)&&r.setAttribute("title",o.description.value);const i=(null==o?void 0:o.description)?o.description.value:(null==o?void 0:o.pattern)?o.pattern:null;i&&a.setAttribute("placeholder",i),n&&(a.setAttribute("required","true"),r.classList.add("required"));const s=document.createElement("div");return s.appendChild(r),s.appendChild(a),s}createDateEditor(e,t,n,a){var o,d;const r=document.createElement("input");(null===(o=a.datatype)||void 0===o?void 0:o.value)===w+"dateTime"?(r.type="datetime-local",r.setAttribute("step","1")):r.type="date",r.classList.add("pr-0");const i=this.createDefaultTemplate(e,null,n,r,a);if(t)try{let e=new Date(t.value).toISOString();e=(null===(d=a.datatype)||void 0===d?void 0:d.value)===w+"dateTime"?e.slice(0,19):e.slice(0,10),r.value=e}catch(e){console.error(e,t)}return i}createTextEditor(e,t,n,a){let o;return!1===a.singleLine?(o=document.createElement("textarea"),o.rows=5):(o=document.createElement("input"),o.type="text",a.pattern&&(o.pattern=a.pattern)),a.minLength&&(o.minLength=a.minLength),a.maxLength&&(o.maxLength=a.maxLength),this.createDefaultTemplate(e,t,n,o,a)}createLangStringEditor(e,t,n,a){var o;const d=this.createTextEditor(e,t,n,a),r=d.querySelector(":scope .editor");let i;if(null===(o=a.languageIn)||void 0===o?void 0:o.length){i=document.createElement("select");for(const e of a.languageIn){const t=document.createElement("option");t.innerText=e.value,i.appendChild(t)}}else i=document.createElement("input"),i.maxLength=5,i.placeholder="lang?";return i.title="Language of the text",i.classList.add("lang-chooser"),i.addEventListener("change",(e=>{e.stopPropagation(),r&&(r.dataset.lang=i.value,r.dispatchEvent(new Event("change",{bubbles:!0})))})),t instanceof h&&(i.value=t.language),r.dataset.lang=i.value,r.after(i),d}createBooleanEditor(e,t,n,a){const o=document.createElement("select"),d=this.createDefaultTemplate(e,null,n,o,a);let r=!0;const i=[];i.push({label:"true",value:"true"}),i.push({label:"false",value:"false"});for(const e of i){const n=document.createElement("option"),a="string"==typeof e.value?e.value:e.value.value;n.innerHTML=e.label?e.label:a,n.value=a,t&&t.value===a&&(n.selected=!0),""===a&&(r=!1),o.appendChild(n)}if(r){const e=document.createElement("option");e.value="",t||(e.selected=!0),o.prepend(e)}return t&&(o.value=t.value),d}createFileEditor(e,t,n,a){const o=document.createElement("input");return o.type="file",o.addEventListener("change",(e=>{var t;if(null===(t=o.files)||void 0===t?void 0:t.length){e.stopPropagation();const t=new FileReader;t.readAsDataURL(o.files[0]),t.onload=()=>{var e;o.binaryData=btoa(t.result),null===(e=o.parentElement)||void 0===e||e.dispatchEvent(new Event("change",{bubbles:!0}))}}else o.binaryData=void 0})),this.createDefaultTemplate(e,t,n,o,a)}createNumberEditor(e,t,n,a){var o;const d=document.createElement("input");d.type="number",d.classList.add("pr-0");const r=void 0!==a.minInclusive?a.minInclusive:void 0!==a.minExclusive?a.minExclusive+1:void 0,i=void 0!==a.maxInclusive?a.maxInclusive:void 0!==a.maxExclusive?a.maxExclusive-1:void 0;return void 0!==r&&(d.min=String(r)),void 0!==i&&(d.max=String(i)),(null===(o=a.datatype)||void 0===o?void 0:o.value)!==w+"integer"&&(d.step="0.1"),this.createDefaultTemplate(e,t,n,d,a)}createListEditor(e,t,n,a,o){const d=document.createElement("select"),r=this.createDefaultTemplate(e,null,n,d,o);let i=!0;for(const e of a){const n=document.createElement("option"),a="string"==typeof e.value?e.value:e.value.value;n.innerHTML=e.label?e.label:a,n.value=a,t&&t.value===a&&(n.selected=!0),""===a&&(i=!1),d.appendChild(n)}if(i){const e=document.createElement("option");e.value="",t||(e.selected=!0),d.prepend(e)}return t&&(d.value=t.value),r}createButton(e,t){const n=document.createElement("button");return n.type="button",n.innerHTML=e,n}}class la extends ia{constructor(){super(new sa)}}window.customElements.define("shacl-form",la)})();var o=a.TS,d=a.aH,r=a.k_,i=a.a6,s=a.nt,l=a.Sx,u=a.E7,m=a.F3;export{o as Config,d as Loader,r as Plugin,i as ShaclForm,s as ShaclPropertyTemplate,l as Theme,u as findLabel,m as registerPlugin};